var e=Object.defineProperty,t=Object.prototype.hasOwnProperty,s=Object.getOwnPropertySymbols,i=Object.prototype.propertyIsEnumerable,r=(t,s,i)=>s in t?e(t,s,{enumerable:!0,configurable:!0,writable:!0,value:i}):t[s]=i,a=(e,a)=>{for(var o in a||(a={}))t.call(a,o)&&r(e,o,a[o]);if(s)for(var o of s(a))i.call(a,o)&&r(e,o,a[o]);return e};import{cM as o,cN as n,cO as h,cP as d,q as c,cQ as l,cR as p,cS as u,cT as g,cU as _,cV as m,cW as y,r as f,cX as b,cY as w,cZ as v,c_ as S,c$ as G,d0 as I,aJ as T,d1 as U,d2 as x,e as z,y as C,i as R,d3 as P,aQ as A,U as M,d4 as q,ct as F,d5 as k,d6 as O,aZ as j,X as B,k as H,d7 as D,x as V,d8 as L,d9 as N,da as Q,c4 as X,db as Y,bU as Z,dc as E,dd as J,de as W,aU as K}from"./vendor.1ee57f36.js";import{i as $,f as ee,g as te}from"./rbush.d43ba1fa.js";import{j as se,v as ie,n as re}from"./shapingUtils.66b0bc31.js";import{s as ae,L as oe,m as ne,n as he}from"./WGLMeshFactory.b3d89ebf.js";import{l as de,m as ce,a as le}from"./FeatureContainer.e42ac772.js";import{a as pe,i as ue,L as ge,k as _e}from"./ComputedAttributeStorage.637c93e6.js";import{n as me}from"./FeatureSetReader.3ec5c3db.js";import{I as ye}from"./Utils.88967ee0.js";import{z as fe,X as be,D as we,F as ve,E as Se,G as Ge,O as Ie,K as Te}from"./graphicsUtils.0fbe3e39.js";import{L as Ue,d as xe}from"./quantizationUtils.66d2dc60.js";class ze extends pe{constructor(e,t){super(e,t,null)}static from(e){const t=me.createInstance(),s=[],i=e.filter((e=>!!e.geometry));for(const r of i){const e=o(r.geometry);n(s,[r],e,!1,!1,"uid")}return new ze(t,s)}get geometryType(){const e=this._current;return e?e.geometryType:null}readGraphic(){return this._current}getCursor(){return this.copy()}copy(){const e=new ze(this.instance,this._features);return this.copyInto(e),e}}class Ce extends de{get hasLabels(){return!1}get labelsVisible(){return!1}renderChildren(e){this.attributeView.bindTextures(e.context),this.children.some((e=>e.hasData))&&(super.renderChildren(e),e.drawPhase===ye.MAP&&this._renderChildren(e),e.drawPhase===ye.HIGHLIGHT&&this._renderHighlight(e))}_renderChildren(e,t){for(const s of this.children)s.isReady&&s.hasData&&(s.commitChanges(e),e.context.setStencilFunction(514,s.stencilRef,255),s._displayList.replay(e,s,t))}_renderHighlight(e){const{painter:t}=e,s=t.effects.highlight;s.bind(e),this._renderChildren(e,s.defines),s.draw(e),s.unbind()}}const Re=new y,Pe=new y;function Ae(e){e.coords.length=0,e.lengths.length=0}class Me{constructor(){this.bounds=h(),this.graphic=null,this.size=[0,0,0,0]}static acquire(e=null,t,s,i,r,a){let o;return 0===Me._pool.length?o=new Me:(o=Me._pool.pop(),this._set.delete(o)),o.acquire(e,t,s,i,r,a),o}static release(e){e&&!this._set.has(e)&&(e.release(),this._pool.push(e),this._set.add(e))}static getCentroidQuantized(e,t){if(d(e.geometry)){const s=e.symbol;if(c(s))return null;if(fe(s.type)){const s=l(e.geometry);return Ue(t,{},{x:s[0],y:s[1]},!1,!1)}}return null}acquire(e=null,t,s,i,r,a){e&&this.set(e,t,s,i,r,a)}release(){this.graphic=null,this.symbolResource=null,this.geometry=null}get symbol(){return this.symbolResource.symbol}set(e,t,s,i,r,a){this.graphic=e,this.geometry=s,this.symbolResource=t,this.updateBounds(i,r,a)}updateBounds(e,t,s){be(this.bounds,this.size,this.symbolResource,this.geometry,e,t,s)}getGeometryQuantized(e){if(d(this.geometry)){const t=this.geometry.rings;if(1===t.length&&2===t[0].length)return xe(e,{paths:[[t[0][0],t[0][1]]]})}else if(p(this.geometry))return Ae(Re),Ae(Pe),u(Re,this.geometry),g(Pe,Re,this.geometry.hasZ,this.geometry.hasM,"esriGeometryPolyline",e.scale[0]),_(Re,Pe,this.geometry.hasZ,this.geometry.hasM,"esriGeometryPolyline",e),m(Re,this.geometry.hasZ,this.geometry.hasM);return xe(e,this.geometry)}}Me._pool=[],Me._set=new Set;const qe={minX:0,minY:0,maxX:0,maxY:0},Fe=h(),ke=[];function Oe(e,t,s,i,r){return qe.minX=t,qe.minY=s,qe.maxX=i,qe.maxY=r,e.search(qe)}class je{constructor(e,t,s,i,r,a){this._graphics=i,this._onAdd=r,this._onRemove=a,this._index=$(9,f("csp-restrictions")?e=>({minX:e.bounds[0],minY:e.bounds[1],maxX:e.bounds[2],maxY:e.bounds[3]}):[".bounds[0]",".bounds[1]",".bounds[2]",".bounds[3]"]),this._itemByGraphic=new Map,this._currentLevel=-1/0,this._tileInfoView=e,this._uidFieldName=s;const o=e.getClosestInfoForScale(t);o&&(this._currentLevel=o.level,this._resolution=this._tileInfoView.getTileResolution(o.level)),this._metersPerUnit=b(e.spatialReference)}hitTest(e,t,s,i,r){e=w(e,this._tileInfoView.spatialReference);const a=.5*i*s;Fe[0]=e-a,Fe[1]=t-a,Fe[2]=e+a,Fe[3]=t+a;const n=.5*i*(s+50),h=Oe(this._index,e-n,t-n,e+n,t+n);if(!h||0===h.length)return[];const d={x:e,y:t},c=[];let l;for(const p of h)if(p.graphic.visible)switch(o(p.geometry)){case"esriGeometryPoint":{const e=p.symbol;if(!e)continue;const t=p.geometry,{x:s,y:a}=t,o=i*this._metersPerUnit;let n;switch(e.type){case"esriTS":n=we(s,a,e,p.size,i,r);break;case"expanded-cim":n=Ge(s,a,e,i,o,r);break;case"esriSMS":case"esriPMS":n=ve(s,a,e,i,o,r)}v(n,d)&&c.push(p)}break;case"esriGeometryPolyline":{const s=p.symbol;if(!s||!s.layers.length)continue;const r=s.layers[0];l=1.5*i*window.devicePixelRatio*T(r.width),Se(p.geometry,e,t,l)&&c.push(p)}break;case"esriGeometryEnvelope":{const e=p.geometry,t=G(e.xmin,e.ymin,e.xmax,e.ymax);I(t,Fe)&&c.push(p);break}case"esriGeometryPolygon":{if(v(p.geometry,d)){c.push(p);break}const e=S(p.geometry);if(Math.abs(e.ymax-e.ymin)<5*i||Math.abs(e.xmax-e.xmin)<5*i){const t=G(e.xmin,e.ymin,e.xmax,e.ymax);I(t,Fe)&&c.push(p)}break}case"esriGeometryMultipoint":{const e=p.symbol;if(!e)continue;const t=p.geometry.points;let s;for(let a=0;a<t.length;a++)if(s="esriTS"===e.type?we(t[a][0],t[a][1],e,p.size,i,r):ve(t[a][0],t[a][1],e,i,i*this._metersPerUnit,r),v(s,d)){c.push(p);break}break}}return c.sort(((e,t)=>{const s=Ie(e.graphic),i=Ie(t.graphic);return s===i?t.zorder-e.zorder:s-i})),c.map((e=>e.graphic))}getGraphicsData(e,t,s){const i=Oe(this._index,t.bounds[0],t.bounds[1],t.bounds[2],t.bounds[3]);if(0===i.length||0===s.length)return[];i.sort(((e,t)=>e.zorder-t.zorder)),i[0].insertAfter=-1;for(let a=1;a<i.length;a++)i[a].insertAfter=i[a-1].graphic.uid;i.sort(((e,t)=>e.graphic.uid-t.graphic.uid)),s.sort(((e,t)=>e.uid-t.uid));let r,o=0,n=0;const h=[],d={originPosition:"upperLeft",scale:[t.resolution,t.resolution],translate:[t.bounds[0],t.bounds[3]]};for(const c of s){for(n=-2;o<i.length;)if(r=i[o],o++,c.uid===r.graphic.uid){n=r.insertAfter;break}if(!r.geometry||-2===n)continue;const t=r.getGeometryQuantized(d),s=a({},r.graphic.attributes);s[this._uidFieldName]=c.uid,null==r.groupId&&(r.groupId=e.createTemplateGroup(r.symbol,null)),h.push({centroid:Me.getCentroidQuantized(r,d),geometry:t,attributes:s,symbol:r.symbol,groupId:r.groupId,insertAfter:n,zorder:r.zorder})}return h.sort(((e,t)=>e.zorder-t.zorder)),h}queryTileData(e,t){const s=50*t.resolution,i=U(t.bounds,s,h()),r=Oe(this._index,i[0],i[1],i[2],i[3]),a=[];return this._createTileGraphics(a,e,r,{originPosition:"upperLeft",scale:[t.resolution,t.resolution],translate:[t.bounds[0],t.bounds[3]]}),a}has(e){return this._itemByGraphic.has(e)}getBounds(e){return this._itemByGraphic.has(e)?this._itemByGraphic.get(e).bounds:null}addOrModify(e,t,s){if(!e)return;this.has(e)&&this.remove(e),this._onAdd(e);const i=Me.acquire(e,t,s,this._resolution,this._resolution*this._metersPerUnit,this._tileInfoView.spatialReference);return this._itemByGraphic.set(e,i),s&&this._index.insert(i),i.bounds}remove(e){if(!this._itemByGraphic.has(e))return;this._onRemove(e);const t=this._itemByGraphic.get(e);this._index.remove(t),this._itemByGraphic.delete(e)}updateZ(){const e=this._graphics.items;let t,s;for(let i=0;i<e.length;i++)s=e[i],t=this._itemByGraphic.get(s),t&&(t.zorder=i)}update(e,t,s){const i=this._itemByGraphic.get(e);i.groupId=null;const r=x(i.bounds);return i.size[0]=i.size[1]=0,this._index.remove(i),i.set(e,t,s,this._resolution,this._resolution*this._metersPerUnit,this._tileInfoView.spatialReference),s&&this._index.insert(i),{oldBounds:r,newBounds:i.bounds}}updateLevel(e){if(this._currentLevel===e)return;this._currentLevel=e;const t=this._tileInfoView.getTileResolution(e);this._resolution=t,this._index.clear(),ke.length=0,this._itemByGraphic.forEach((e=>{e.updateBounds(this._resolution,this._resolution*this._metersPerUnit,this._tileInfoView.spatialReference),e.geometry&&ke.push(e)})),this._index.load(ke)}clear(){this._itemByGraphic.clear(),this._index.clear()}_createTileGraphics(e,t,s,i){const r=this._uidFieldName;let o,n,h,d;s.sort(((e,t)=>e.zorder-t.zorder));for(let c=0;c<s.length;c++){h=s[c],o=h.graphic,n=h.getGeometryQuantized(i),d=0===c?-1:s[c-1].graphic.uid;const l=a({},h.graphic.attributes);l[r]=o.uid,null==h.groupId&&(h.groupId=t.createTemplateGroup(h.symbol,null)),e.push({centroid:Me.getCentroidQuantized(h,i),geometry:n,attributes:l,symbol:h.symbol,groupId:h.groupId,insertAfter:d,zorder:h.zorder})}}}const Be=e=>{let t=class extends(P(e)){constructor(){super(...arguments),this.graphics=null,this.renderer=null,this.view=null}};return z([C()],t.prototype,"graphics",void 0),z([C()],t.prototype,"renderer",void 0),z([C()],t.prototype,"updating",void 0),z([C()],t.prototype,"view",void 0),t=z([R("esri.views.layers.GraphicsView")],t),t};function He(e,t,s){if(s.has(e))return s.get(e);const i={tile:t,addedOrModified:[],removed:[]};return s.set(e,i),i}let De=class extends(Be(A(K))){constructor(e){super(e),this._storage=new ue,this._displayIds=new Map,this._tiles=new Map,this._graphicStoreUpdate=!1,this._graphicsSet=new Set,this._matcher=M(null),this._tileUpdateSet=new Set,this._tilesToUpdate=new Map,this._graphicIdToAbortController=new Map,this._attached=!1,this._highlightIds=new Map,this._updatingGraphicsTimer=null,this._processing=!1,this._needsProcessing=!1,this._pendingUpdate={added:new Set,updated:new Set,removed:new Set},this.lastUpdateId=-1,this.updateRequested=!1,this.graphicUpdateHandler=this.graphicUpdateHandler.bind(this),this._processAnalyzedGraphics=this._processAnalyzedGraphics.bind(this),this._graphicsChangeHandler=this._graphicsChangeHandler.bind(this)}_createMatcher(e,t){if(e){const s=se({indexCount:0,fields:{}},"feature",e);this._matcher=ae(s,t,null)}}_createDisplayId(e){return this._displayIds.has(e)||this._displayIds.set(e,this._storage.createDisplayId()),this._displayIds.get(e)}initialize(){this._tileStore=new ge(this.view.featuresTilingScheme),this.container=new Ce(this.view.featuresTilingScheme),this._attributeStore=new _e({type:"local",initialize:e=>M(this.container.attributeView.initialize(e)),update:e=>this.container.attributeView.requestUpdate(e),render:()=>this.container.requestRender()},q()),this._graphicStore=new je(this.view.featuresTilingScheme,this.view.state.scale,this.uid,this.graphics,(e=>{this._createDisplayId(e.uid),this._setFilterState(e.uid,e.visible)}),(e=>{const t=this._displayIds.get(e.uid);this._displayIds.delete(e.uid),this._storage.releaseDisplayId(t)}));const e=new oe(this.container.getMaterialItems.bind(this.container),!0);this._createMatcher(this.renderer,e),this._meshFactory=new ne(null,this.uid,e),this._templateStore=e,this.watch("renderer",(t=>{this._createMatcher(t,e);for(const e of this.graphics)this._pendingUpdate.updated.add(e);this.requestUpdate()})),this._tileStore.on("update",this._onTileUpdate.bind(this)),this.container.on("attach",(()=>{this.graphics.items.length>0&&this._graphicsChangeHandler({target:this.graphics,added:this.graphics.items,removed:[],moved:[]}),this.handles.add(this.graphics.on("change",this._graphicsChangeHandler),"graphics"),this._attached=!0,this.notifyChange("updating")}))}destroy(){this._updatingGraphicsTimer&&(clearTimeout(this._updatingGraphicsTimer),this._updatingGraphicsTimer=null,this.notifyChange("updating")),this.container.destroy(),this._set("graphics",null),this._graphicStore.clear(),this._tileStore.destroy(),this._attributeStore=null}get updating(){return!this._attached||null!==this._updatingGraphicsTimer||this._tileUpdateSet.size>0||this._tilesToUpdate.size>0}hitTest(e,t){if(!this.view||!this.view.position)return M();const s=this.view.toMap(F(e,t));return this.searchFeatures(s).then((e=>e&&e.length?e[0]:null))}async searchFeatures(e,t=2){return this._graphicStore.hitTest(e.x,e.y,t,this.view.state.resolution,this.view.state.rotation)}update(e){const t=e.state,s=this.view.featuresTilingScheme.getClosestInfoForScale(t.scale).level;if(this._graphicStore.updateLevel(s),this._tileStore.setViewState(t),this._graphicStoreUpdate=!0,this.updateRequested=!1,this._pendingUpdate.updated.size>0){if(!this._processing)return void this._updateGraphics();this._needsProcessing=!0}}viewChange(){this.requestUpdate()}requestUpdate(){this.updateRequested||(this.updateRequested=!0,this.requestUpdateCallback())}processUpdate(e){this.updateRequested&&(this.updateRequested=!1,this.update(e))}graphicUpdateHandler(e){const{graphic:t,property:s,newValue:i}=e,r=t;switch(s){case"attributes":break;case"geometry":case"symbol":this._pendingUpdate.updated.add(r),this.requestUpdate();break;case"visible":this._setFilterState(r.uid,i),this._attributeStore.sendUpdates()}}addHighlight(e){for(const t of e)if(this._highlightIds.has(t)){const e=this._highlightIds.get(t);this._highlightIds.set(t,e+1)}else this._highlightIds.set(t,1);this._updateHighlight()}removeHighlight(e){for(const t of e)if(this._highlightIds.has(t)){const e=this._highlightIds.get(t)-1;0===e?this._highlightIds.delete(t):this._highlightIds.set(t,e)}this._updateHighlight()}_updateHighlight(){const e=Array.from(this._highlightIds.keys()),t=e.map((e=>this._displayIds.get(e)));this._attributeStore.setHighlight(e,t)}_getIntersectingTiles(e){const t=this._graphicStore.getBounds(e);return t&&0!==k(t)&&0!==O(t)?this._tileStore.boundsIntersections(t):[]}_updateTile(e){const t=e.tile,s=this._getGraphicsData(this._templateStore,t,e.addedOrModified);return this._processGraphics(s).then((s=>(this._patchTile(t.key,{type:"update",addOrUpdate:s,remove:e.removed,end:!0}),s)))}_patchTile(e,t){if(!this._tiles.has(e))return;const s=this._tiles.get(e);this.container.onTileData(s,t),this.container.requestRender()}_graphicsChangeHandler(e){for(const t of e.added)this._pendingUpdate.added.add(t);for(const t of e.moved)this._pendingUpdate.added.add(t);for(const t of e.removed)this._pendingUpdate.added.has(t)?this._pendingUpdate.added.delete(t):this._pendingUpdate.removed.add(t);this._processing?this._needsProcessing=!0:this._updateGraphics()}_getGraphicsToUpdate(){const e={added:[],removed:[],updated:[]},t=this._pendingUpdate;for(const s of this.graphics.items)t.added.has(s)?e.added.push(s):t.updated.has(s)&&e.updated.push(s);for(const s of t.removed)this._graphicStore.has(s)&&e.removed.push(s);return t.added.clear(),t.removed.clear(),t.updated.clear(),e}async _updateGraphics(){this._processing=!0;const{added:e,removed:t,updated:s}=this._getGraphicsToUpdate(),i=this._tilesToUpdate;let r;try{if(!this._graphicStoreUpdate){const e=this.view.state,t=this.view.featuresTilingScheme.getClosestInfoForScale(e.scale).level;this._graphicStore.updateLevel(t),this._tileStore.setViewState(e)}const a=[],o=new Array(e.length+t.length);for(let e=0;e<s.length;e++){const t=s[e],n=this._getIntersectingTiles(t);for(const e of n)r=e.id,He(r,e,i).removed.push(this._displayIds.get(t.uid));a.push(this._updateGraphic(t,null)),o[e]=t}const n=s.length;for(let t=0;t<e.length;t++){const s=e[t];o[n+t]=s,this._graphicsSet.add(s),a.push(this.addGraphic(s))}for(const e of t){this._abortProcessingGraphic(e.uid);const t=this._getIntersectingTiles(e);for(const s of t)r=s.id,He(r,s,i).removed.push(this._displayIds.get(e.uid));this._graphicsSet.delete(e),this._graphicStore.remove(e)}let h;this._flipUpdatingGraphics(),await j(a);for(let e=0;e<o.length;e++){h=o[e];const t=this._getIntersectingTiles(h);for(const e of t)r=e.id,He(r,e,i).addedOrModified.push(h)}this._graphicStore.updateZ();const d=[];for(const[e,t]of i)d.push(this._updateTile(t));await j(d)}catch(a){}i.clear(),this.notifyChange("updating"),this._processing=!1,this._needsProcessing&&(this._needsProcessing=!1,this._updateGraphics())}_getArcadeInfo(e){const t=(e.attributes?Object.keys(e.attributes):[]).map((t=>({name:t,alias:t,type:"string"==typeof e.attributes[t]?"esriFieldTypeString":"esriFieldTypeDouble"})));return c(e.geometry)?null:{geometryType:o(e.geometry),spatialReference:B.fromJSON(e.geometry.spatialReference),fields:t}}async _getSymbolForGraphic(e,t){return H(e.symbol)?e.symbol:H(this.renderer)?this.renderer.getSymbolAsync(e,{scale:this.view.scale,abortOptions:t}):this._getNullSymbol(e)}async _getSymbolResources(e,t){if(!this.container.stage)return M(null);const s=this._getArcadeInfo(e),i=await this._getSymbolForGraphic(e,t),r=ie(i),a=await he(r,s,t);if("esriTS"===a.type){const e=[],[t]=re(a.text);for(let r=0;r<t.length;r++)e.push(t.charCodeAt(r));const s={symbol:a,id:0,glyphIds:e},[{mosaicItem:i}]=await this.container.getMaterialItems([s]);return{symbol:a,mosaicItem:i}}return{symbol:a,mosaicItem:null}}async _projectAndNormalizeGeometry(e){if(c(e.geometry))return M(null);let t=e.geometry;if(d(t)){const e=t.rings;t.rings=e}else if(p(t)){const e=t.paths;t.paths=e}else D(t)&&(t=V.fromExtent(t));return ee(t.spatialReference,this.view.spatialReference).then((()=>{const e=Te(t),s=te(e,t.spatialReference,this.view.spatialReference);return L(s),s}))}_onTileUpdate(e){const t=N(this.view.spatialReference);if(e.added&&e.added.length>0)for(const s of e.added)this._addNewTile(s,t);if(e.removed&&e.removed.length>0)for(const s of e.removed)this._removeTile(s.key)}addGraphic(e){this._abortProcessingGraphic(e.uid);const t=Q();this._graphicIdToAbortController.set(e.uid,t);const s={signal:t.signal};return this._addOrUpdateGraphic(e,s).then((()=>{this._graphicIdToAbortController.delete(e.uid)})).catch((t=>{if(this._graphicIdToAbortController.delete(e.uid),!X(t))throw t}))}async _updateGraphic(e,t){const s=this._projectAndNormalizeGeometry(e),i=this._getSymbolResources(e,t),[r,a]=await j([s,i]);this._graphicStore.addOrModify(e,a,r)}async _addOrUpdateGraphic(e,t){const s=this._projectAndNormalizeGeometry(e),i=this._getSymbolResources(e,t);try{const[t,r]=await j([s,i]);this._addProjectedGraphic(e,r,t)}catch(r){if(!X(r))throw r}}_addProjectedGraphic(e,t,s){this._graphicsSet.has(e)&&this._graphicStore.addOrModify(e,t,s)}_addTile(e){const t=h();this.view.featuresTilingScheme.getTileBounds(t,e);const s=new ce(e,t,!0);return this._tiles.set(e,s),this.container.addChild(s),s}_addNewTile(e,t){const s=this._addTile(e.key),i=this._graphicStore.queryTileData(this._templateStore,e);if(t){const s=Math.round((t.valid[1]-t.valid[0])/e.resolution);for(const e of i)e.geometry&&Y(e.geometry)&&this._wrapPoints(e,s)}const r=e.key;this._tileUpdateSet.add(e.key),this.notifyChange("updating"),this._processGraphics(i).then((e=>{const t={type:"update",clear:!0,addOrUpdate:e,remove:[],end:!0};s.setData(t),this._tileUpdateSet.delete(r),this.notifyChange("updating")})).catch((e=>{if(this._tileUpdateSet.delete(r),this.notifyChange("updating"),!X(e))throw e}))}_removeTile(e){if(!this._tiles.has(e))return;const t=this._tiles.get(e);this.container.removeChild(t),t.destroy(),this._tiles.delete(e)}_setFilterState(e,t){const s=this._displayIds.get(e),i=this._attributeStore.getHighlightFlag(e);this._attributeStore.setData(s,0,0,i|(t?Z:0))}_getGraphicsData(e,t,s){const i=N(this.view.spatialReference),r=this._graphicStore.getGraphicsData(e,t,s);if(i){const e=Math.round((i.valid[1]-i.valid[0])/t.resolution);for(const t of r)t.geometry&&Y(t.geometry)&&this._wrapPoints(t,e)}return r}_wrapPoints(e,t){const s=e.geometry;512===t?s.x<20?e.geometry={points:[[s.x,s.y],[t,0]]}:s.x>492&&(e.geometry={points:[[s.x,s.y],[-t,0]]}):s.x<-20?e.geometry={points:[[s.x,s.y],[t,0]]}:s.x>532&&(e.geometry={points:[[s.x,s.y],[-t,0]]})}async _processGraphics(e,t){if(!e||!e.length||!this._meshFactory)return null;const s=ze.from(e),i=this._meshFactory;return await i.analyzeGraphics(s,await this._matcher,null,null,t),this._attributeStore.sendUpdates(),this._processAnalyzedGraphics(s)}_processAnalyzedGraphics(e){const t=this._meshFactory,s=t.createMeshData(e.getApproximateSize()),i=e.getCursor();for(;i.next();){const e=i.readGraphic();e.insertAfter=-1===e.insertAfter?-1:this._displayIds.get(e.insertAfter),e.displayId=this._displayIds.get(e.attributes[this.uid]),t.writeGraphic(s,i)}const r={};return s.encode(r,[]),le.decode(r)}_abortProcessingGraphic(e){this._graphicIdToAbortController.has(e)&&this._graphicIdToAbortController.get(e).abort()}_getNullSymbol(e){const t=e.geometry;return p(t)?E:d(t)||D(t)?J:W}_flipUpdatingGraphics(){this._updatingGraphicsTimer&&clearTimeout(this._updatingGraphicsTimer),this._updatingGraphicsTimer=setTimeout((()=>{this._updatingGraphicsTimer=null,this.notifyChange("updating")}),160),this.notifyChange("updating")}};z([C({constructOnly:!0})],De.prototype,"requestUpdateCallback",void 0),z([C({constructOnly:!0})],De.prototype,"graphics",void 0),z([C()],De.prototype,"updating",null),z([C()],De.prototype,"view",void 0),z([C()],De.prototype,"updateRequested",void 0),De=z([R("esri.views.2d.layers.support.GraphicsView2D")],De);var Ve=De;export{Ve as Q};
