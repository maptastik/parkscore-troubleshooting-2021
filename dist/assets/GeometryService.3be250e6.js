var e=Object.defineProperty,t=Object.prototype.hasOwnProperty,r=Object.getOwnPropertySymbols,n=Object.prototype.propertyIsEnumerable,s=(t,r,n)=>r in t?e(t,r,{enumerable:!0,configurable:!0,writable:!0,value:n}):t[r]=n,i=(e,i)=>{for(var o in i||(i={}))t.call(i,o)&&s(e,o,i[o]);if(r)for(var o of r(i))n.call(i,o)&&s(e,o,i[o]);return e};import{ai as o,fh as a,cM as l,x as c,eG as u,H as N,e as p,y as f,i as y,B as m,a as T,e_ as g,a0 as I,fg as S}from"./vendor.1ee57f36.js";import{e as _,n as d}from"./utils.c5e4538c.js";import{p as O}from"./ProjectParameters.6c7b8c60.js";function R(e){return{geometryType:l(e[0]),geometries:e.map((e=>e.toJSON()))}}function U(e,t,r){const n=a(t);return e.map((e=>{const t=n.fromJSON(e);return t.spatialReference=r,t}))}const h=new N({MGRS:"mgrs",USNG:"usng",UTM:"utm",GeoRef:"geo-ref",GARS:"gars",DMS:"dms",DDM:"ddm",DD:"dd"});const E=new N({109006:"centimeters",9102:"decimal-degrees",109005:"decimeters",9002:"feet",109009:"inches",9036:"kilometers",9001:"meters",9035:"miles",109007:"millimeters",109012:"nautical-miles",9096:"yards"});let A=class extends T{constructor(e){super(e),this.deviationUnit=null,this.geometries=null,this.maxDeviation=null}};p([f({type:String,json:{write:!0}})],A.prototype,"deviationUnit",void 0),p([f({json:{read:{reader:e=>e?e.map((e=>u(e))):null},write:{writer:(e,t)=>{t.geometries=e.map((e=>e.toJSON()))}}}})],A.prototype,"geometries",void 0),p([f({type:Number,json:{write:!0}})],A.prototype,"maxDeviation",void 0),A=p([y("esri.tasks.support.GeneralizeParameters")],A),A.from=m(A);var J=A;async function v(e,t,r){const n=(t=J.from(t)).toJSON(),s=function(e){const{geometries:t,deviationUnit:r,maxDeviation:n}=e.toJSON(),s={maxDeviation:n};return t&&t.length&&(s.geometries=JSON.stringify({geometryType:l(t[0]),geometries:t}),s.sr=JSON.stringify(t[0].spatialReference)),E.write(r,s,"deviationUnit"),s}(t),a=_(e),c=i(i(i({},a.query),{f:"json"}),s),N=n.geometries[0].spatialReference,p=d(c,r);return o(a.path+"/generalize",p).then((({data:e})=>(e.geometries||[]).map((e=>u(e).set({spatialReference:N})))))}const w=new N({preserveShape:"preserve-shape"});let j=class extends T{constructor(e){super(e),this.calculationType=null,this.geodesic=null,this.lengthUnit=null,this.polylines=null}};p([f({type:String,json:{write:!0}})],j.prototype,"calculationType",void 0),p([f({type:Boolean,json:{write:!0}})],j.prototype,"geodesic",void 0),p([f({json:{write:!0}})],j.prototype,"lengthUnit",void 0),p([f({type:[g],json:{read:{reader:e=>e?e.map((e=>u(e))):null},write:{writer:(e,t)=>{t.polylines=e.map((e=>e.toJSON()))}}}})],j.prototype,"polylines",void 0),j=p([y("esri.tasks.support.LengthsParameters")],j),j.from=m(j);var D=j;async function L(e,t,r){const n=function(e){const{polylines:t,lengthUnit:r,geodesic:n,calculationType:s}=e.toJSON(),i={};i.polylines=JSON.stringify(t);const o=e.polylines[0].spatialReference;return i.sr=o.wkid?o.wkid:JSON.stringify(o.toJSON()),r&&(i.lengthUnit=r),n&&(i.geodesic=n),s&&(i.calculationType=w.toJSON(s)),i}(t=D.from(t)),s=_(e),a=i(i(i({},s.query),{f:"json"}),n),l=d(a,r);return o(s.path+"/lengths",l).then((({data:e})=>e))}const M=new N({esriGeometryOffsetBevelled:"bevelled",esriGeometryOffsetMitered:"mitered",esriGeometryOffsetRounded:"rounded"}),C=new N({9001:"meters",9002:"feet",9036:"kilometers",9093:"miles",109012:"nautical-miles",109001:"yards"});let q=class extends T{constructor(e){super(e),this.bevelRatio=null,this.geometries=null,this.offsetDistance=null,this.offsetHow=null,this.offsetUnit=null}};p([f({type:Number,json:{write:!0}})],q.prototype,"bevelRatio",void 0),p([f({json:{read:{reader:e=>e?e.map((e=>u(e))):null},write:{writer:(e,t)=>{t.geometries=e.map((e=>e.toJSON()))}}}})],q.prototype,"geometries",void 0),p([f({type:Number,json:{write:!0}})],q.prototype,"offsetDistance",void 0),p([f({type:String,json:{write:!0}})],q.prototype,"offsetHow",void 0),p([f({type:String,json:{write:!0}})],q.prototype,"offsetUnit",void 0),q=p([y("esri.tasks.support.OffsetParameters")],q),q.from=m(q);var G=q;async function x(e,t,r){const n=function(e){const{geometries:t,bevelRatio:r,offsetDistance:n,offsetHow:s,offsetUnit:i}=e.toJSON(),o={bevelRatio:r,offsetDistance:n};return t&&t.length&&(o.geometries=JSON.stringify({geometryType:l(t[0]),geometries:t}),o.sr=JSON.stringify(t[0].spatialReference)),s&&(o.offsetHow=M.toJSON(s)),i&&(o.offsetUnit=C.toJSON(i)),o}(t=G.from(t)),s=_(e),a=i(i(i({},s.query),{f:"json"}),n),c=t.geometries[0].spatialReference,N=d(a,r);return o(s.path+"/offset",N).then((({data:e})=>(e.geometries||[]).map((e=>u(e).set({spatialReference:c})))))}const b=m(O);const H=new N({esriGeometryRelationCross:"cross",esriGeometryRelationDisjoint:"disjoint",esriGeometryRelationIn:"in",esriGeometryRelationInteriorIntersection:"interior-intersection",esriGeometryRelationIntersection:"intersection",esriGeometryRelationLineCoincidence:"line-coincidence",esriGeometryRelationLineTouch:"line-touch",esriGeometryRelationOverlap:"overlap",esriGeometryRelationPointTouch:"point-touch",esriGeometryRelationTouch:"touch",esriGeometryRelationWithin:"within",esriGeometryRelationRelation:"relation"});let k=class extends T{constructor(e){super(e),this.geometries1=null,this.geometries2=null,this.relation=null,this.relationParameter=null}};p([f({json:{read:{reader:e=>e?e.map((e=>u(e))):null},write:{writer:(e,t)=>{t.geometries1=e.map((e=>e.toJSON()))}}}})],k.prototype,"geometries1",void 0),p([f({json:{read:{reader:e=>e?e.map((e=>u(e))):null},write:{writer:(e,t)=>{t.geometries2=e.map((e=>e.toJSON()))}}}})],k.prototype,"geometries2",void 0),p([f({type:String,json:{write:!0}})],k.prototype,"relation",void 0),p([f({type:String,json:{write:!0}})],k.prototype,"relationParameter",void 0),k=p([y("esri.tasks.support.RelationParameters")],k),k.from=m(k);var Y=k;async function P(e,t,r){const n=function(e){const{geometries1:t,geometries2:r,relation:n,relationParameter:s}=e.toJSON(),i={};if(t&&t.length){i.geometries1=JSON.stringify({geometryType:l(t[0]),geometries:t});const e=t[0].spatialReference;i.sr=e.wkid?e.wkid:JSON.stringify(e)}return r&&r.length>0&&(i.geometries2=JSON.stringify({geometryType:l(r[0]),geometries:r})),n&&(i.relation=H.toJSON(n)),s&&(i.relationParam=s),i}(t=Y.from(t)),s=_(e),a=i(i(i({},s.query),{f:"json"}),n),c=d(a,r);return o(s.path+"/relation",c).then((({data:e})=>e.relations))}const B=new N({0:"default-curve-extension",1:"relocate-ends",2:"keep-end-attributes",4:"no-end-attributes",8:"no-extend-at-from",16:"no-extend-at-to"});let F=class extends T{constructor(e){super(e),this.extendHow="default-curve-extension",this.polylines=null,this.trimExtendTo=null}};p([f({type:String,json:{write:!0}})],F.prototype,"extendHow",void 0),p([f({type:[g],json:{read:{reader:e=>e?e.map((e=>u(e))):null},write:{writer:(e,t)=>{t.polylines=e.map((e=>e.toJSON()))}}}})],F.prototype,"polylines",void 0),p([f({json:{read:{reader:e=>e?u(e):null},write:{writer:(e,t)=>{t.trimExtendTo=e.toJSON()}}}})],F.prototype,"trimExtendTo",void 0),F=p([y("esri.tasks.support.TrimExtendParameters")],F),F.from=m(F);var K=F;async function Q(e,t,r){const n=function(e){const{extendHow:t,polylines:r,trimExtendTo:n}=e.toJSON(),s={};return s.extendHow=B.toJSON(t),r&&r.length&&(s.polylines=JSON.stringify(r),s.sr=JSON.stringify(r[0].spatialReference)),n&&(s.trimExtendTo=JSON.stringify(n)),s}(t=K.from(t)),s=_(e),a=i(i(i({},s.query),{f:"json"}),n),l=t.sr,c=d(a,r);return o(s.path+"/trimExtend",c).then((({data:e})=>(e.geometries||[]).map((({paths:e})=>new g({spatialReference:l,paths:e})))))}let V=class extends S{constructor(e){super(e),this.url=null}areasAndLengths(e,t){return async function(e,t,r){const n=_(e),s=i(i(i({},n.query),{f:"json"}),t.toJSON()),a=d(s,r);return o(n.path+"/areasAndLengths",a).then((e=>e.data))}(this.url,e,t)}autoComplete(e,t,r){return async function(e,t,r,n){const s=t[0].spatialReference,a=_(e),l=i(i({},a.query),{f:"json",sr:JSON.stringify(s.toJSON()),polygons:JSON.stringify(R(t).geometries),polylines:JSON.stringify(R(r).geometries)}),u=d(l,n);return o(a.path+"/autoComplete",u).then((({data:e})=>(e.geometries||[]).map((({rings:e})=>new c({spatialReference:s,rings:e})))))}(this.url,e,t,r)}buffer(e,t){return async function(e,t,r){const n=_(e),s=i(i(i({},n.query),{f:"json"}),t.toJSON()),a=t.outSpatialReference||t.geometries[0].spatialReference,l=d(s,r);return o(n.path+"/buffer",l).then((e=>(e.data.geometries||[]).map((({rings:e})=>new c({spatialReference:a,rings:e})))))}(this.url,e,t)}convexHull(e,t){return async function(e,t,r){const n=t[0].spatialReference,s=_(e),a=i(i({},s.query),{f:"json",sr:JSON.stringify(n.toJSON()),geometries:JSON.stringify(R(t))}),l=d(a,r);return o(s.path+"/convexHull",l).then((({data:e})=>u(e.geometry).set({spatialReference:n})))}(this.url,e,t)}cut(e,t,r){return async function(e,t,r,n){const s=_(e),a=t[0].spatialReference,c=i(i({},n),{query:i(i({},s.query),{f:"json",sr:JSON.stringify(a),target:JSON.stringify({geometryType:l(t[0]),geometries:t}),cutter:JSON.stringify(r)})}),N=await o(s.path+"/cut",c),{cutIndexes:p,geometries:f=[]}=N.data;return{cutIndexes:p,geometries:f.map((e=>{const t=u(e);return t.spatialReference=a,t}))}}(this.url,e,t,r)}densify(e,t){return async function(e,t,r){const n=t.geometries[0].spatialReference,s=_(e),a=i(i(i({},s.query),{f:"json"}),t.toJSON()),l=d(a,r);return o(s.path+"/densify",l).then((({data:e})=>(e.geometries||[]).map((e=>u(e).set({spatialReference:n})))))}(this.url,e,t)}difference(e,t,r){return async function(e,t,r,n){const s=t[0].spatialReference,a=_(e);let c={query:i(i({},a.query),{f:"json",sr:JSON.stringify(s.toJSON()),geometries:JSON.stringify(R(t)),geometry:JSON.stringify({geometryType:l(r),geometry:r.toJSON()})})};return n&&(c=i(i({},n),c)),o(a.path+"/difference",c).then((({data:e})=>(e.geometries||[]).map((e=>u(e).set({spatialReference:s})))))}(this.url,e,t,r)}distance(e,t){return async function(e,t,r){const n=_(e),s=i(i(i({},n.query),{f:"json"}),t.toJSON()),a=d(s,r);return o(n.path+"/distance",a).then((({data:e})=>e&&e.distance))}(this.url,e,t)}fromGeoCoordinateString(e,t){return async function(e,t,r){const n={};null!=t.sr&&"object"==typeof t.sr?n.sr=t.sr.wkid||JSON.stringify(t.sr):n.sr=t.sr,n.strings=JSON.stringify(t.strings);const s=t.conversionType||"mgrs";n.conversionType=h.toJSON(s),n.conversionMode=t.conversionMode;const a=_(e),l=i(i(i({},a.query),{f:"json"}),n),c=d(l,r);return o(a.path+"/fromGeoCoordinateString",c).then((({data:e})=>e.coordinates))}(this.url,e,t)}generalize(e,t){return v(this.url,e,t)}intersect(e,t,r){return async function(e,t,r,n){const s=t[0].spatialReference,a=_(e),c=i(i({},a.query),{f:"json",sr:JSON.stringify(s.toJSON()),geometries:JSON.stringify(R(t)),geometry:JSON.stringify({geometryType:l(r),geometry:r.toJSON()})}),N=d(c,n);return o(a.path+"/intersect",N).then((({data:e})=>(e.geometries||[]).map((e=>u(e).set({spatialReference:s})))))}(this.url,e,t,r)}labelPoints(e,t){return function(e,t,r){const n=t.map((e=>e.toJSON())),s=t[0].spatialReference,a=_(e),l=i(i({},a.query),{f:"json",sr:s.wkid?s.wkid:JSON.stringify(s.toJSON()),polygons:JSON.stringify(n)}),c=d(l,r);return o(a.path+"/labelPoints",c).then((({data:e})=>(e.labelPoints||[]).map((e=>u(e).set({spatialReference:s})))))}(this.url,e,t)}lengths(e,t){return L(this.url,e,t)}offset(e,t){return x(this.url,e,t)}project(e,t){return async function(e,t,r){t=b(t);const n=_(e),s=i(i(i({},n.query),{f:"json"}),t.toJSON()),a=t.outSpatialReference,c=l(t.geometries[0]),u=d(s,r);return o(n.path+"/project",u).then((({data:{geometries:e}})=>U(e,c,a)))}(this.url,e,t)}relation(e,t){return P(this.url,e,t)}reshape(e,t,r){return async function(e,t,r,n){const s=t.spatialReference,a=_(e),c=i(i({},a.query),{f:"json",sr:JSON.stringify(s.toJSON()),target:JSON.stringify({geometryType:l(t),geometry:t.toJSON()}),reshaper:JSON.stringify(r.toJSON())}),N=d(c,n);return o(a.path+"/reshape",N).then((({data:e})=>u(e.geometry).set({spatialReference:s})))}(this.url,e,t,r)}simplify(e,t){return async function(e,t,r){const n="string"==typeof e?I(e):e,s=t[0].spatialReference,a=l(t[0]),c=i(i({},r),{query:i(i({},n.query),{f:"json",sr:s.wkid?s.wkid:JSON.stringify(s),geometries:JSON.stringify(R(t))})}),{data:u}=await o(n.path+"/simplify",c);return U(u.geometries,a,s)}(this.url,e,t)}toGeoCoordinateString(e,t){return async function(e,t,r){const n={};null!=t.sr&&"object"==typeof t.sr?n.sr=t.sr.wkid||JSON.stringify(t.sr):n.sr=t.sr,n.coordinates=JSON.stringify(t.coordinates);const s=t.conversionType||"mgrs";n.conversionType=h.toJSON(s),n.conversionMode=t.conversionMode,n.numOfDigits=t.numOfDigits,n.rounding=t.rounding,n.addSpaces=t.addSpaces;const a=_(e),l=i(i(i({},a.query),{f:"json"}),n),c=d(l,r);return o(a.path+"/toGeoCoordinateString",c).then((({data:e})=>e.strings))}(this.url,e,t)}trimExtend(e,t){return Q(this.url,e,t)}union(e,t){return async function(e,t,r){const n=t[0].spatialReference,s=_(e),a=i(i({},s.query),{f:"json",sr:JSON.stringify(n.toJSON()),geometries:JSON.stringify(R(t))}),l=d(a,r);return o(s.path+"/union",l).then((({data:e})=>u(e.geometry).set({spatialReference:n})))}(this.url,e,t)}};V.UNIT_METER=9001,V.UNIT_GERMAN_METER=9031,V.UNIT_FOOT=9002,V.UNIT_SURVEY_FOOT=9003,V.UNIT_CLARKE_FOOT=9005,V.UNIT_FATHOM=9014,V.UNIT_NAUTICAL_MILE=9030,V.UNIT_SURVEY_CHAIN=9033,V.UNIT_SURVEY_LINK=9034,V.UNIT_SURVEY_MILE=9035,V.UNIT_KILOMETER=9036,V.UNIT_CLARKE_YARD=9037,V.UNIT_CLARKE_CHAIN=9038,V.UNIT_CLARKE_LINK=9039,V.UNIT_SEARS_YARD=9040,V.UNIT_SEARS_FOOT=9041,V.UNIT_SEARS_CHAIN=9042,V.UNIT_SEARS_LINK=9043,V.UNIT_BENOIT_1895A_YARD=9050,V.UNIT_BENOIT_1895A_FOOT=9051,V.UNIT_BENOIT_1895A_CHAIN=9052,V.UNIT_BENOIT_1895A_LINK=9053,V.UNIT_BENOIT_1895B_YARD=9060,V.UNIT_BENOIT_1895B_FOOT=9061,V.UNIT_BENOIT_1895B_CHAIN=9062,V.UNIT_BENOIT_1895B_LINK=9063,V.UNIT_INDIAN_FOOT=9080,V.UNIT_INDIAN_1937_FOOT=9081,V.UNIT_INDIAN_1962_FOOT=9082,V.UNIT_INDIAN_1975_FOOT=9083,V.UNIT_INDIAN_YARD=9084,V.UNIT_INDIAN_1937_YARD=9085,V.UNIT_INDIAN_1962_YARD=9086,V.UNIT_INDIAN_1975_YARD=9087,V.UNIT_FOOT_1865=9070,V.UNIT_RADIAN=9101,V.UNIT_DEGREE=9102,V.UNIT_ARCMINUTE=9103,V.UNIT_ARCSECOND=9104,V.UNIT_GRAD=9105,V.UNIT_GON=9106,V.UNIT_MICRORADIAN=9109,V.UNIT_ARCMINUTE_CENTESIMAL=9112,V.UNIT_ARCSECOND_CENTESIMAL=9113,V.UNIT_MIL6400=9114,V.UNIT_BRITISH_1936_FOOT=9095,V.UNIT_GOLDCOAST_FOOT=9094,V.UNIT_INTERNATIONAL_CHAIN=109003,V.UNIT_INTERNATIONAL_LINK=109004,V.UNIT_INTERNATIONAL_YARD=109001,V.UNIT_STATUTE_MILE=9093,V.UNIT_SURVEY_YARD=109002,V.UNIT_50KILOMETER_LENGTH=109030,V.UNIT_150KILOMETER_LENGTH=109031,V.UNIT_DECIMETER=109005,V.UNIT_CENTIMETER=109006,V.UNIT_MILLIMETER=109007,V.UNIT_INTERNATIONAL_INCH=109008,V.UNIT_US_SURVEY_INCH=109009,V.UNIT_INTERNATIONAL_ROD=109010,V.UNIT_US_SURVEY_ROD=109011,V.UNIT_US_NAUTICAL_MILE=109012,V.UNIT_UK_NAUTICAL_MILE=109013,V.UNIT_SQUARE_INCHES="esriSquareInches",V.UNIT_SQUARE_FEET="esriSquareFeet",V.UNIT_SQUARE_YARDS="esriSquareYards",V.UNIT_ACRES="esriAcres",V.UNIT_SQUARE_MILES="esriSquareMiles",V.UNIT_SQUARE_MILLIMETERS="esriSquareMillimeters",V.UNIT_SQUARE_CENTIMETERS="esriSquareCentimeters",V.UNIT_SQUARE_DECIMETERS="esriSquareDecimeters",V.UNIT_SQUARE_METERS="esriSquareMeters",V.UNIT_ARES="esriAres",V.UNIT_HECTARES="esriHectares",V.UNIT_SQUARE_KILOMETERS="esriSquareKilometers",p([f()],V.prototype,"url",void 0),V=p([y("esri.tasks.GeometryService")],V);var z=V;export default z;
