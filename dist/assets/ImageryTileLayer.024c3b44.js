var e=Object.defineProperty,t=Object.prototype.hasOwnProperty,i=Object.getOwnPropertySymbols,r=Object.prototype.propertyIsEnumerable,s=(t,i,r)=>i in t?e(t,i,{enumerable:!0,configurable:!0,writable:!0,value:r}):t[i]=r,n=(e,n)=>{for(var a in n||(n={}))t.call(n,a)&&s(e,a,n[a]);if(i)for(var a of i(n))r.call(n,a)&&s(e,a,n[a]);return e};import{g as a,e as o,y as l,z as u,bv as c,X as h,fW as f,aC as d,i as p,ip as m,d9 as y,ai as g,k as x,cz as w,a as I,p as v,m as b,bk as T,c0 as R,aZ as S,U as C,da as _,c1 as M,l as k,bb as F,c2 as P,iq as O,a0 as D,ir as B,hD as N,L as z,N as L,P as H,R as E,S as J,T as A,aE as j,C as U,ae as q,hE as W,fZ as G,au as $,aw as V,b as Y}from"./vendor.1ee57f36.js";import{a as X,o as K,x as Z,T as Q,y as ee,f as te,u as ie,l as re}from"./rasterRendererHelper.4c9533eb.js";import{R as se,U as ne,r as ae,a as oe,I as le,b as ue,y as ce,p as he,S as fe,m as de,w as pe}from"./RasterSymbolizer.c129c216.js";import{c as me,U as ye,A as ge,o as xe,r as we,m as Ie,u as ve}from"./pixelUtils.d13a81d6.js";import{b as be,h as Te,w as Re,i as Se,m as Ce,x as _e,p as Me,y as ke,M as Fe,c as Pe,e as Oe}from"./RawBlockCache.0408d838.js";import"./index.4894e768.js";import"./LercCodec.7ceff0c9.js";const De=a.getLogger("esri.layers.mixins.ImageryTileMixin"),Be=e=>{let t=class extends e{constructor(){super(...arguments),this._rasterJobHandler={instance:null,refCount:0,connectionPromise:null},this.bandIds=null,this.copyright=null,this.fullExtent=null,this.interpolation="nearest",this.raster=null,this.rasterInfo=null,this.sourceJSON=null,this.spatialReference=null,this.tileInfo=null,this.symbolizer=null}set multidimensionalDefinition(e){this.raster&&(this._sliceId=this.raster.getSliceIndex(e)),this._set("multidimensionalDefinition",e)}set url(e){this._set("url",m(e,De))}set renderer(e){this._set("renderer",e),this.updateRenderer()}async updateRenderer(){if(!this.loaded)return;if(JSON.stringify(this._cachedRendererJson)===JSON.stringify(this.renderer))return;const e=this._rasterJobHandler.instance;e&&(this.symbolizer.rendererJSON=this.renderer.toJSON(),this.symbolizer.bind(),await e.updateSymbolizer(this.symbolizer),this._cachedRendererJson=this.renderer.toJSON())}async applyRenderer(e,t){const i=e&&e.pixelBlock;if(!(i&&i.pixels&&i.pixels.length>0))return null;let r;this.updateRenderer();const s=this._rasterJobHandler.instance,{bandIds:a}=this;return r=s?await s.symbolize(n(n({},e),{simpleStretchParams:t,bandIds:a})):this.symbolizer.symbolize(n(n({},e),{simpleStretchParams:t,bandIds:a})),r}getTileUrl(e,t,i){return"RasterTileServer"===this.raster.datasetFormat?`${this.url}/tile/${e}/${t}/${i}`:""}getCompatibleTileInfo(e,t){if(!this.loaded)return null;const i=y(e);return f.create({size:256,spatialReference:e,origin:i?{x:i.origin[0],y:i.origin[1]}:{x:t.xmin,y:t.ymax}})}getCompatibleFullExtent(e){return this.loaded?(this._compatibleFullExtent&&this._compatibleFullExtent.spatialReference.equals(e)||(this._compatibleFullExtent=this.raster.computeExtent(e)),this._compatibleFullExtent):null}async fetchTile(e,t,i,r={}){if(r.requestAsImageElement){const s=this.getTileUrl(e,t,i);return g(s,{responseType:"image",query:{sliceId:this._sliceId,_ts:r.timestamp},signal:r.signal}).then((e=>e.data))}if(await this._initJobHandler(),this.multidimensionalDefinition){const e=this._sliceId;r=n({multidimensionalDefinition:this.multidimensionalDefinition,sliceId:e},r)}return"raster-shaded-relief"===this.renderer.type&&(r=n({buffer:{cols:1,rows:1}},r)),this.raster.fetchTile(e,t,i,r)}async fetchPixels(e,t,i,r){if(await this._initJobHandler(),this.multidimensionalDefinition){const e=this._sliceId;r=n({multidimensionalDefinition:this.multidimensionalDefinition,sliceId:e},r)}return this.raster.fetchPixels(e,t,i,r)}identify(e,t={}){return this.multidimensionalDefinition&&!t.multidimensionalDefinition&&(t=n(n({},t),{multidimensionalDefinition:this.multidimensionalDefinition})),this.raster.identify(e,t)}increaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount++}decreaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount--,this._rasterJobHandler.refCount<=0&&this._shutdownJobHandler()}_configDefaultSettings(){this._configDefaultInterpolation(),this._configDefaultSlice(),this._configDefaultRenderer()}_initJobHandler(){if(null!=this._rasterJobHandler.connectionPromise)return this._rasterJobHandler.connectionPromise;const e=new te;return this._rasterJobHandler.connectionPromise=e.initialize().then((()=>{this._rasterJobHandler.instance=e,this.raster.rasterJobHandler=e,this.renderer&&this.updateRenderer()})).catch((()=>null)),this._rasterJobHandler.connectionPromise}_shutdownJobHandler(){this._rasterJobHandler.instance&&this._rasterJobHandler.instance.destroy(),this._rasterJobHandler.instance=null,this._rasterJobHandler.connectionPromise=null,this._rasterJobHandler.refCount=0,this.raster.rasterJobHandler=null}_configDefaultInterpolation(){if(null==this.interpolation){var e;const t=Z(this.rasterInfo,this.raster.tileType,null==(e=this.sourceJSON)?void 0:e.defaultResamplingMethod);this._set("interpolation",t)}}_configDefaultSlice(){const{multidimensionalInfo:e}=this.raster.rasterInfo;if(x(e)){if(!this.multidimensionalDefinition){const t=e.variables[0],i=[];t.dimensions.forEach((e=>{i.push(new X({variableName:t.name,dimensionName:e.name,values:e.hasRegularIntervals?e.extent[0]:e.values[0],isSlice:!0}))})),this.multidimensionalDefinition=i}this._sliceId=this.raster.getSliceIndex(this.multidimensionalDefinition)}}_configDefaultRenderer(){const e=this.raster.rasterInfo;var t;this.bandIds||(this.bandIds=Q(e)),this.renderer||(this.renderer=ee(e,{bandIds:this.bandIds,variableName:null==(t=this.multidimensionalDefinition)?void 0:t[0].variableName})),this.symbolizer?(this.symbolizer.rendererJSON=this.renderer.toJSON(),this.symbolizer.rasterInfo=e):this.symbolizer=new se({rendererJSON:this.renderer.toJSON(),rasterInfo:e}),this.symbolizer.bind()||De.warn("imagery-tile-mixin","The given renderer is not supported by the layer.")}};return o([l()],t.prototype,"_cachedRendererJson",void 0),o([l()],t.prototype,"_sliceId",void 0),o([l()],t.prototype,"_compatibleFullExtent",void 0),o([l()],t.prototype,"_rasterJobHandler",void 0),o([l()],t.prototype,"bandIds",void 0),o([l()],t.prototype,"copyright",void 0),o([l({type:u}),c("rasterInfo.extent")],t.prototype,"fullExtent",void 0),o([l()],t.prototype,"interpolation",void 0),o([l({type:[X]})],t.prototype,"multidimensionalDefinition",null),o([l()],t.prototype,"raster",void 0),o([l({readOnly:!0}),c("raster.rasterInfo")],t.prototype,"rasterInfo",void 0),o([l()],t.prototype,"sourceJSON",void 0),o([l({type:h}),c("rasterInfo.spatialReference")],t.prototype,"spatialReference",void 0),o([l({type:f,dependsOn:["rasterInfo"]}),c("rasterInfo.storageInfo.tileInfo")],t.prototype,"tileInfo",void 0),o([l(d)],t.prototype,"url",null),o([l({types:K})],t.prototype,"renderer",null),o([l()],t.prototype,"symbolizer",void 0),t=o([p("esri.layers.ImageryTileMixin")],t),t};let Ne=class extends I{constructor(){super(...arguments),this.blockWidth=void 0,this.blockHeight=void 0,this.compression=null,this.origin=null,this.firstPyramidLevel=null,this.maximumPyramidLevel=null,this.pyramidScalingFactor=2,this.pyramidBlockWidth=null,this.pyramidBlockHeight=null,this.isVirtualTileInfo=!1,this.tileInfo=null,this.blockBoundary=null}};o([l({type:Number,json:{write:!0}})],Ne.prototype,"blockWidth",void 0),o([l({type:Number,json:{write:!0}})],Ne.prototype,"blockHeight",void 0),o([l({type:String,json:{write:!0}})],Ne.prototype,"compression",void 0),o([l({type:w,json:{write:!0}})],Ne.prototype,"origin",void 0),o([l({type:Number,json:{write:!0}})],Ne.prototype,"firstPyramidLevel",void 0),o([l({type:Number,json:{write:!0}})],Ne.prototype,"maximumPyramidLevel",void 0),o([l()],Ne.prototype,"pyramidScalingFactor",void 0),o([l({type:Number,json:{write:!0}})],Ne.prototype,"pyramidBlockWidth",void 0),o([l({type:Number,json:{write:!0}})],Ne.prototype,"pyramidBlockHeight",void 0),o([l({type:Boolean,json:{write:!0}})],Ne.prototype,"isVirtualTileInfo",void 0),o([l({json:{write:!0}})],Ne.prototype,"tileInfo",void 0),o([l()],Ne.prototype,"blockBoundary",void 0),Ne=o([p("esri.layers.support.RasterStorageInfo")],Ne);var ze=Ne;let Le=class extends(v(I)){constructor(){super(...arguments),this.rasterJobHandler=null,this.datasetName=null,this.datasetFormat=null,this.rasterInfo=null,this.ioConfig={sampling:"closest"}}async init(){const e=be();this.addResolvingPromise(e),await this.when()}normalizeCtorArgs(e){return e&&e.ioConfig&&(e=n(n({},e),{ioConfig:n({resolution:null,bandIds:null,sampling:"closest",tileInfo:f.create()},e.ioConfig)})),e}set url(e){this._set("url",m(e,a.getLogger(this.declaredClass)))}async open(e){throw new b("BaseRaster:open-not-implemented","open() is not implemented")}async fetchTile(e,t,i,r={}){var s;const{tileInfo:a}=r,o=a.lodAt(e),l=new w({x:o.resolution,y:o.resolution,spatialReference:a.spatialReference}),u=this.getTileExtent(l,t,i,a);return null!=(s=r.multidimensionalDefinition)&&s.length&&x(this.rasterInfo.multidimensionalInfo)&&null==r.sliceId&&(r=n(n({},r),{sliceId:this.getSliceIndex(r.multidimensionalDefinition)||0})),this.fetchPixels(u,a.size[0],a.size[1],r)}async identify(e,t={}){const{spatialReference:i,extent:r}=this.rasterInfo,{datumTransformation:s}=t,n=Te(e,i,s);if(!r.intersects(n))return{location:n,value:null};let a=0;if(t.srcResolution)a=Re(t.srcResolution,this.rasterInfo,this.ioConfig.sampling).pyramidLevel;else if(a=await this.computeBestPyramidLevelForLocation(e,t),null==a)return{location:n,value:null};const o=this.identifyPixelLocation(n,a,null);if(null===o)return{location:n,value:null};const{row:l,col:u,rowOffset:c,colOffset:h}=o,f=Se(this.url,t.sliceId),d=`${a}/${l}/${u}`;let p=Ce(f,null,d);x(p)||(p=this.fetchRawTile(a,l,u,t),_e(f,null,d,p));const m=await p;if(!(m&&m.pixels&&m.pixels.length>0))return{location:n,value:null};const y=c*this.rasterInfo.storageInfo.blockHeight+h;return{location:n,value:!m.mask||m.mask[y]?m.pixels.map((e=>e[y])):null,pyramidLevel:a}}async fetchPixels(e,t,i,r={}){const s=e.clone().normalize();e=s[0];const n=this.rasterInfo.spatialReference,a=!e.spatialReference.equals(n),{datumTransformation:o}=r,l=new w({x:(e.xmax-e.xmin)/t,y:(e.ymax-e.ymin)/i,spatialReference:e.spatialReference}),u=r.srcResolution||(a?Me(l,n,e,o):l);if(!u)return null;const{pyramidLevel:c,pyramidResolution:h,excessiveReading:f}=Re(u,this.rasterInfo,this.ioConfig.sampling);if(f)return null;const d=this.rasterInfo.storageInfo;let p=a?ke(e,n,o):e;const m=T(this.rasterInfo.transform);if(m&&(p=m.inverseTransform(p)),null==p)return null;const y={x:Math.floor((p.xmin-d.origin.x)/h.x+.1),y:Math.floor((d.origin.y-p.ymax)/h.y+.1)},g=Math.ceil((p.xmax-p.xmin)/h.x-.1),x=Math.ceil((p.ymax-p.ymin)/h.y-.1);if(g/t>8||x/i>8)return null;const I=await this.fetchRawPixels(c,y,{width:g,height:x},r);if(!I)return null;const v=c>0?d.pyramidBlockWidth:d.blockWidth,b=c>0?d.pyramidBlockHeight:d.blockHeight;if(!a&&1===I.pixelBlocks.length&&v===t&&b===i&&u.x===l.x&&u.y===l.y)return{extent:e,srcExtent:p,pixelBlock:I.pixelBlocks[0],transformGrid:null};const R=Fe(e,I.extent,l,o,m);let S;const C=!r.requestRawData,_={rows:R.spacing[0],cols:R.spacing[1]},{pixelBlocks:M,mosaicSize:k,isPartiallyFilled:F}=I;if(this.rasterJobHandler)S=await this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:M,srcMosaicSize:k,destDimension:C?{width:t,height:i}:null,coefs:C?R.coefficients:null,sampleSpacing:C?_:null,interpolation:r.interpolation},r);else{const e=me(M,k);S=C?ye(e,{width:t,height:i},R.coefficients,_,r.interpolation):e}return{srcExtent:p,pixelBlock:S,transformGrid:R,extent:e,isPartiallyFilled:F}}async fetchRawPixels(e,t,i,r){const{origin:s,blockBoundary:n}=this.rasterInfo.storageInfo,a=e>0?this.rasterInfo.storageInfo.pyramidBlockWidth:this.rasterInfo.storageInfo.blockWidth,o=e>0?this.rasterInfo.storageInfo.pyramidBlockHeight:this.rasterInfo.storageInfo.blockHeight;let{x:l,y:c}=t,{width:h,height:f}=i;r.buffer&&(l-=r.buffer.cols,c-=r.buffer.rows,h+=2*r.buffer.cols,f+=2*r.buffer.rows);const d=Math.floor(l/a),p=Math.floor(c/o),m=Math.floor((l+h-1)/a),y=Math.floor((c+f-1)/o),g=n[e];if(!g)return null;const{minRow:x,minCol:w,maxCol:I,maxRow:v}=g;if(y<x||m<w||p>v||d>I)return null;const b=[];let T,C=!1;for(let u=p;u<=y;u++)for(let t=d;t<=m;t++)u>=x&&t>=w&&v>=u&&I>=t?(T=this._fetchRawTile(e,u,t,r),this.ioConfig.allowPartialFill&&(T=R((e=>{T.then((t=>e(t))).catch((()=>{C=!0,e(null)}))}))),b.push(T)):b.push(null);if(0===b.length)return null;const _=await S(b),M={height:(y-p+1)*a,width:(m-d+1)*o},{nativePixelSize:k,spatialReference:F}=this.rasterInfo,P=k.x*Math.pow(2,e),O=k.y*Math.pow(2,e);return{extent:new u({xmin:s.x+d*a*P,xmax:s.x+(m+1)*a*P,ymin:s.y-(y+1)*o*O,ymax:s.y-p*o*O,spatialReference:F}),pixelBlocks:_,mosaicSize:M,isPartiallyFilled:C}}async fetchRawTile(e,t,i,r){throw new b("BaseRaster:read-not-implemented","fetchRawTile() is not implemented")}computeExtent(e){return ke(this.rasterInfo.extent,e)}decodePixelBlock(e,t){return!this.rasterJobHandler||t.useCanvas?ne(e,t):this.rasterJobHandler.decode({data:e,options:t})}async request(e,t,i){var r,s;const{customFetchParameters:a}=this.ioConfig,{range:o,query:l,headers:u}=t;i=null!=(r=null!=(s=i)?s:t.retryCount)?r:this.ioConfig.retryCount;const c=o?{Range:`bytes=${o.from}-${o.to}`}:null;try{return await g(e,n(n({},t),{query:n(n({},l),a),headers:n(n({},u),c)}))}catch(h){if(i>0)return i--,this.request(e,t,i);throw h}}getSliceIndex(e){const{multidimensionalInfo:t}=this.rasterInfo;if(!x(t)||null==e||!e.length)return null;let i=0;const r=e[0].variableName;for(let s=0;s<t.variables.length;s++){const n=t.variables[s],a=n.dimensions;if(n.name!==r){i+=a.map((e=>this._getDimensionValuesCount(e))).reduce(((e,t)=>e+t));break}const o=a.map((e=>this._getDimensionValuesCount(e))),l=a.length;for(let t=0;t<l;t++){const r=e.filter((e=>e.dimensionName===a[t].name))[0];if(null==r)return null;const s=Array.isArray(r.values[0])?r.values[0][0]:r.values[0],n=this._getIndexFromDimensions(s,a[t]);if(-1===n)return null;o.shift(),i+=t===l-1?n:n*o.reduce(((e,t)=>e+t))}}return i}updateTileInfo(){const{storageInfo:e,spatialReference:t,extent:i,pixelSize:r}=this.rasterInfo;if(!e.tileInfo){const s=[],n=e.maximumPyramidLevel||0;let a=Math.max(r.x,r.y),o=1/.0254*96*a;for(let e=0;e<=n;e++)s.push({level:n-e,resolution:a,scale:o}),a*=2,o*=2;const l=new w({x:i.xmin,y:i.ymax,spatialReference:t});e.tileInfo=new f({origin:l,size:[e.blockWidth,e.blockHeight],spatialReference:t,lods:s}),e.isVirtualTileInfo=!0}}createRemoteDatasetStorageInfo(e,t=512,i=512,r){const{width:s,height:n,nativeExtent:a,pixelSize:o,spatialReference:l}=e,u=new w({x:a.xmin,y:a.ymax,spatialReference:l});null==r&&(r=Math.max(0,Math.round(Math.log(Math.max(s,n))/Math.LN2-8)));const c=this._computeBlockBoundary(a,o,r,512,512);e.storageInfo=new ze({blockWidth:t,blockHeight:i,pyramidBlockWidth:t,pyramidBlockHeight:i,origin:u,firstPyramidLevel:1,maximumPyramidLevel:r,blockBoundary:c})}async computeBestPyramidLevelForLocation(e,t={}){return 0}identifyPixelLocation(e,t,i){const{spatialReference:r,pixelSize:s,extent:n}=this.rasterInfo,{blockWidth:a,blockHeight:o,maximumPyramidLevel:l,pyramidScalingFactor:u,origin:c}=this.rasterInfo.storageInfo,h=Te(e,r,i);if(!n.intersects(h))return null;if(t<0||t>l)return null;const f=Math.pow(u,t),d=f*s.x,p=f*s.y,m=(c.y-h.y)/p/o,y=(h.x-c.x)/d/a,g=Math.min(o-1,Math.floor((m-Math.floor(m))*o)),x=Math.min(a-1,Math.floor((y-Math.floor(y))*a));return{pyramidLevel:t,row:Math.floor(m),col:Math.floor(y),rowOffset:g,colOffset:x,srcLocation:h}}getTileExtent(e,t,i,r){const{origin:s,spatialReference:n}=r,a=r.size[0],o=r.size[1],l=s.x+i*a*e.x,c=l+a*e.x,h=s.y-t*o*e.y,f=h-o*e.y;return new u({xmin:l,xmax:c,ymin:f,ymax:h,spatialReference:n})}_computeBlockBoundary(e,t,i,r,s){let{x:n,y:a}=t;const o=e.xmin,l=e.ymax,u=[{minCol:Math.floor((e.xmin-o+.1*n)/r/n),maxCol:Math.floor((e.xmax-o-.1*n)/r/n),minRow:Math.floor((l-e.ymax+.1*a)/s/a),maxRow:Math.floor((l-e.ymin-.1*a)/s/a)}];if(i>0)for(let c=0;c<i;c++)n*=2,a*=2,u.push({minCol:Math.floor((e.xmin-o+.1*n)/r/n),maxCol:Math.floor((e.xmax-o-.1*n)/r/n),minRow:Math.floor((l-e.ymax+.1*a)/s/n),maxRow:Math.floor((l-e.ymin-.1*a)/s/n)});return u}_fetchRawTile(e,t,i,r){const s=this.rasterInfo.storageInfo.blockBoundary[e];if(!s)return C(null);const{minRow:a,minCol:o,maxCol:l,maxRow:u}=s;if(t<a||i<o||t>u||i>l)return C(null);const c=Se(this.url,r.sliceId),h=`${e}/${t}/${i}`;let f=Ce(c,r.registryId,h);if(!x(f)){const s=_();f=this.fetchRawTile(e,t,i,n(n({},r),{signal:s.signal})),_e(c,r.registryId,h,f,s),f.catch((()=>{Pe(c,r.registryId,h)}))}return r.signal&&M(r,(()=>{Oe(c,r.registryId,h)})),f}_getIndexFromDimensions(e,t){const{extent:i,interval:r,unit:s,values:n}=t;if(null!=n&&n.length)return Array.isArray(n[0])?n.findIndex((t=>t[0]<=e&&t[1]>=e)):n.indexOf(e);if(e>i[1])return-1;const a=i[0];let o=-1;if("ISO8601"===s){var l;switch((null==(l=t.intervalUnit)?void 0:l.toLowerCase())||"seconds"){case"seconds":o=Math.round((e-a)/1e3/r);break;case"minutes":o=Math.round((e-a)/6e4/r);break;case"hours":o=Math.round((e-a)/36e5/r);break;case"days":o=Math.round((e-a)/864e5/r);break;case"years":o=Math.round((new Date(e).getUTCFullYear()-new Date(a).getUTCFullYear())/r);break;case"decades":o=Math.round((new Date(e).getUTCFullYear()-new Date(a).getUTCFullYear())/10/r)}return o}return Math.round((e-a)/r)}_getDimensionValuesCount(e){const{extent:t,interval:i,unit:r,values:s}=e;let n=(null==s?void 0:s.length)||0;if(n)return n;const a=t[0];if(0===n&&"ISO8601"===r){var o;switch((null==(o=e.intervalUnit)?void 0:o.toLowerCase())||"seconds"){case"seconds":n=Math.round((t[1]-t[0])/1e3/i);break;case"minutes":n=Math.round((t[1]-t[0])/6e4/i);break;case"hours":n=Math.round((t[1]-t[0])/36e5/i);break;case"days":n=Math.round((t[1]-t[0])/864e5/i);break;case"years":n=Math.round((new Date(t[1]).getUTCFullYear()-new Date(a).getUTCFullYear())/i);break;case"decades":n=Math.round((new Date(t[1]).getUTCFullYear()-new Date(a).getUTCFullYear())/10/i)}return n}return Math.round((t[1]-t[0])/i)}};o([l(d)],Le.prototype,"url",null),o([l({type:String,json:{write:!0}})],Le.prototype,"datasetName",void 0),o([l({type:String,json:{write:!0}})],Le.prototype,"datasetFormat",void 0),o([l()],Le.prototype,"rasterInfo",void 0),o([l()],Le.prototype,"ioConfig",void 0),o([l()],Le.prototype,"sourceJSON",void 0),Le=o([p("esri.layers.support.rasterDatasets.BaseRaster")],Le);var He=Le;const Ee=new Map;Ee.set("int16","esriFieldTypeSmallInteger"),Ee.set("int32","esriFieldTypeInteger"),Ee.set("int64","esriFieldTypeInteger"),Ee.set("float32","esriFieldTypeSingle"),Ee.set("float64","esriFieldTypeDouble"),Ee.set("text","esriFieldTypeString");let Je=class extends He{constructor(){super(...arguments),this.storageInfo=null,this.datasetFormat="CRF"}async open(e){await this.init();const{data:t}=await this.request(this.url+"/conf.json",{signal:null==e?void 0:e.signal});if(!this._validateHeader(t))throw new b("cloudraster:open","Invalid or unsupported conf.json.");this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1);const{storageInfo:i,rasterInfo:r}=this._parseHeader(t);if("thematic"===r.dataType){const e=await this._fetchAuxiliaryInformation();r.attributeTable=e}this._set("storageInfo",i),this._set("rasterInfo",r),this.ioConfig.retryCount=this.ioConfig.retryCount||0}async fetchRawTile(e,t,i,r={}){const s=this.rasterInfo.storageInfo.maximumPyramidLevel-e;if(s<0)return null;const n=this._buildCacheFilePath(s,t,i,r.multidimensionalDefinition),a=this._getIndexRecordFromBundle(t,i),o=await this.request(n,{range:{from:0,to:this.storageInfo.headerSize-1},responseType:"array-buffer",signal:r.signal});if(!o)return null;const l=new Uint8Array(o.data),u=this._getTileEndAndContentType(l,a);if(0===u.recordSize)return null;const c=await this.request(n,{range:{from:u.position,to:u.position+u.recordSize},responseType:"array-buffer",signal:r.signal});return c?this.decodePixelBlock(c.data,{width:this.rasterInfo.storageInfo.tileInfo.size[0],height:this.rasterInfo.storageInfo.tileInfo.size[1],planes:null,pixelType:null}):null}_validateHeader(e){return e&&"RasterInfo"===e.type&&!["origin","extent","geodataXform","LODInfos","blockWidth","blockHeight","bandCount","pixelType","pixelSizeX","pixelSizeY","format","packetSize"].some((t=>!e[t]))}_parseHeader(e){var t;const i=["u1","u2","u4","u8","s8","u16","s16","u32","s32","f32","f64"][e.pixelType],{bandCount:r,histograms:s,colormap:n,blockWidth:a,blockHeight:o,firstPyramidLevel:l,maximumPyramidLevel:c}=e,d=e.statistics&&e.statistics.map((e=>({min:e.min,max:e.max,avg:e.mean,stddev:e.standardDeviation,median:e.median,mode:e.mode}))),p=new h(e.extent.spatialReference||e.geodataXform.spatialReference),m=new u({xmin:e.extent.xmin,ymin:e.extent.ymin,xmax:e.extent.xmax,ymax:e.extent.ymax,spatialReference:p}),y=new w({x:e.pixelSizeX,y:e.pixelSizeY,spatialReference:p}),g=null!=(t=e.properties)?t:{},x=e.format.toLowerCase().replace("cache/",""),I=new w(e.origin.x,e.origin.y,p);let v,b,T,R;if(n&&n.colors)for(v=[],b=0;b<n.colors.length;b++)T=n.colors[b],R=n.values?n.values[b]:b,v.push([R,255&T,T<<16>>>24,T<<8>>>24,T>>>24]);const S=e.LODInfos,C=[];for(b=0;b<S.levels.length;b++)C.push({level:S.levels[b],resolution:S.resolutions[b],scale:96/.0254*S.resolutions[b]});const _=new f({dpi:96,lods:C,format:x,origin:I,size:[a,o],spatialReference:p}),M={recordSize:8,packetSize:e.packetSize,headerSize:e.packetSize*e.packetSize*8+64},k=Math.round((m.xmax-m.xmin)/y.x),F=Math.round((m.ymax-m.ymin)/y.y),P=[{maxCol:Math.ceil(k/a)-1,maxRow:Math.ceil(F/o)-1,minCol:0,minRow:0}];let O=2;if(c>0)for(b=0;b<c;b++)P.push({maxCol:Math.ceil(k/O/a)-1,maxRow:Math.ceil(F/O/o)-1,minCol:0,minRow:0}),O*=2;const D=e.mdInfo;return{storageInfo:M,rasterInfo:new oe({width:k,height:F,pixelType:i,bandCount:r,extent:m,spatialReference:p,pixelSize:y,keyProperties:g,statistics:d,histograms:s,multidimensionalInfo:D,colormap:v,storageInfo:new ze({blockWidth:a,blockHeight:o,pyramidBlockWidth:a,pyramidBlockHeight:o,origin:I,tileInfo:_,firstPyramidLevel:l,maximumPyramidLevel:c,blockBoundary:P})})}}async _fetchAuxiliaryInformation(e){const t=this.request(this.url+"/conf.vat.json",{signal:e}).then((e=>e.data)).catch((()=>null)),i=this.request(this.url+"/conf.vat.dbf",{responseType:"array-buffer",signal:e}).then((e=>e.data)).catch((()=>null)),r=await S([t,i]);let s;if(r[0]){let e=r[0].fields;const t=r[0].values;if(e&&t){e=e.map((e=>({type:"OID"===e.name?"esriFieldTypeOID":Ee.get(e.type),name:e.name,alias:e.alias||e.name})));const i=t.map((e=>({attributes:e})));e&&t&&(s={fields:e,features:i})}}return!s&&r[1]&&(s=class{static get supportedVersions(){return[5]}static parse(e){const t=new DataView(e),i=3&t.getUint8(0);if(3!==i)return{header:{version:i},recordSet:null};const r=t.getUint32(4,!0),s=t.getUint16(8,!0),n=t.getUint16(10,!0),a={version:i,recordCount:r,headerByteCount:s,recordByteCount:n};let o=32;const l=[],u=[];let c;if(3===i){for(;13!==t.getUint8(o);)c=String.fromCharCode(t.getUint8(o+11)).trim(),l.push({name:ae(new Uint8Array(e,o,11)),type:c,typeName:["String","Date","Double","Boolean","String","Integer"][["C","D","F","L","M","N"].indexOf(c)],length:t.getUint8(o+16)}),o+=32;if(o+=1,l.length>0)for(;u.length<r&&e.byteLength-o>n;){const i=[];32===t.getUint8(o)?(o+=1,l.forEach((t=>{if("C"===t.type)i.push(ae(new Uint8Array(e,o,t.length)).trim());else if("N"===t.type)i.push(parseInt(String.fromCharCode.apply(null,new Uint8Array(e,o,t.length)).trim(),10));else if("F"===t.type)i.push(parseFloat(String.fromCharCode.apply(null,new Uint8Array(e,o,t.length)).trim()));else if("D"===t.type){const r=String.fromCharCode.apply(null,new Uint8Array(e,o,t.length)).trim();i.push(new Date(parseInt(r.substring(0,4),10),parseInt(r.substring(4,6),10)-1,parseInt(r.substring(6,8),10)))}o+=t.length})),u.push(i)):o+=n}}return{header:a,fields:l,records:u,recordSet:function(e){const t=e.fields,i=e.records,r=t.some((e=>"oid"===e.name.toLowerCase()))?"OBJECTID":"OID",s=[{name:r,type:"esriFieldTypeOID",alias:"OID"}].concat(t.map((e=>({name:e.name,type:"esriFieldType"+e.typeName,alias:e.name})))),n=s.map((e=>e.name)),a=[];let o=0,l=0;return i.forEach((e=>{const t={};for(t[r]=o++,l=1;l<n.length;l++)t[n[l]]=e[l-1];a.push({attributes:t})})),{displayFieldName:"",fields:s,features:a}}({fields:l,records:u})}}}.parse(r[1]).recordSet),k.fromJSON(s)}_buildCacheFilePath(e,t,i,r){const s=this.storageInfo.packetSize,n=Math.floor(t/s)*s,a=Math.floor(i/s)*s,o="R"+this._toHexString4(n)+"C"+this._toHexString4(a);let l="L";l+=e>=10?e.toString():"0"+e.toString();const{multidimensionalInfo:u}=this.rasterInfo,c=null==r?void 0:r[0];if(!x(u)||!c)return`${this.url}/_alllayers/${l}/${o}.bundle`;let h=u.variables.filter((e=>e.name===c.variableName))[0].dimensions[0].values.indexOf(c.values[0]).toString(16);const f=4-h.length;for(let d=0;d<f;d++)h="0"+h;return h="S"+h,`${this.url}/_alllayers/${c.variableName}/${h}/${l}/${o}.bundle`}_getIndexRecordFromBundle(e,t){const i=this.storageInfo.packetSize,r=i*(e%i)+t%i;if(r<0)throw"Invalid level / row / col";return 20+r*this.storageInfo.recordSize+44}_getTileEndAndContentType(e,t){const i=e.subarray(t,t+8);let r,s=0;for(r=0;r<5;r++)s|=(255&i[r])<<8*r;const n=0xffffffffff&s;for(s=0,r=5;r<8;r++)s|=(255&i[r])<<8*(r-5);return{position:n,recordSize:0xffffffffff&s}}_toHexString4(e){let t=e.toString(16);if(4!==t.length){let e=4-t.length;for(;e-- >0;)t="0"+t}return t}};o([l({readOnly:!0})],Je.prototype,"storageInfo",void 0),o([l({type:String,json:{write:!0}})],Je.prototype,"datasetFormat",void 0),Je=o([p("esri.layers.support.rasterDatasets.CloudRaster")],Je);var Ae=Je;let je=class extends He{constructor(){super(...arguments),this.datasetFormat="MEMORY"}async open(e){var t;await this.init();const{pixelBlock:i,statistics:r,histograms:s,name:n,keyProperties:a,nativeExtent:o,transform:l}=this.data,{width:c,height:f,pixelType:d}=i,p=this.data.extent||new u({xmin:-.5,ymin:.5,xmax:c-.5,ymax:f-.5,spatialReference:new h({wkid:3857})}),m=null!=(t=this.data.isPseudoSpatialReference)?t:!this.data.extent,y={x:p.width/c,y:p.height/f},g=new oe({width:c,height:f,pixelType:d,extent:p,nativeExtent:o,transform:l,pixelSize:y,spatialReference:p.spatialReference,bandCount:3,keyProperties:a||{},statistics:r,isPseudoSpatialReference:m,histograms:s});this.createRemoteDatasetStorageInfo(g,512,512),this._set("rasterInfo",g),this.updateTileInfo(),await this._buildInMemoryRaster(i,{width:512,height:512},e),this.datasetName=n,this.url="/InMemory/"+n}fetchRawTile(e,t,i,r={}){const s=this._pixelBlockTiles.get(`${e}/${t}/${i}`);return C(s)}async _buildInMemoryRaster(e,t,i){const r=this.rasterInfo.storageInfo.maximumPyramidLevel,s=this.rasterJobHandler?this.rasterJobHandler.split({pixelBlock:e,tileSize:t,maximumPyramidLevel:r},i):C(ge(e,t,r)),n=x(this.rasterInfo.statistics),a=x(this.rasterInfo.histograms),o=n&&a?C({statistics:null,histograms:null}):this.rasterJobHandler?this.rasterJobHandler.estimateStatisticsHistograms({pixelBlock:e},i):C(xe(e)),l=await F([s,o]);if(!l[0].value&&l[1].value)throw new b("inmemory-raster:open","failed to build in memory raster");var u,c;this._pixelBlockTiles=l[0].value,n||(this.rasterInfo.statistics=null==(u=l[1].value)?void 0:u.statistics),a&&(this.rasterInfo.histograms=null==(c=l[1].value)?void 0:c.histograms)}};o([l({type:String,json:{write:!0}})],je.prototype,"datasetFormat",void 0),o([l()],je.prototype,"data",void 0),je=o([p("esri.layers.support.rasterDatasets.InMemoryRaster")],je);var Ue=je;function qe(e,t,i){const{x:r,y:s}=t;if(i<2)return{x:e[0]+r*e[2]+s*e[4],y:e[1]+r*e[3]+s*e[5]};if(2===i){const t=r*r,i=s*s,n=r*s;return{x:e[0]+r*e[2]+s*e[4]+t*e[6]+n*e[8]+i*e[10],y:e[1]+r*e[3]+s*e[5]+t*e[7]+n*e[9]+i*e[11]}}const n=r*r,a=s*s,o=r*s,l=n*r,u=n*s,c=r*a,h=s*a;return{x:e[0]+r*e[2]+s*e[4]+n*e[6]+o*e[8]+a*e[10]+l*e[12]+u*e[14]+c*e[16]+h*e[18],y:e[1]+r*e[3]+s*e[5]+n*e[7]+o*e[9]+a*e[11]+l*e[13]+u*e[15]+c*e[17]+h*e[19]}}function We(e,t,i){const{xmin:r,ymin:s,xmax:n,ymax:a,spatialReference:o}=t;let l=[];if(i<2)l.push({x:r,y:a}),l.push({x:n,y:a}),l.push({x:r,y:s}),l.push({x:n,y:s});else{let e=10;for(let t=0;t<e;t++)l.push({x:r,y:s+(a-s)*t/(e-1)}),l.push({x:n,y:s+(a-s)*t/(e-1)});e=8;for(let t=1;t<=e;t++)l.push({x:r+(n-r)*t/e,y:s}),l.push({x:r+(n-r)*t/e,y:a})}l=l.map((t=>qe(e,t,i)));const c=l.map((e=>e.x)),h=l.map((e=>e.y));return new u({xmin:Math.min.apply(null,c),xmax:Math.max.apply(null,c),ymin:Math.min.apply(null,h),ymax:Math.max.apply(null,h),spatialReference:o})}let Ge=class extends I{constructor(){super(...arguments),this.polynomialOrder=1}get inverseCoefficients(){let e=this._get("inverseCoefficients");const t=this._get("forwardCoefficients");return!e&&t&&this.polynomialOrder<2&&(e=function(e){const[t,i,r,s,n,a]=e,o=r*a-n*s,l=n*s-r*a;return[(n*i-t*a)/o,(r*i-t*s)/l,a/o,s/l,-n/o,-r/l]}(t)),e}set inverseCoefficients(e){this._set("inverseCoefficients",e)}forwardTransform(e){if("point"===e.type){const t=qe(this.forwardCoefficients,e,this.polynomialOrder);return new w({x:t.x,y:t.y,spatialReference:e.spatialReference})}return We(this.forwardCoefficients,e,this.polynomialOrder)}inverseTransform(e){if("point"===e.type){const t=qe(this.inverseCoefficients,e,this.polynomialOrder);return new w({x:t.x,y:t.y,spatialReference:e.spatialReference})}return We(this.inverseCoefficients,e,this.polynomialOrder)}};o([l({json:{write:!0}})],Ge.prototype,"polynomialOrder",void 0),o([l({json:{write:!0}})],Ge.prototype,"forwardCoefficients",void 0),o([l({dependsOn:["forwardCoefficients"],json:{write:!0}})],Ge.prototype,"inverseCoefficients",null),Ge=o([p("esri.layers.support.rasterTransforms.PolynomialTransform")],Ge);var $e=Ge;function Ve(e,t){if(!e||!t)return[];let i=t;t.indexOf("/")>-1?(i=t.slice(0,t.indexOf("/")),t=t.slice(t.indexOf("/")+1)):t="";const r=[];if(t){const s=Ve(e,i);for(let e=0;e<s.length;e++)Ve(s[e],t).forEach((e=>r.push(e)));return r}const s=e.getElementsByTagNameNS("*",i);if(!s||0===s.length)return[];for(let n=0;n<s.length;n++)r.push(s[n]||s.item[n]);return r}function Ye(e,t){if(!e||!t)return null;let i=t;t.indexOf("/")>-1?(i=t.slice(0,t.indexOf("/")),t=t.slice(t.indexOf("/")+1)):t="";const r=Ve(e,i);return r.length>0?t?Ye(r[0],t):r[0]:null}function Xe(e,t=null){const i=t?Ye(e,t):e;let r;return i?(r=i.textContent||i.nodeValue,r?r.trim():null):null}function Ke(e,t){return function(e,t){const i=Ve(e,t),r=[];let s;for(let n=0;n<i.length;n++)s=i[n].textContent||i[n].nodeValue,s&&(s=s.trim(),""!==s&&r.push(s));return r}(e,t).map((e=>Number(e)))}function Ze(e,t){const i=Xe(e,t);return Number(i)}function Qe(e,t){var i;const r=null==e||null==(i=e.nodeName)?void 0:i.toLowerCase(),s=t.toLowerCase();return r.slice(r.lastIndexOf(":")+1)===s}function et(e,t){if(!e||!t)return null;const i=[];for(let r=0;r<e.length;r++)i.push(e[r]),i.push(t[r]);return i}function tt(e){if(!e)return null;let t=Number(e);if(!isNaN(t)&&0!==t)return new h({wkid:t});const i=e.replace(/\]/g,"[").replace(/\"/g,"").split("[").map((e=>e.trim())).filter((e=>""!==e)),r=i[i.length-1].split(",");return"EPSG"!==r[0]||(t=Number(r[1]),isNaN(t)||0===t)?new h({wkt:e}):new h({wkid:t})}function it(e){var t;if("pamdataset"!==(null==e||null==(t=e.documentElement.tagName)?void 0:t.toLowerCase()))return{};const i={spatialReference:null,transform:null,metadata:{},rasterBands:[],statistics:null,histograms:null};e.documentElement.childNodes.forEach((e=>{if(1===e.nodeType)if(Qe(e,"SRS")){if(!i.spatialReference){const t=Xe(e);i.spatialReference=tt(t)}}else if(Qe(e,"Metadata"))if("xml:ESRI"===e.getAttribute("domain")){const{spatialReference:t,transform:r}=function(e){var t;const i=Ye(e,"GeodataXform"),r=tt(Ze(i,"SpatialReference/WKID")||Xe(i,"SpatialReference/WKT"));if("typens:PolynomialXform"!==i.getAttribute("xsi:type"))return{spatialReference:r,transform:null};const s=null!=(t=Ze(i,"PolynomialOrder"))?t:1,n=Ke(i,"CoeffX/Double"),a=Ke(i,"CoeffY/Double"),o=Ke(i,"InverseCoeffX/Double"),l=Ke(i,"InverseCoeffY/Double"),u=et(n,a),c=et(o,l);return{spatialReference:r,transform:new $e({polynomialOrder:s,forwardCoefficients:u,inverseCoefficients:c})}}(e);i.transform=r,i.spatialReference||(i.spatialReference=t)}else Ve(e,"MDI").forEach((e=>i.metadata[e.getAttribute("key")]=Xe(e)));else if(Qe(e,"PAMRasterBand")){const t=function(e){var t;const i=Ze(e,"NoDataValue"),r=Ye(e,"Histograms/HistItem"),s=Ze(r,"HistMin"),n=Ze(r,"HistMax"),a=Ze(r,"BucketCount"),o=null==(t=Xe(r,"HistCounts"))?void 0:t.split("|").map((e=>Number(e)));let l,u,c,h;Ve(e,"Metadata/MDI").forEach((e=>{var t;const i=Number(null!=(t=e.textContent)?t:e.nodeValue);switch(e.getAttribute("key").toUpperCase()){case"STATISTICS_MINIMUM":l=i;break;case"STATISTICS_MAXIMUM":u=i;break;case"STATISTICS_MEAN":c=i;break;case"STATISTICS_STDDEV":h=i}}));const f=Ze(e,"Metadata/SourceBandIndex");return{noDataValue:i,histogram:null!=o&&o.length&&null!=l&&null!=u?{min:s,max:n,size:a||o.length,counts:o}:null,sourceBandIndex:f,statistics:null!=l&&null!=u?{min:l,max:u,avg:c,stddev:h}:null}}(e);null!=t.sourceBandIndex&&null==i.rasterBands[t.sourceBandIndex]?i.rasterBands[t.sourceBandIndex]=t:i.rasterBands.push(t)}}));const r=i.rasterBands;if(r){const e=!!r[0].statistics;i.statistics=e?r.map((e=>e.statistics)):null;const t=!!r[0].histogram;i.histograms=t?r.map((e=>e.histogram)):null}return i}let rt=class extends He{async open(e){await this.init();const t=await this._fetchData(e);let{spatialReference:i,statistics:r,histograms:s,transform:n}=await this._fetchAuxiliaryData(e);const a=!i;a&&(i=new h({wkid:3857})),null!=s&&s.length&&null==r&&(r=we(s));const{width:o,height:l}=t;let c=new u({xmin:-.5,ymin:.5-l,xmax:o-.5,ymax:.5,spatialReference:i});const f=n?n.forwardTransform(c):c;let d=!0;if(n){const e=n.forwardCoefficients;d=e&&0===e[1]&&0===e[2],d&&(n=null,c=f)}const p=new Ue({data:{extent:f,nativeExtent:c,transform:n,pixelBlock:t,statistics:r,histograms:s,keyProperties:{DateType:"Processed"},isPseudoSpatialReference:a}});await p.open(),this._set("rasterInfo",p.rasterInfo),this._inMemoryRaster=p}fetchRawTile(e,t,i,r={}){return this._inMemoryRaster.fetchRawTile(e,t,i,r)}async _fetchData(e){const{data:t}=await this.request(this.url,{responseType:"array-buffer",signal:null==e?void 0:e.signal}),i=le(t).toUpperCase();if("JPG"!==i&&"PNG"!==i&&"GIF"!==i&&"BMP"!==i)throw new b("image-aux-raster:open","the data is not a supported format");return this._set("datasetFormat",i),await this.decodePixelBlock(t,{format:"jpg",width:1,height:1,useCanvas:!0})}async _fetchAuxiliaryData(e){var t,i;const r=T(null==e?void 0:e.signal),s=null!=(t=this.ioConfig.skipExtensions)?t:[],n=s.indexOf("aux.xml")>-1?null:this.request(this.url+".aux.xml",{responseType:"xml",signal:r}),a=this.datasetFormat,o="JPG"===a?"jgw":"PNG"===a?"pgw":"BMP"===a?"bpw":null,l=s.indexOf(o)>-1?null:this.request(this.url.slice(0,this.url.lastIndexOf("."))+"."+o,{responseType:"text",signal:r}),u=await F([n,l]);if(null!=r&&r.aborted)throw P();const c=it(null==(i=u[0].value)?void 0:i.data);if(!c.transform){const e=u[1].value?u[1].value.data.split("\n").slice(0,6).map((e=>Number(e))):null;c.transform=6===(null==e?void 0:e.length)?new $e({forwardCoefficients:[e[4],e[5],e[0],-e[1],e[2],-e[3]]}):null}return c}};o([l({type:String,json:{write:!0}})],rt.prototype,"datasetFormat",void 0),rt=o([p("esri.layers.support.rasterDatasets.ImageAuxRaster")],rt);var st=rt;let nt=class extends He{constructor(){super(...arguments),this._levelOffset=0,this._slices=null,this._tilemapCache=null,this.datasetFormat="RasterTileServer"}async open(e){await this.init();const t=e&&e.signal,i=this.sourceJSON?{data:this.sourceJSON}:await this.request(this.url,{query:{f:"json"},signal:t});i.ssl&&(this.url=this.url.replace(/^http:/i,"https:"));const r=i.data;this.sourceJSON=r;if(this.tileType=r.cacheType,null==this.tileType&&(["jpg","jpeg","png","png8","png24","png32","mixed"].indexOf(r.tileInfo.format.toLowerCase())>-1?this.tileType="Map":"lerc"===r.tileInfo.format.toLowerCase()?this.tileType="Elevation":this.tileType="Raster"),!r)throw new b("imageserverraster:open","cannot initialize tiled image service, missing service info");if(!r.tileInfo)throw new b("imageserverraster:open","use ImageryLayer to open non-tiled image services");this.datasetName=r.name.slice(r.name.indexOf("/")+1);const s=await this._fetchRasterInfo({signal:t});if(!x(s))throw new b("image-server-raster:open","cannot initialize image service");{const e="Map"===this.tileType?O(r.tileInfo,r):f.fromJSON(r.tileInfo),{extent:t,pixelSize:i}=s,n=.5/s.width*i.x;let a,o;const l=e.lodAt(Math.max.apply(null,e.lods.map((e=>e.level))));"Map"!==this.tileType&&0!==r.maxScale&&("Raster"===this.tileType?(a=e.lods.filter((e=>e.resolution===i.x))[0],a||(a=e.lods[e.lods.length-1])):(a=e.lods.filter((e=>Math.abs(e.scale-r.maxScale)<n))[0],a||(a=e.lods.filter((e=>e.scale>r.maxScale)).sort(((e,t)=>e.scale>t.scale?1:-1))[0])),i.x=i.y=a.resolution,s.width=Math.ceil((t.xmax-t.xmin)/i.x-.1),s.height=Math.ceil((t.ymax-t.ymin)/i.y-.1)),a||(a=l);const u=e.lodAt(Math.min.apply(null,e.lods.map((e=>e.level))));"Map"===this.tileType?this._levelOffset=e.lods[0].level:0!==r.minScale&&"Elevation"===this.tileType&&(o=e.lods.filter((e=>Math.abs(e.scale-r.minScale)<n))[0],this._levelOffset=o.level-u.level),o||(o=u);const c=Math.max(i.x,i.y);(Math.abs(i.x-i.y)>n||!e.lods.some((e=>Math.abs(e.resolution-c)<n)))&&(i.x=i.y=a.resolution,s.width=Math.ceil((t.xmax-t.xmin)/i.x-.1),s.height=Math.ceil((t.ymax-t.ymin)/i.y-.1));const h=a.level-o.level,[d,p]=e.size,m=e.origin;let{x:y,y:g}=i;const x=[{minCol:Math.floor((t.xmin-m.x+.1*y)/d/y),maxCol:Math.floor((t.xmax-m.x-.1*y)/d/y),minRow:Math.floor((m.y-t.ymax+.1*g)/p/g),maxRow:Math.floor((m.y-t.ymin-.1*g)/p/g)}];if(h>0)for(let r=0;r<h;r++)y*=2,g*=2,x.push({minCol:Math.floor((t.xmin-m.x+.1*y)/d/y),maxCol:Math.floor((t.xmax-m.x-.1*y)/d/y),minRow:Math.floor((m.y-t.ymax+.1*g)/p/y),maxRow:Math.floor((m.y-t.ymin-.1*g)/p/y)});s.storageInfo=new ze({blockWidth:e.size[0],blockHeight:e.size[1],pyramidBlockWidth:e.size[0],pyramidBlockHeight:e.size[1],compression:e.format,origin:e.origin,firstPyramidLevel:1,maximumPyramidLevel:h,tileInfo:e,blockBoundary:x}),this._set("rasterInfo",s)}if(r.capabilities.toLowerCase().indexOf("tilemap")>-1){const e={tileInfo:s.storageInfo.tileInfo,parsedUrl:D(this.url),url:this.url,tileServers:[],type:"tile"};this._tilemapCache=new B({layer:e})}}async fetchRawTile(e,t,i,r={}){const{storageInfo:s,extent:n,pixelSize:a}=this.rasterInfo,o=s.maximumPyramidLevel-e+this._levelOffset,l=`${this.url}/tile/${o}/${t}/${i}`,u=this._slices?{sliceId:r.sliceId||0}:null,{data:c}=await this.request(l,{query:u,responseType:"array-buffer",signal:r.signal});if(!c)return null;const h=await this.decodePixelBlock(c,{width:s.tileInfo.size[0],height:s.tileInfo.size[1],planes:null,pixelType:null,isPoint:"Elevation"===this.tileType}),f=s.blockBoundary[e];if("jpg"!==s.compression||i>f.minCol&&i<f.maxCol&&t>f.minRow&&t<f.maxRow)return h;const{origin:d,blockWidth:p,blockHeight:m}=s,y=Math.pow(2,e),g=Math.round((n.xmin-d.x)/(a.x*y))%p,x=Math.round((n.xmax-d.x)/(a.x*y))%p,w=Math.round((d.y-n.ymax)/(a.x*y))%m,I=Math.round((d.y-n.ymin)/(a.x*y))%m,v=i===f.minCol?g:0,b=t===f.minRow?w:0,T=i===f.maxCol?x:p,R=t===f.maxRow?I:m;return Ie(h,{x:v,y:b},{width:T-v,height:R-b}),h}getSliceIndex(e){if(null==e||!e.length||!this._slices)return null;const t=e;for(let i=0;i<this._slices.length;i++){const e=this._slices[i].multidimensionalDefinition;if(e.length===t.length&&!e.some((e=>{const i=t.filter((t=>e.variableName===t.variableName&&t.dimensionName===e.dimensionName))[0];return!i||(Array.isArray(e.values[0])?e.values[0][0]:e.values[0])!==(Array.isArray(i.values[0])?i.values[0][0]:i.values[0])})))return i}return null}async fetchVariableStatisticsHistograms(e,t){const i=this.request(this.url+"/statistics",{query:{variable:e,f:"json"},signal:t}).then((e=>{var t;return null==(t=e.data)?void 0:t.statistics})),r=this.request(this.url+"/histograms",{query:{variable:e,f:"json"},signal:t}).then((e=>{var t;return null==(t=e.data)?void 0:t.histograms})),s=await S([i,r]);return s[0]&&s[0].forEach((e=>{e.avg=e.mean,e.stddev=e.standardDeviation})),{statistics:s[0]||null,histograms:s[1]||null}}async computeBestPyramidLevelForLocation(e,t={}){if(!this._tilemapCache)return 0;let i=this.identifyPixelLocation(e,0,t.datumTransformation);if(null===i)return null;let r=0;const{maximumPyramidLevel:s}=this.rasterInfo.storageInfo;let n=s-r+this._levelOffset;const a=i.srcLocation;for(;n>=0;){try{if("available"===await this._tilemapCache.fetchAvailability(n,i.row,i.col,t))break}catch(o){}if(n--,r++,i=this.identifyPixelLocation(a,r,t.datumTransformation),null===i)return null}return-1===n||null==i?null:r}async _fetchRasterInfo(e){const t=this.sourceJSON,i=Math.ceil((t.extent.xmax-t.extent.xmin)/t.pixelSizeX-.1),r=Math.ceil((t.extent.ymax-t.extent.ymin)/t.pixelSizeY-.1),s=h.fromJSON(t.spatialReference||t.extent.spatialReference);if("Map"===this.tileType)return new oe({width:i,height:r,bandCount:3,extent:u.fromJSON(t.extent),spatialReference:s,pixelSize:new w({x:t.pixelSizeX,y:t.pixelSizeY,spatialReference:s}),pixelType:"u8",statistics:null,keyProperties:{DataType:"processed"}});const{slice:n,signal:a}=e,o=!!t.hasRasterAttributeTable&&this.request(this.url+"/rasterAttributeTable",{query:{slice:n,f:"json"},signal:a}).then((e=>k.fromJSON(e.data))).catch((()=>null)),l=!!t.hasColormap&&this.request(this.url+"/colormap",{query:{slice:n,f:"json"},signal:a}).then((e=>{var t;return null==(t=e.data)?void 0:t.colormap})),c=!!t.hasHistograms&&this.request(this.url+"/histograms",{query:{slice:n,f:"json"},signal:a}).then((e=>{var t;return null==(t=e.data)?void 0:t.histograms})),f=this.request(this.url+"/keyProperties",{query:{f:"json"},signal:a}).then((e=>e.data)).catch((()=>{})),d=!!t.hasMultidimensions&&this._fetchMultidimensionalInfo(),p=!!t.hasMultidimensions&&this.request(this.url+"/slices",{query:{f:"json"},signal:a}).then((e=>e.data&&e.data.slices)).catch((()=>{}));return S([o,l,c,f,d,p]).then((e=>{let n=null;if(t.minValues&&t.minValues.length===t.bandCount){n=[];for(let e=0;e<t.minValues.length;e++)n.push({min:t.minValues[e],max:t.maxValues[e],avg:t.meanValues[e],stddev:t.stdvValues[e]})}return this._slices=e[5]||null,new oe({width:i,height:r,bandCount:t.bandCount,extent:u.fromJSON(t.extent),spatialReference:s,pixelSize:new w({x:t.pixelSizeX,y:t.pixelSizeY,spatialReference:s}),pixelType:t.pixelType.toLowerCase(),statistics:n,attributeTable:e[0]||null,colormap:e[1]||null,histograms:e[2]||null,keyProperties:e[3]||{},multidimensionalInfo:e[4]||null})}))}async _fetchMultidimensionalInfo(e){var t;const i=await this.request(this.url+"/multidimensionalInfo",{query:{f:"json"},signal:e}).then((e=>{var t;return null==(t=e.data)?void 0:t.multidimensionalInfo}));return null!=(t=i.variables)&&t.length&&i.variables.forEach((e=>{var t;null!=(t=e.statistics)&&t.length&&e.statistics.forEach((e=>{e.avg=e.mean,e.stddev=e.standardDeviation}))})),i}};o([l({type:String,json:{write:!0}})],nt.prototype,"datasetFormat",void 0),o([l()],nt.prototype,"tileType",void 0),nt=o([p("esri.layers.support.rasterDatasets.ImageServerRaster")],nt);var at=nt;const ot=new Map;ot.set("Int8","s8"),ot.set("UInt8","u8"),ot.set("Int16","s16"),ot.set("UInt16","u16"),ot.set("Int32","s32"),ot.set("UInt32","u32"),ot.set("Float32","f32"),ot.set("Float64","f32"),ot.set("Double64","f32");const lt=new Map;lt.set("lerc",".lrc"),lt.set("none",".til"),lt.set("deflate",".pzp"),lt.set("jpeg",".jzp");let ut=class extends He{constructor(){super(...arguments),this._files=null,this._storageIndex=null,this.datasetFormat="MRF"}async open(e){var t;await this.init(),this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1);const i=e?T(e.signal):null,r=await this.request(this.url,{responseType:"xml",signal:i}),{rasterInfo:s,files:n}=this._parseHeader(r.data);if(-1===(null==(t=this.ioConfig.skipExtensions)?void 0:t.indexOf("aux.xml"))){const t=await this._fetchAuxiliaryData(e);var a;null!=t&&(s.statistics=null!=(a=t.statistics)?a:s.statistics,s.histograms=t.histograms,t.histograms&&!x(s.statistics)&&(s.statistics=we(t.histograms)))}this._set("rasterInfo",s),this._files=n;const o=await this.request(n.index,{responseType:"array-buffer",signal:i});this._storageIndex=this._parseIndex(o.data);let l,u,c=0,h=-1;const{blockWidth:f,blockHeight:d,compression:p}=this.rasterInfo.storageInfo,m=this.rasterInfo.storageInfo.pyramidScalingFactor,{width:y,height:g,bandCount:w}=this.rasterInfo,I=[],v="none"===p?1:w;for(;c<this._storageIndex.length;)h++,l=Math.ceil(y/f/Math.pow(m,h)),u=Math.ceil(g/d/Math.pow(m,h)),c+=l*u*v*4,I.push({maxRow:u,maxCol:l,minCol:0,minRow:0});this.rasterInfo.storageInfo.blockBoundary=I,h>0&&(this.rasterInfo.storageInfo.firstPyramidLevel=1,this.rasterInfo.storageInfo.maximumPyramidLevel=h),this.updateTileInfo()}async fetchRawTile(e,t,i,r={}){const{blockWidth:s,blockHeight:n,blockBoundary:a,compression:o}=this.rasterInfo.storageInfo,l=a[e];if(!l||l.maxRow<t||l.maxCol<i||l.minRow>t||l.minCol>i)return null;const{bandCount:u,pixelType:c}=this.rasterInfo,{ranges:h,actualTileWidth:f,actualTileHeight:d}=this._getTileLocation(e,t,i);if(!h||0===h.length)return null;if(0===h[0].from&&0===h[0].to){const e=new Uint8Array(s*n);return new ve({width:s,height:n,pixels:null,mask:e,validPixelCount:0})}const{bandIds:p}=this.ioConfig,m="none"===o?1:u,y=[];let g=0;for(g=0;g<m;g++)(!p||p.indexOf[g]>-1)&&y.push(this.request(this._files.data,{range:{from:h[g].from,to:h[g].to},responseType:"array-buffer",signal:r.signal}));const x=await S(y),w=x.map((e=>e.data.byteLength)).reduce(((e,t)=>e+t)),I=new Uint8Array(w);let v=0;for(g=0;g<m;g++)I.set(new Uint8Array(x[g].data),v),v+=x[g].data.byteLength;const b="lerc"===this.rasterInfo.storageInfo.compression?"lerc":"bip",T=await this.decodePixelBlock(I.buffer,{width:s,height:n,format:b,pixelType:c});let R=0,C=0;if(f!==s||d!==n){let e=T.mask;if(e)for(g=0;g<n;g++)if(C=g*s,g<d)for(R=f;R<s;R++)e[C+R]=0;else for(R=0;R<s;R++)e[C+R]=0;else for(e=new Uint8Array(s*n),T.mask=e,g=0;g<d;g++)for(C=g*s,R=0;R<f;R++)e[C+R]=1}return T}_parseIndex(e){if(e.byteLength%16>0)throw"invalid array buffer must be multiples of 16";let t,i,r,s,n,a;if(ue){for(i=new Uint8Array(e),s=new ArrayBuffer(e.byteLength),r=new Uint8Array(s),n=0;n<e.byteLength/4;n++)for(a=0;a<4;a++)r[4*n+a]=i[4*n+3-a];t=new Uint32Array(s)}else t=new Uint32Array(e);return t}_getTileLocation(e,t,i){const{blockWidth:r,blockHeight:s,pyramidScalingFactor:n,compression:a}=this.rasterInfo.storageInfo,{width:o,height:l,bandCount:u}=this.rasterInfo,c="none"===a?1:u;let h,f,d,p=0,m=0;for(d=0;d<e;d++)m=Math.pow(n,d),h=Math.ceil(o/r/m),f=Math.ceil(l/s/m),p+=h*f;m=Math.pow(n,e),h=Math.ceil(o/r/m),f=Math.ceil(l/s/m),p+=t*h+i,p*=4*c;const y=this._storageIndex.subarray(p,p+4*c);let g=0,x=0;const w=[];for(let I=0;I<c;I++)g=y[4*I+0]*Math.pow(2,32)+y[4*I+1],x=g+y[4*I+2]*Math.pow(2,32)+y[4*I+3],w.push({from:g,to:x});return{ranges:w,actualTileWidth:i<h-1?r:Math.ceil(o/m)-r*(h-1),actualTileHeight:t<f-1?s:Math.ceil(l/m)-s*(f-1)}}_parseHeader(e){const t=Ye(e,"MRF_META/Raster");if(!t)throw new b("mrf:open","not a valid MRF format");const i=Ye(t,"Size"),r=parseInt(i.getAttribute("x"),10),s=parseInt(i.getAttribute("y"),10),n=parseInt(i.getAttribute("c"),10),a=(Xe(t,"Compression")||"none").toLowerCase();if(!a||-1===["none","lerc"].indexOf(a))throw new b("mrf:open","currently does not support compression "+a);const o=Xe(t,"DataType")||"UInt8",l=ot.get(o);if(null==l)throw new b("mrf:open","currently does not support pixel type "+o);const c=Ye(t,"PageSize"),f=parseInt(c.getAttribute("x"),10),d=parseInt(c.getAttribute("y"),10),p=Ye(t,"DataValues");let m,y;if(p&&(y=p.getAttribute("NoData"),null!=y&&(m=y.trim().split(" ").map((e=>parseFloat(e))))),Ye(e,"MRF_META/CachedSource"))throw new b("mrf:open","currently does not support MRF referencing other data files");const g=Ye(e,"MRF_META/GeoTags"),x=Ye(g,"BoundingBox");if(null==x)throw new b("mrf:open","missing node MRF_META/GeoTags/BoundingBox");const I=parseFloat(x.getAttribute("minx")),v=parseFloat(x.getAttribute("miny")),T=parseFloat(x.getAttribute("maxx")),R=parseFloat(x.getAttribute("maxy")),S=Xe(g,"Projection"),C=Xe(e,"datafile"),_=Xe(e,"IndexFile");let M;"LOCAL_CS[]"!==S&&(M=new h({wkt:S}));const k=new u(I,v,T,R);k.spatialReference=M;const F=Ye(e,"MRF_META/Rsets"),P=parseInt(F&&F.getAttribute("scale")||"2",10),O=new ze({origin:new w({x:k.xmin,y:k.ymax,spatialReference:M}),blockWidth:f,blockHeight:d,pyramidBlockWidth:f,pyramidBlockHeight:d,compression:a,pyramidScalingFactor:P}),D=new w({x:(T-I)/r,y:(R-v)/s,spatialReference:M});return{rasterInfo:new oe({width:r,height:s,extent:k,spatialReference:M,bandCount:n,pixelType:l,pixelSize:D,noDataValue:m,storageInfo:O}),files:{mrf:this.url,index:_||this.url.replace(".mrf",".idx"),data:C||this.url.replace(".mrf",lt.get(a))}}}async _fetchAuxiliaryData(e){try{const{data:t}=await this.request(this.url+".aux.xml",{responseType:"xml",signal:null==e?void 0:e.signal});return it(t)}catch(t){return null}}};o([l()],ut.prototype,"_files",void 0),o([l()],ut.prototype,"_storageIndex",void 0),o([l({type:String,json:{write:!0}})],ut.prototype,"datasetFormat",void 0),ut=o([p("esri.layers.support.rasterIO.MRFRaster")],ut);var ct=ut;const ht=function(e,t){const i=e.get(t);return i&&i.values},ft=function(e,t){const i=e.get(t);return i&&i.values[0]};let dt=class extends He{constructor(){super(...arguments),this._files=null,this._headerInfo=null,this._bufferSize=1048576,this.datasetFormat="TIFF"}async open(e){var t;await this.init();const i=e?T(e.signal):null,{data:r}=await this.request(this.url,{range:{from:0,to:this._bufferSize},responseType:"array-buffer",signal:i});if(!r)throw new b("tiffraster:open","failed to open url "+this.url);this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1);const{littleEndian:s,firstIFD:a,isBigTiff:o}=ce(r),l=[];await this.readIFDs(l,r,s,a,0,o?8:4,i);const c=he(l),{width:h,height:f,tileWidth:d,tileHeight:p,planes:m,pixelType:y,compression:g,firstPyramidLevel:I,maximumPyramidLevel:v,pyramidBlockWidth:R,pyramidBlockHeight:S,tileBoundary:C,metadata:_}=c,M=u.fromJSON(c.extent),k=M.spatialReference,F=new w(M?{x:M.xmin,y:M.ymax,spatialReference:k}:{x:0,y:0}),P=new ze({blockWidth:d,blockHeight:p,pyramidBlockWidth:R,pyramidBlockHeight:S,compression:g,origin:F,firstPyramidLevel:I,maximumPyramidLevel:v,blockBoundary:C}),O=new w({x:(M.xmax-M.xmin)/h,y:(M.ymax-M.ymin)/f,spatialReference:k}),D=_?{BandProperties:_.bandProperties,DataType:_.dataType}:{},B=new oe({width:h,height:f,bandCount:m,pixelType:y,compression:g,pixelSize:O,storageInfo:P,spatialReference:k,keyProperties:D,extent:M,statistics:_?_.statistics:null});if(-1===(null==(t=this.ioConfig.skipExtensions)?void 0:t.indexOf("aux.xml"))){const t=await this._fetchAuxiliaryData(e);var N;null!=t&&(B.statistics=null!=(N=t.statistics)?N:B.statistics,B.histograms=t.histograms,t.histograms&&!x(B.statistics)&&(B.statistics=we(t.histograms)))}if(this._set("rasterInfo",B),this._headerInfo=n({littleEndian:s,isBigTiff:o,ifds:l},c),!this._headerInfo.isSupported)throw new b("tiffraster:open","this tiff is not supported: "+this._headerInfo.message);this.updateTileInfo()}async fetchRawTile(e,t,i,r={}){if(!this._headerInfo&&this._headerInfo.isSupported)return null;const{blockBoundary:s}=this.rasterInfo.storageInfo,n=e>0?this.rasterInfo.storageInfo.pyramidBlockWidth:this.rasterInfo.storageInfo.blockWidth,a=e>0?this.rasterInfo.storageInfo.pyramidBlockHeight:this.rasterInfo.storageInfo.blockHeight,o=s[e];if(!o||o.maxRow<t||o.maxCol<i||o.minRow>t||o.minCol>i)return null;const l=this.getTileLocation(e,t,i);if(!l)return null;const{range:u,actualTileWidth:c,actualTileHeight:h,ifd:f}=l,{data:d}=await this.request(this.url,{range:u,responseType:"array-buffer",signal:r.signal}),p=await this.decodePixelBlock(d,{format:"tiff",customOptions:{headerInfo:this._headerInfo,ifd:f,offset:0,size:0},width:n,height:a,planes:null,pixelType:null});let m,y,g;if(c!==n||h!==a){let e=p.mask;if(e)for(m=0;m<a;m++)if(g=m*n,m<h)for(y=c;y<n;y++)e[g+y]=0;else for(y=0;y<n;y++)e[g+y]=0;else for(e=new Uint8Array(n*a),p.mask=e,m=0;m<h;m++)for(g=m*n,y=0;y<c;y++)e[g+y]=1}return p}async readIFDs(e,t,i,r,s,n=4,a){if(!r)return null;(r>=t.byteLength||r<0)&&(t=(await this.request(this.url,{range:{from:r+s,to:r+s+this._bufferSize},responseType:"array-buffer",signal:a})).data,s=r+s,r=0);const o=await this.readIFD(t,i,r,s,fe.TIFF_TAGS,n,a);if(e.push(o.ifd),!o.nextIFD)return null;await this.readIFDs(e,t,i,o.nextIFD-s,s,n,a)}async readIFD(e,t,i,r,s=fe.TIFF_TAGS,n=4,a){if(!e)return null;const o=de(e,t,i,r,s,n);if(o.success){const i=[];if(o.ifd.forEach((e=>{e.values||i.push(e)})),i.length>0){const s=i.map((e=>e.offlineOffsetSize)),n=Math.min.apply(null,s.map((e=>e[0])));if(Math.min.apply(null,s.map((e=>e[0]+e[1])))-n<=this._bufferSize){const{data:s}=await this.request(this.url,{range:{from:n,to:n+this._bufferSize},responseType:"array-buffer",signal:a});e=s,r=n,i.forEach((i=>pe(e,t,i,r)))}}if(o.ifd.has("GEOKEYDIRECTORY")){const i=o.ifd.get("GEOKEYDIRECTORY"),s=i.values;if(s&&s.length>4){const n=s[0]+"."+s[1]+"."+s[2],o=await this.readIFD(e,t,i.valueOffset+6-r,r,fe.GEO_KEYS,2,a);i.data=o.ifd,i.data&&i.data.set("GEOTIFFVersion",{id:0,type:2,valueCount:1,valueOffset:null,values:[n]})}}return o}if(o.requiredBufferSize&&o.requiredBufferSize!==e.byteLength){const i=await this.request(this.url,{range:{from:r,to:r+o.requiredBufferSize+4},responseType:"array-buffer",signal:a});return(e=i.data).byteLength<o.requiredBufferSize?null:this.readIFD(e,t,0,r,fe.TIFF_TAGS,4,a)}}getTileLocation(e,t,i){const{firstPyramidLevel:r,blockBoundary:s}=this.rasterInfo.storageInfo,n=0===e?0:e-(r-1),a=this._headerInfo.ifds[n];if(!a)return null;const o=ht(a,"TILEOFFSETS");if(void 0===o)return null;const l=ht(a,"TILEBYTECOUNTS"),{minRow:u,minCol:c,maxRow:h,maxCol:f}=s[n];if(t>h||i>f||t<u||i<c)return null;const d=ft(a,"IMAGEWIDTH"),p=ft(a,"IMAGELENGTH"),m=ft(a,"TILEWIDTH"),y=ft(a,"TILELENGTH"),g=t*(f+1)+i,x=o[g],w=l[g];return null==x||null==w?null:{range:{from:x,to:x+w-1},ifd:a,actualTileWidth:i===f?d%m:m,actualTileHeight:t===h?p%y:y}}async _fetchAuxiliaryData(e){try{const{data:t}=await this.request(this.url+".aux.xml",{responseType:"xml",signal:null==e?void 0:e.signal});return it(t)}catch(t){return null}}};o([l()],dt.prototype,"_files",void 0),o([l()],dt.prototype,"_headerInfo",void 0),o([l()],dt.prototype,"_bufferSize",void 0),o([l({type:String,json:{write:!0}})],dt.prototype,"datasetFormat",void 0),dt=o([p("esri.layers.support.rasterDatasets.TIFFRaster")],dt);var pt=dt;const mt=new Map;mt.set("CRF",{desc:"Cloud Raster Format",constructor:Ae}),mt.set("MRF",{desc:"Meta Raster Format",constructor:ct}),mt.set("TIFF",{desc:"GeoTIFF",constructor:pt}),mt.set("RasterTileServer",{desc:"Raster Tile Server",constructor:at}),mt.set("JPG",{desc:"JPG Raster Format",constructor:st}),mt.set("PNG",{desc:"PNG Raster Format",constructor:st}),mt.set("GIF",{desc:"GIF Raster Format",constructor:st}),mt.set("BMP",{desc:"BMP Raster Format",constructor:st});const yt=N()({RSP_NearestNeighbor:"nearest",RSP_BilinearInterpolation:"bilinear",RSP_CubicConvolution:"cubic",RSP_Majority:"majority"});function gt(){return{enabled:!this.loaded||"RasterTileServer"===this.raster.datasetFormat&&"Raster"===this.raster.tileType}}let xt=class extends(z(L(H(E(J(Be(A(j)))))))){constructor(...e){super(...e),this.bandIds=null,this.interpolation=null,this.legendEnabled=!0,this.isReference=null,this.listMode="show",this.sourceJSON=null,this.version=null,this.title=null,this.type="imagery-tile",this.operationalLayerType="ArcGISTiledImageServiceLayer",this.popupEnabled=!0,this.popupTemplate=null}normalizeCtorArgs(e,t){return"string"==typeof e?n({url:e},t):e}load(e){const t=x(e)?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"]},e).then((()=>this._openRaster(t)),(()=>this._openRaster(t)))),C(this)}get defaultPopupTemplate(){return this.createPopupTemplate()}get fields(){var e,t;let i=[new U({name:"Raster.ServicePixelValue",alias:"Pixel Value",domain:null,editable:!1,length:50,type:"string"})];const r=null==(e=this.rasterInfo)||null==(t=e.attributeTable)?void 0:t.fields;if(r){const e=r.filter((e=>"oid"!==e.type&&"value"!==e.name.toLowerCase())).map((e=>{const t=e.clone();return t.name="Raster."+e.name,t}));i=i.concat(e)}return i}set renderer(e){this._set("renderer",e),this.updateRenderer()}readRenderer(e,t,i){const r=t&&t.layerDefinition&&t.layerDefinition.drawingInfo&&t.layerDefinition.drawingInfo.renderer,s=ie(r,i)||void 0;if(null!=s)return s}createPopupTemplate(e){return q(this,e)}write(e,t){const{raster:i}=this;if(this.loaded?"RasterTileServer"===i.datasetFormat&&("Raster"===i.tileType||"Map"===i.tileType):this.url&&/\/ImageServer(\/|\/?$)/i.test(this.url))return super.write(e,t);if(t&&t.messages){const e=`${t.origin}/${t.layerContainerType||"operational-layers"}`;t.messages.push(new b("layer:unsupported",`Layers (${this.title}, ${this.id}) of type '${this.declaredClass}' are not supported in the context of '${e}'`,{layer:this}))}return null}async _openRaster(e){this.raster?(this.raster.rasterInfo||await this.raster.open(),this.url=this.raster.url):this.raster=await class{static get supportedFormats(){const e=new Set;return mt.forEach(((t,i)=>e.add(i))),e}static async open(e){const{url:t,ioConfig:i,sourceJSON:r}=e;let s=e.datasetFormat;null==s&&t.lastIndexOf(".")&&(s=t.slice(t.lastIndexOf(".")+1).toUpperCase()),"OVR"===s||"TIF"===s?s="TIFF":"JPG"!==s&&"JPEG"!==s&&"JFIF"!==s||(s="JPG"),t.toLowerCase().indexOf("/imageserver")>-1&&-1===t.toLowerCase().indexOf("/wcsserver")&&(s="RasterTileServer");const n={url:t,sourceJSON:r,datasetFormat:s,ioConfig:i||{bandIds:null,sampling:null}};let a,o;if(this.supportedFormats.has(s))return a=mt.get(s).constructor,o=new a(n),await o.open({signal:e.signal}),o;if(s)throw new b("rasterfactory:open","not a supported format "+s);const l=Array.from(mt.keys());let u=0;const c=function(){return s=l[u++],s?(a=mt.get(s).constructor,o=new a(n),o.open({signal:e.signal}).then((()=>o)).catch((()=>c()))):null};return c()}static register(e,t,i){mt.has(e.toUpperCase())||mt.set(e.toUpperCase(),{desc:t,constructor:i})}}.open({url:this.url,sourceJSON:this.sourceJSON,ioConfig:this.ioConfig,signal:e});const{rasterInfo:t}=this.raster;if(!t)throw new b("imagery-tile-layer:load","cannot load resources on "+this.url);this.sourceJSON=this.sourceJSON||this.raster.sourceJSON,null!=this.sourceJSON&&(this._set("version",this.sourceJSON.currentVersion),this._set("copyright",this.sourceJSON.copyrightText)),null==this.title&&(this.title=this.raster.datasetName),"Map"===this.raster.tileType&&(this.popupEnabled=!1),this._configDefaultSettings()}};o([l()],xt.prototype,"ioConfig",void 0),o([l({type:[W],json:{write:{overridePolicy:gt}}})],xt.prototype,"bandIds",void 0),o([l({json:{write:{overridePolicy:gt}}}),G(yt)],xt.prototype,"interpolation",void 0),o([l({json:{write:!0}})],xt.prototype,"multidimensionalDefinition",void 0),o([l($)],xt.prototype,"legendEnabled",void 0),o([l({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],xt.prototype,"isReference",void 0),o([l({type:["show","hide"]})],xt.prototype,"listMode",void 0),o([l()],xt.prototype,"sourceJSON",void 0),o([l({readOnly:!0})],xt.prototype,"version",void 0),o([l()],xt.prototype,"title",void 0),o([l({readOnly:!0,json:{read:!1}})],xt.prototype,"type",void 0),o([l({type:["ArcGISTiledImageServiceLayer"]})],xt.prototype,"operationalLayerType",void 0),o([l({type:Boolean,value:!0,json:{read:{source:"disablePopup",reader:(e,t)=>!t.disablePopup},write:{target:"disablePopup",overridePolicy:gt,writer(e,t,i){t[i]=!e}}}})],xt.prototype,"popupEnabled",void 0),o([l({type:V,json:{read:{source:"popupInfo"},write:{target:"popupInfo",overridePolicy:gt}}})],xt.prototype,"popupTemplate",void 0),o([l({readOnly:!0,dependsOn:["title"]})],xt.prototype,"defaultPopupTemplate",null),o([l({readOnly:!0,type:[U],dependsOn:["rasterInfo"]})],xt.prototype,"fields",null),o([l({types:K,json:{name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:gt},origins:{"web-scene":{types:re,name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:e=>({enabled:e&&"vector-field"!==e.type})}}}}})],xt.prototype,"renderer",null),o([Y("renderer")],xt.prototype,"readRenderer",null),xt=o([p("esri.layers.ImageryTileLayer")],xt);var wt=xt;export default wt;
