import{e,y as t,aS as i,i as r,O as s,m as a,k as n,af as o,cz as p,g as l,fY as h,fQ as d,z as c,fU as u,c4 as m,U as y,ct as g,A as w,fZ as x,fq as v,bf as f,bh as b}from"./vendor.1ee57f36.js";import{l as j,p as V}from"./LayerView2D.5b971eca.js";import{d as _}from"./popupUtils.51a8577b.js";import{r as E}from"./Container.c19388ee.js";import{Q as R}from"./GraphicsView2D.5ff45ce2.js";import{p as C}from"./pixelUtils.d13a81d6.js";import{h as D}from"./Bitmap.979d0e7e.js";import{t as I}from"./BitmapContainer.5579ad62.js";import{w as U}from"./ExportStrategy.9f412349.js";import"./mat4f32.65c405e6.js";import"./rbush.d43ba1fa.js";import"./json.9d10e1a3.js";import"./quickselect.53c6798b.js";import"./shapingUtils.66b0bc31.js";import"./BidiEngine.39026c84.js";import"./MD5.89293f8b.js";import"./Utils.88967ee0.js";import"./MaterialKey.464cac5a.js";import"./visualVariablesUtils.dc4022b6.js";import"./Rect.8611b8cd.js";import"./WGLMeshFactory.b3d89ebf.js";import"./index.4894e768.js";import"./cimAnalyzer.a961a551.js";import"./quantizationUtils.66d2dc60.js";import"./CIMSymbolHelper.2ecfa4b9.js";import"./VertexBuffer.19222be6.js";import"./CircularArray.1d7faf48.js";import"./TurboLine.6302d753.js";import"./GeometryUtils.4f6b8486.js";import"./FeatureContainer.e42ac772.js";import"./TileContainer.7d423330.js";import"./WGLContainer.df898e6a.js";import"./ShaderCompiler.00c23a07.js";import"./Program.76c009ec.js";import"./earcut.4e65dd4c.js";import"./ComputedAttributeStorage.637c93e6.js";import"./FeatureSetReader.3ec5c3db.js";import"./centroid.b04b550b.js";import"./graphicsUtils.0fbe3e39.js";const q=l=>{let h=class extends l{constructor(){super(...arguments),this.view=null}async fetchPopupFeatures(e,t){const{layer:i}=this;if(!e)return s(new a("imagerylayerview:fetchPopupFeatures","Nothing to fetch without area",{layer:i}));const{popupEnabled:r}=i,l=_(i,t);if(!r||!n(l))throw new a("imagerylayerview:fetchPopupFeatures","Missing required popupTemplate or popupEnabled",{popupEnabled:r,popupTemplate:l});const h=await l.getRequiredFields(),d=new o;d.geometry=e,d.outFields=h,d.outSpatialReference=e.spatialReference;const c=this.view.resolution,u="2d"===this.view.type?new p(c,c,this.view.spatialReference):new p(.5*c,.5*c,this.view.spatialReference),{returnTopmostRaster:m,showNoDataRecords:y}=l.layerOptions||{returnTopmostRaster:!0,showNoDataRecords:!1},g={returnDomainValues:!0,returnTopmostRaster:m,pixelSize:u,showNoDataRecords:y};return i.queryVisibleRasters(d,g).then((e=>e))}canResume(){var e;return!(!super.canResume()||null!=(e=this.timeExtent)&&e.isEmpty)}};return e([t()],h.prototype,"layer",void 0),e([t({dependsOn:["timeExtent"]})],h.prototype,"suspended",void 0),e([t(i)],h.prototype,"timeExtent",void 0),e([t()],h.prototype,"view",void 0),h=e([r("esri.views.layers.ImageryLayerView")],h),h},M=l.getLogger("esri.views.2d.layers.imagery.ImageryGraphicsView2D");let B=class extends(j(V)){constructor(){super(...arguments),this.container=new E,this._graphicsView=null,this.type="Graphics",this._graphics=new h,this._updateGraphics=d((async(e,t)=>{if(!e.stationary)return;const i=e.state,r=new c({xmin:i.extent.xmin,ymin:i.extent.ymin,xmax:i.extent.xmax,ymax:i.extent.ymax,spatialReference:i.spatialReference}),s=e.state.size[0],a=e.state.size[1],n={};n.timeExtent=this.timeExtent,n.requestAsImageElement=!1,n.signal=t;const o=this._getVectorFieldExportParams({extent:r,width:s,height:a}),p=await this.layer.fetchImage(o.extent,o.width,o.height,n),l=this.layer.renderer;if("vector-field"===l.type){this._pixelData={extent:o.extent,pixelBlock:p.pixelData.pixelBlock};const t=await l.getGraphicsFromPixelData(p.pixelData,"vector-uv"===this.layer.rasterInfo.dataType);this._graphicsView.update(e),await u(0).then((()=>{this._graphics.set("items",t)}))}}))}get updating(){var e;return null==(e=this._graphicsView)?void 0:e.updating}update(e){this._updateGraphics(e).catch((e=>{m(e)||M.error(e)}))}hitTest(e,t){if(this.suspended)return y(null);const i=this.view.toMap(g(e,t));return y(new w({attributes:{},geometry:i,layer:this.layer}))}attach(){this._graphicsView=new R({view:this.view,graphics:this._graphics,requestUpdateCallback:()=>this.requestUpdate()})}detach(){this._graphics.destroy(),this._graphicsView.destroy(),this.container.removeChild(this._graphicsView.container),this._graphicsView=null}moveStart(){}viewChange(){}moveEnd(){}install(e){this.container.addChild(this._graphicsView.container),e.addChild(this.container)}uninstall(e){this.container.removeChild(this._graphicsView.container),e.removeChild(this.container)}isUpdating(){return this._graphicsView.updating||this.updateRequested}getPixelData(){return this.updating?null:this._pixelData}redraw(){}_getVectorFieldExportParams(e){var t,i;let{extent:r,width:s,height:a}=e;const n=this.layer,o=null==(t=n.fullExtent)?void 0:t.xmin,p=null==(i=n.fullExtent)?void 0:i.ymax;let l;"vector-field"===n.renderer.type&&(l=n.renderer.symbolTileSize),l=Math.max(l||0,30),s=Math.ceil(s*(1/l)),a=Math.ceil(a*(1/l));const h=(r.xmax-r.xmin)/s,d=(r.ymax-r.ymin)/a;return r.xmin=o+Math.floor((r.xmin-o)/h)*h,r.xmax=o+Math.ceil((r.xmax-o)/h)*h,r.ymin=p+Math.floor((r.ymin-p)/d)*d,r.ymax=p+Math.ceil((r.ymax-p)/d)*d,{extent:r,width:s,height:a}}};e([t()],B.prototype,"container",void 0),e([t()],B.prototype,"layer",void 0),e([t()],B.prototype,"timeExtent",void 0),e([t({dependsOn:["_graphicsView.updating"]})],B.prototype,"updating",null),e([t()],B.prototype,"_graphicsView",void 0),e([x({graphics:"Graphics"})],B.prototype,"type",void 0),B=e([r("esri.views.2d.layers.imagery.ImageryGraphicsView2D")],B);var S=B;const k=l.getLogger("esri.views.2d.layers.imagery.ImageryView2D");let T=class extends(j(V)){constructor(){super(...arguments),this.container=new E,this.type="Imagery",this._bitmapView=null}get updating(){var e;return null==(e=this.strategy)?void 0:e.updating}update(e){this.strategy.update(e).catch((e=>{m(e)||k.error(e)}))}detach(){this.strategy.destroy(),this._bitmapView.removeAllChildren(),this.container.removeAllChildren()}hitTest(e,t){if(this.suspended)return y(null);const i=this.view.toMap(g(e,t));return y(new w({attributes:{},geometry:i,layer:this.layer}))}attach(){const e=this.layer.version>=10,t=this.layer.version>=10.1?this.layer.imageMaxHeight:2048,i=this.layer.version>=10.1?this.layer.imageMaxWidth:2048;this._bitmapView=new I,this.strategy=new U({container:this._bitmapView,imageNormalizationSupported:e,imageMaxHeight:t,imageMaxWidth:i,fetchSource:this._fetchImage.bind(this),requestUpdate:()=>this.requestUpdate()})}moveStart(){}viewChange(){}moveEnd(){}install(e){this.container.addChild(this._bitmapView),e.addChild(this.container)}uninstall(e){this.container.removeChild(this._bitmapView),e.removeChild(this.container)}redraw(){this.strategy.updateExports((e=>{e.source instanceof HTMLImageElement?e.requestRender():this.layer.applyRenderer({pixelBlock:e.source.pixelBlock}).then((t=>{const i=e.source;i.pixelBlock=t.pixelBlock,i.filter=e=>this.layer.applyFilter(e),this.container.requestRender()}))}))}isUpdating(){return this.strategy.updating||this.updateRequested}getPixelData(){if(this.updating)return null;const e=this.strategy.container.children;if(1===e.length&&e[0].source)return{extent:e[0].source.extent,pixelBlock:e[0].source.originalPixelBlock};if(e.length>1){const t=this.view.extent,i=e.map((e=>e.source)).filter((e=>e.extent&&e.extent.intersects(t))).map((e=>({extent:e.extent,pixelBlock:e.originalPixelBlock}))),r=C(i,t);return r?{extent:r.extent,pixelBlock:r.pixelBlock}:null}return null}_fetchImage(e,t,i,r){return(r=r||{}).timeExtent=this.timeExtent,r.requestAsImageElement=!0,this.layer.fetchImage(e,t,i,r).then((e=>e.imageElement?e.imageElement:this.layer.applyRenderer(e.pixelData,{signal:r.signal}).then((t=>{const i=new D(t.pixelBlock,t.extent.clone(),e.pixelData.pixelBlock);return i.filter=e=>this.layer.applyFilter(e),i}))))}};e([t()],T.prototype,"container",void 0),e([t()],T.prototype,"layer",void 0),e([t()],T.prototype,"strategy",void 0),e([t()],T.prototype,"timeExtent",void 0),e([t({dependsOn:["strategy.updating"]})],T.prototype,"updating",null),e([x({imagery:"Imagery"})],T.prototype,"type",void 0),T=e([r("esri.views.2d.layers.imagery.ImageryView2D")],T);var F=T;let P=class extends(q(v(j(V)))){constructor(){super(...arguments),this._exportImageVersion=-1}get pixelData(){return this.updating?null:this.subview.getPixelData()}get updating(){return!(this.subview&&!this.subview.updating)}hitTest(e,t){return this.suspended||!this.subview?y(null):this.subview.hitTest(e,t)}update(e){var t;null==(t=this.subview)||t.update(e)}attach(){this.layer.increaseRasterJobHandlerUsage(),this._setSubView(),this.handles.add([f(this,"layer.exportImageServiceParameters.version",(e=>{this._exportImageVersion!==e&&(this._exportImageVersion=e,this.requestUpdate())})),this.watch("timeExtent",(()=>{this.subview.timeExtent=this.timeExtent,this.requestUpdate()})),this.layer.on("redraw",(()=>this.subview.redraw())),b(this.layer,"renderer",(()=>this._setSubView()))],"imagerylayerview-update")}detach(){this.layer.decreaseRasterJobHandlerUsage(),this.subview.destroy(),this.handles.remove("imagerylayerview-update"),this._exportImageVersion=-1}moveStart(){}viewChange(){}moveEnd(){this.requestUpdate()}async doRefresh(){this.requestUpdate()}isUpdating(){return!this.subview||this.subview.isUpdating()}_setSubView(){var e;let t="Imagery";var i,r;"vector-field"===(null==(e=this.layer.renderer)?void 0:e.type)&&"lerc"===this.layer.format&&(t="Graphics"),this.subview&&this.subview.type===t||(null==(i=this.subview)||i.uninstall(this.container),null==(r=this.subview)||r.destroy(),this.subview="Imagery"===t?new F({layer:this.layer,view:this.view}):new S({layer:this.layer,view:this.view}),this.subview.attach(),this.subview.install(this.container)),this.requestUpdate()}};e([t({dependsOn:["updating"]})],P.prototype,"pixelData",null),e([t({readOnly:!0,dependsOn:["subview.updating"]})],P.prototype,"updating",null),e([t()],P.prototype,"subview",void 0),P=e([r("esri.views.2d.layers.ImageryLayerView2D")],P);var G=P;export default G;
