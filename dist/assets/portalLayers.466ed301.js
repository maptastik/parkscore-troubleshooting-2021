var e=Object.defineProperty,r=Object.prototype.hasOwnProperty,a=Object.getOwnPropertySymbols,t=Object.prototype.propertyIsEnumerable,n=(r,a,t)=>a in r?e(r,a,{enumerable:!0,configurable:!0,writable:!0,value:t}):r[a]=t,l=(e,l)=>{for(var o in l||(l={}))r.call(l,o)&&n(e,o,l[o]);if(a)for(var o of a(l))t.call(l,o)&&n(e,o,l[o]);return e};import{eR as o,U as s,O as c,m as i,ai as u,bk as y}from"./vendor.1ee57f36.js";import{a as p}from"./lazyLayerLoader.c609a97f.js";function m(e,r){return!!e.typeKeywords&&e.typeKeywords.indexOf(r)>-1}function d(e){switch(e.type){case"Map Service":return(r=e,S(r.url).then((e=>e.tileInfo))).then((e=>e?{className:"TileLayer"}:{className:"MapImageLayer"}));case"Feature Service":return function(e){return L(e).then((e=>{if("object"==typeof e){const r={};return null!=e.id&&(r.layerId=e.id),{className:"FeatureLayer",properties:r}}return{className:"GroupLayer"}}))}(e);case"Feature Collection":return async function(e){return await e.load(),m(e,"Map Notes")?{className:"MapNotesLayer"}:m(e,"Route Layer")?{className:"RouteLayer"}:1===I(await e.fetchData())?{className:"FeatureLayer"}:{className:"GroupLayer"}}(e);case"Scene Service":return function(e){return L(e).then((r=>{if("object"==typeof r){const a={};let t;if(null!=r.id?(a.layerId=r.id,t=`${e.url}/layers/${r.id}`):t=e.url,Array.isArray(e.typeKeywords)&&e.typeKeywords.length>0){const r={IntegratedMesh:"IntegratedMeshLayer","3DObject":"SceneLayer",Point:"SceneLayer",PointCloud:"PointCloudLayer",Building:"BuildingSceneLayer"};for(const a of Object.keys(r))if(-1!==e.typeKeywords.indexOf(a))return{className:r[a]}}return S(t).then((e=>{let r="SceneLayer";const t={Point:"SceneLayer","3DObject":"SceneLayer",IntegratedMesh:"IntegratedMeshLayer",PointCloud:"PointCloudLayer",Building:"BuildingSceneLayer"};return e&&e.layerType&&t[e.layerType]&&(r=t[e.layerType]),{className:r,properties:a}}))}return{className:"GroupLayer"}}))}(e);case"Image Service":return async function(e){var r,a,t;await e.load();const n=null!=(r=null==(a=e.typeKeywords)?void 0:a.map((e=>e.toLowerCase())))?r:[];if(n.indexOf("elevation 3d layer")>-1)return{className:"ElevationLayer"};if(n.indexOf("tiled imagery")>-1)return{className:"ImageryTileLayer"};const l=await e.fetchData(),o=null==l?void 0:l.layerType;if("ArcGISTiledImageServiceLayer"===o)return{className:"ImageryTileLayer"};if("ArcGISImageServiceLayer"===o)return{className:"ImageryLayer"};return"map"===(null==(t=(await S(e.url)).cacheType)?void 0:t.toLowerCase())?{className:"ImageryTileLayer"}:{className:"ImageryLayer"}}(e);case"Stream Service":return{className:"StreamLayer"};case"Vector Tile Service":return{className:"VectorTileLayer"};case"KML":return{className:"KMLLayer"};case"WMTS":return{className:"WMTSLayer"};case"WMS":return{className:"WMSLayer"};default:return c(new i("portal:unknown-item-type","Unknown item type '${type}'",{type:e.type}))}var r}function f(e){return(0,p[e.className])().then((r=>({constructor:r,properties:e.properties})))}function L(e){return!e.url||e.url.match(/\/\d+$/)?s({}):e.load().then((()=>e.fetchData())).then((r=>I(r)>0?h(r):S(e.url).then(h)))}function h(e){return 1===I(e)&&{id:y(g(e))}}function g(e){const r=e.layers;if(r&&r.length)return r[0].id;const a=e.tables;return a&&a.length?a[0].id:null}function I(e){var r,a,t,n;return(null!=(r=null==e||null==(a=e.layers)?void 0:a.length)?r:0)+(null!=(t=null==e||null==(n=e.tables)?void 0:n.length)?t:0)}function S(e){return u(e,{responseType:"json",query:{f:"json"}}).then((e=>e.data))}var v=Object.freeze({__proto__:null,[Symbol.toStringTag]:"Module",fromItem:function(e){return!e.portalItem||e.portalItem instanceof o||(e=l(l({},e),{portalItem:new o(e.portalItem)})),(r=e.portalItem,r.load().then(d).then(f)).then((r=>{const a=l({portalItem:e.portalItem},r.properties),t=r.constructor;return s(new t(a))}));var r},selectLayerClassPath:d});export{d as c,v as p,m as t};
