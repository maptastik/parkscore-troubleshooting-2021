import{dP as e,e as t,i,cO as s}from"./vendor.1ee57f36.js";import{l as a,m as r}from"./FeatureContainer.e42ac772.js";import{i as l}from"./shapingUtils.66b0bc31.js";import{m as n}from"./CircularArray.1d7faf48.js";import{o}from"./BaseTileRenderer.c672c923.js";import{I as h}from"./Utils.88967ee0.js";import{g as f}from"./WGLContainer.df898e6a.js";import"./VertexBuffer.19222be6.js";import"./TileContainer.7d423330.js";import"./BidiEngine.39026c84.js";import"./MD5.89293f8b.js";import"./MaterialKey.464cac5a.js";import"./visualVariablesUtils.dc4022b6.js";import"./Rect.8611b8cd.js";import"./Container.c19388ee.js";import"./mat4f32.65c405e6.js";import"./ShaderCompiler.00c23a07.js";import"./Program.76c009ec.js";import"./GeometryUtils.4f6b8486.js";import"./earcut.4e65dd4c.js";class u extends a{constructor(e,t,i){super(e),this._pointToCallbacks=new Map,this._layer=i,this._layerView=t}renderChildren(e){this.attributeView.update(),this.hasAnimation&&e.painter.effects.integrate.draw(e,e.attributeView),super.renderChildren(e)}hitTest(t,i){const s=[t,i],a=e();return this._pointToCallbacks.set(s,a),this.requestRender(),a.promise}doRender(e){const{minScale:t,maxScale:i}=this._layer,s=e.state.scale;s<=(t||1/0)&&s>=i&&super.doRender(e)}get hasAnimation(){return this.hasLabels}get hasLabels(){const e=this._layer.featureReduction,t=e&&"cluster"===e.type&&e.labelsVisible&&e.labelingInfo&&e.labelingInfo.length;return this._layer.labelingInfo&&this._layer.labelingInfo.length&&this._layer.labelsVisible||!!t}get labelsVisible(){return this._layer.labelsVisible}prepareRenderPasses(e){const t=e.registerRenderPass({name:"label",brushes:[f.label],target:()=>this.hasLabels?this.children:null,drawPhase:h.LABEL|h.LABEL_ALPHA}),i=e.registerRenderPass({name:"geometry",brushes:[f.fill,f.line,f.marker,f.text],target:()=>this.children,enableDefaultDraw:()=>!this._layerView.hasEffects,effects:[{apply:e.effects.outsideEffect,enable:()=>this._layerView.hasEffects,args:()=>this._layerView.effectLists.excluded},{apply:e.effects.insideEffect,enable:()=>this._layerView.hasEffects,args:()=>this._layerView.effectLists.included},{apply:e.effects.hittest,enable:()=>!!this._pointToCallbacks.size,args:()=>this._pointToCallbacks}]}),s=e.registerRenderPass({name:"highlight",brushes:[f.fill,f.line,f.marker,f.text],target:()=>this.children,drawPhase:h.HIGHLIGHT,enableDefaultDraw:()=>!1,effects:[{apply:e.effects.highlight,enable:()=>!!this._layerView.hasHighlight()}]});return[...super.prepareRenderPasses(e),i,s,t]}}let d=class extends o{install(e){const t=new u(this.tileInfoView,this.layerView,this.layer);this.featuresView=t,e.addChild(t)}uninstall(e){e.removeChild(this.featuresView),this.featuresView.destroy()}hitTest(e,t){return this.featuresView.hitTest(e,t)}supportsRenderer(e){return null!=e&&-1!==["simple","class-breaks","unique-value","dot-density","dictionary"].indexOf(e.type)}onConfigUpdate(e){let t=null;if("visualVariables"in e){const i=(l(e).visualVariables||[]).map((e=>{const t=e.clone();return"normalizationField"in e&&(t.normalizationField=null),e.valueExpression&&"$view.scale"!==e.valueExpression&&(t.valueExpression=null,t.field="nop"),t}));t=n(i)}this.featuresView.setRendererInfo(e,t,this.layerView.effects)}onTileData(e){const t=this.tiles.get(e.tileKey);t&&this.featuresView.onTileData(t,e.data),this.layerView.view.labelManager.requestUpdate()}onTileError(e){const t=this.tiles.get(e.tileKey);t&&this.featuresView.onTileError(t)}forceAttributeTextureUpload(){this.featuresView.attributeView.forceTextureUpload()}lockGPUUploads(){this.featuresView.attributeView.lockTextureUpload(),this.tiles.forEach((e=>e.lockUploads()))}unlockGPUUploads(){this.featuresView.attributeView.unlockTextureUpload(),this.tiles.forEach((e=>e.unlockUploads()))}async getMaterialItems(e){return this.featuresView.getMaterialItems(e)}invalidateLabels(){this.featuresView.hasLabels&&(this.tiles.forEach((e=>e.isDirty=!0)),this.layerView.view.labelManager.requestUpdate())}createTile(e){const t=this.tileInfoView.getTileBounds(s(),e),i=new r(e,t);return this.featuresView.hasLabels&&this.layerView.view.labelManager.addTile(this.layerView,i),i}disposeTile(e){this.featuresView.removeChild(e),this.featuresView.hasLabels&&this.layerView.view.labelManager.removeTile(this.layerView,e.key.id),e.destroy(),this.layerView.view.labelManager.requestUpdate()}};d=t([i("esri.views.2d.layers.features.tileRenderers.SymbolTileRenderer")],d);var c=d;export default c;
