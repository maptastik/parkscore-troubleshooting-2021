import{z as e,U as t}from"./vendor.1ee57f36.js";import{u as r,o as s,A as o,c as i,U as c}from"./pixelUtils.d13a81d6.js";import{U as l,R as m}from"./RasterSymbolizer.c129c216.js";import"./LercCodec.7ceff0c9.js";import"./index.4894e768.js";export default class{async decode(e){const t=await l(e.data,e.options);return t&&t.toJSON()}symbolize(s){s.pixelBlock=r.fromJSON(s.pixelBlock),s.extent=s.extent?e.fromJSON(s.extent):null;const o=this.symbolizer.symbolize(s);return t(o&&o.toJSON())}async updateSymbolizer(e){var t;this.symbolizer=m.fromJSON(e.symbolizerJSON),e.histograms&&"rasterStretch"===(null==(t=this.symbolizer)?void 0:t.rendererJSON.type)&&(this.symbolizer.rendererJSON.histograms=e.histograms)}stretch(e){const s=this.symbolizer.simpleStretch(r.fromJSON(e.srcPixelBlock),e.stretchParams);return t(s&&s.toJSON())}estimateStatisticsHistograms(e){const o=s(r.fromJSON(e.srcPixelBlock));return t(o)}split(e){const s=o(r.fromJSON(e.srcPixelBlock),e.tileSize,e.maximumPyramidLevel);return s&&s.forEach(((e,t)=>{s.set(t,null==e?void 0:e.toJSON())})),t(s)}async mosaicAndTransform(e){const t=e.srcPixelBlocks.map((e=>e?new r(e):null)),s=i(t,e.srcMosaicSize);if(!e.coefs)return s&&s.toJSON();const o=c(s,e.destDimension,e.coefs,e.sampleSpacing,e.interpolation);return o&&o.toJSON()}}
