import{U as e,aZ as i,l as r,E as s,A as t,aw as o,bg as a,bf as p,a5 as l,e as n,i as h}from"./vendor.1ee57f36.js";import{l as m,p as c}from"./LayerView2D.5b971eca.js";import{Q as y}from"./GraphicsView2D.5ff45ce2.js";import"./Container.c19388ee.js";import"./mat4f32.65c405e6.js";import"./rbush.d43ba1fa.js";import"./json.9d10e1a3.js";import"./quickselect.53c6798b.js";import"./shapingUtils.66b0bc31.js";import"./BidiEngine.39026c84.js";import"./MD5.89293f8b.js";import"./Utils.88967ee0.js";import"./MaterialKey.464cac5a.js";import"./visualVariablesUtils.dc4022b6.js";import"./Rect.8611b8cd.js";import"./WGLMeshFactory.b3d89ebf.js";import"./index.4894e768.js";import"./cimAnalyzer.a961a551.js";import"./quantizationUtils.66d2dc60.js";import"./CIMSymbolHelper.2ecfa4b9.js";import"./VertexBuffer.19222be6.js";import"./CircularArray.1d7faf48.js";import"./TurboLine.6302d753.js";import"./GeometryUtils.4f6b8486.js";import"./FeatureContainer.e42ac772.js";import"./TileContainer.7d423330.js";import"./WGLContainer.df898e6a.js";import"./ShaderCompiler.00c23a07.js";import"./Program.76c009ec.js";import"./earcut.4e65dd4c.js";import"./ComputedAttributeStorage.637c93e6.js";import"./FeatureSetReader.3ec5c3db.js";import"./centroid.b04b550b.js";import"./graphicsUtils.0fbe3e39.js";let d=class extends(m(c)){constructor(){super(...arguments),this._graphicsViewMap={},this._popupTemplates=new Map,this.graphicsViews=[]}hitTest(r,s){if(this.suspended||!this.graphicsViews.length)return e();const t=this.graphicsViews.reverse().map((e=>e.hitTest(r,s)));return i(t).then((e=>e.filter(((e,i)=>(e&&(e.popupTemplate=this._popupTemplates.get(this.graphicsViews[i]),e.layer=this.layer,e.sourceLayer=this.layer),!!e)))[0]||null))}update(e){if(this.graphicsViews)for(const i of this.graphicsViews)i.processUpdate(e)}attach(){this.layer.featureCollections.forEach((e=>{const i=r.fromJSON(e.featureSet),p=new(s.ofType(t))(i.features);let l;if(this._graphicsViewMap[i.geometryType])l=this._graphicsViewMap[i.geometryType],l.graphics.addMany(p);else{const r=e.layerDefinition.drawingInfo,s=e.popupInfo?o.fromJSON(e.popupInfo):null,t=a(r.renderer);l=new y({requestUpdateCallback:()=>this.requestUpdate(),view:this.view,graphics:p,renderer:t}),this._graphicsViewMap[i.geometryType]=l,this._popupTemplates.set(l,s),"polygon"!==i.geometryType||this.layer.polygonSymbol?"polyline"!==i.geometryType||this.layer.lineSymbol?"point"!==i.geometryType||this.layer.pointSymbol||(this.layer.pointSymbol=t.symbol):this.layer.lineSymbol=t.symbol:this.layer.polygonSymbol=t.symbol,this.graphicsViews.push(l),this.container.addChild(l.container)}})),this.handles.add([p(this.layer,"polygonSymbol",(e=>{this._graphicsViewMap.polygon.renderer=new l({symbol:e})})),p(this.layer,"lineSymbol",(e=>{this._graphicsViewMap.polyline.renderer=new l({symbol:e})})),p(this.layer,"pointSymbol",(e=>{this._graphicsViewMap.point.renderer=new l({symbol:e})}))])}detach(){this.container.removeAllChildren();for(const e of this.graphicsViews)e.destroy(),e.view=null,e.renderer=null;this.graphicsViews.length=0}moveStart(){}moveEnd(){}viewChange(){for(const e of this.graphicsViews)e.viewChange()}};d=n([h("esri.views.2d.layers.GeoRSSLayerView2D")],d);var g=d;export default g;
