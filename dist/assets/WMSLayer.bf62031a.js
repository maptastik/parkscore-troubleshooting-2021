var e,t=Object.defineProperty,r=Object.prototype.hasOwnProperty,s=Object.getOwnPropertySymbols,a=Object.prototype.propertyIsEnumerable,i=(e,r,s)=>r in e?t(e,r,{enumerable:!0,configurable:!0,writable:!0,value:s}):e[r]=s,n=(e,t)=>{for(var n in t||(t={}))r.call(t,n)&&i(e,n,t[n]);if(s)for(var n of s(t))a.call(t,n)&&i(e,n,t[n]);return e};import{e as l,y as o,b as p,f as u,i as y,hU as d,W as h,z as m,B as c,E as f,H as g,L as b,M as w,P as v,N as x,R as E,S,T as I,aE as O,h_ as P,k as U,U as _,X as R,ai as j,A as q,aw as F,iR as L,dq as M,f5 as T,bw as W,s as H,o as N,au as C,hE as B,iS as A,aC as k}from"./vendor.1ee57f36.js";import{e as D}from"./scaleUtils.89be4879.js";import{y as V,w as J,l as G,s as Q}from"./ExportWMSImageParameters.146dbd70.js";let $=0,z=e=class extends d{constructor(e){super(e),this._sublayersHandles=new h,this.dimensions=null,this.fullExtents=null,this.featureInfoFormat=null,this.featureInfoUrl=null,this.legendUrl=null,this.legendEnabled=!0,this.maxScale=0,this.minScale=0,this.popupEnabled=!1,this.queryable=!1,this.spatialReferences=null}get description(){return this._get("description")}set description(e){this._set("description",e)}get fullExtent(){return this._get("fullExtent")}set fullExtent(e){this._set("fullExtent",e)}readExtent(e,t){return(e=t.extent)?m.fromJSON(e):null}get id(){const e=this._get("id");return null==e?$++:e}set id(e){this._set("id",e)}readLegendUrl(e,t){return t?t.legendUrl||t.legendURL:null}set layer(e){this._set("layer",e),this.sublayers&&this.sublayers.forEach((t=>t.layer=e))}get name(){return this._get("name")}set name(e){this._set("name",e)}set sublayers(e){const t=this._get("sublayers");t&&(t.forEach((e=>{e.layer=null})),this._sublayersHandles.removeAll(),this._sublayersHandles=null),e&&(e.forEach((e=>{e.parent=this,e.layer=this.layer})),this._sublayersHandles.add([e.on("after-add",(({item:e})=>{e.parent=this,e.layer=this.layer})),e.on("after-remove",(({item:e})=>{e.parent=null,e.layer=null}))])),this._set("sublayers",e)}castSublayers(t){return c(f.ofType(e),t)}get title(){return this._get("title")}set title(e){this._set("title",e)}get visible(){return this._get("visible")}set visible(e){this._setAndNotifyLayer("visible",e)}clone(){const t=new e;return this.hasOwnProperty("description")&&(t.description=this.description),this.hasOwnProperty("fullExtent")&&(t.fullExtent=this.fullExtent.clone()),this.hasOwnProperty("fullExtents")&&(t.fullExtents=this.fullExtents.map((e=>e.clone()))),this.hasOwnProperty("featureInfoFormat")&&(t.featureInfoFormat=this.featureInfoFormat),this.hasOwnProperty("featureInfoUrl")&&(t.featureInfoUrl=this.featureInfoUrl),this.hasOwnProperty("legendUrl")&&(t.legendUrl=this.legendUrl),this.hasOwnProperty("legendEnabled")&&(t.legendEnabled=this.legendEnabled),this.hasOwnProperty("layer")&&(t.layer=this.layer),this.hasOwnProperty("name")&&(t.name=this.name),this.hasOwnProperty("parent")&&(t.parent=this.parent),this.hasOwnProperty("queryable")&&(t.queryable=this.queryable),this.hasOwnProperty("sublayers")&&(t.sublayers=this.sublayers&&this.sublayers.map((e=>e.clone()))),this.hasOwnProperty("spatialReferences")&&(t.spatialReferences=this.spatialReferences.map((e=>e))),this.hasOwnProperty("visible")&&(t.visible=this.visible),this.hasOwnProperty("title")&&(t.title=this.title),t}_setAndNotifyLayer(e,t){const r=this.layer;this._get(e)!==t&&(this._set(e,t),r&&r.emit("wms-sublayer-update",{propertyName:e,id:this.id}))}};l([o()],z.prototype,"description",null),l([o({readOnly:!0})],z.prototype,"dimensions",void 0),l([o({value:null})],z.prototype,"fullExtent",null),l([p("fullExtent",["extent"])],z.prototype,"readExtent",null),l([o()],z.prototype,"fullExtents",void 0),l([o()],z.prototype,"featureInfoFormat",void 0),l([o()],z.prototype,"featureInfoUrl",void 0),l([o({type:Number,json:{write:{enabled:!1,overridePolicy:()=>({ignoreOrigin:!0,enabled:!0})}}})],z.prototype,"id",null),l([o({type:String,json:{origins:{"web-document":{read:{source:["legendUrl","legendURL"]},write:{target:"legendUrl",ignoreOrigin:!0}}},read:{source:"legendURL"},write:{ignoreOrigin:!0}}})],z.prototype,"legendUrl",void 0),l([p(["web-document"],"legendUrl")],z.prototype,"readLegendUrl",null),l([o({value:!0,type:Boolean,json:{read:{source:"showLegend"},write:{target:"showLegend"},origins:{"web-map":{read:!1,write:!1},"web-scene":{read:!1,write:!1}}}})],z.prototype,"legendEnabled",void 0),l([o({value:null})],z.prototype,"layer",null),l([o()],z.prototype,"maxScale",void 0),l([o()],z.prototype,"minScale",void 0),l([o({type:String,value:null,json:{read:{source:"name"},write:{ignoreOrigin:!0}}})],z.prototype,"name",null),l([o()],z.prototype,"parent",void 0),l([o({type:Boolean,json:{read:{source:"showPopup"},write:{ignoreOrigin:!0,target:"showPopup"}}})],z.prototype,"popupEnabled",void 0),l([o({type:Boolean,json:{write:{ignoreOrigin:!0}}})],z.prototype,"queryable",void 0),l([o()],z.prototype,"sublayers",null),l([u("sublayers")],z.prototype,"castSublayers",null),l([o({type:[Number],json:{read:{source:"spatialReferences"}}})],z.prototype,"spatialReferences",void 0),l([o({type:String,value:null,json:{write:{ignoreOrigin:!0}}})],z.prototype,"title",null),l([o({type:Boolean,value:!0,json:{read:{source:"defaultVisibility"}}})],z.prototype,"visible",null),z=e=l([y("esri.layers.support.WMSSublayer")],z);var X=z;const K=new g({bmp:"image/bmp",gif:"image/gif",jpg:"image/jpeg",png:"image/png",svg:"image/svg+xml"},{ignoreUnknown:!1});let Y=class extends(b(w(v(x(E(S(I(O)))))))){constructor(...e){super(...e),this._sublayersHandles=new h,this.allSublayers=new P({root:this,rootCollectionNames:["sublayers"],getChildrenFunction:e=>e.sublayers}),this.customParameters=null,this.customLayerParameters=null,this.copyright=null,this.description=null,this.dimensions=null,this.fullExtent=null,this.fullExtents=null,this.featureInfoFormat=null,this.featureInfoUrl=null,this.imageFormat=null,this.imageMaxHeight=2048,this.imageMaxWidth=2048,this.imageTransparency=!0,this.legendEnabled=!0,this.mapUrl=null,this.isReference=null,this.operationalLayerType="WMS",this.spatialReference=null,this.spatialReferences=null,this.sublayers=null,this.type="wms",this.url=null,this.version=null,this.watch("sublayers",((e,t)=>{t&&(t.forEach((e=>{e.layer=null})),this._sublayersHandles.removeAll(),this._sublayersHandles=null),e&&(e.forEach((e=>{e.parent=this,e.layer=this})),this._sublayersHandles||(this._sublayersHandles=new h),this._sublayersHandles.add([e.on("after-add",(({item:e})=>{e.parent=this,e.layer=this})),e.on("after-remove",(({item:e})=>{e.parent=null,e.layer=null}))]))}),!0)}normalizeCtorArgs(e,t){return"string"==typeof e?n({url:e},t):e}destroy(){var e;null==(e=this._exportWMSImageParameters)||e.destroy()}load(e){const t=U(e)?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["WMS"]},e).then((()=>this._fetchService(t)),(()=>this._fetchService(t)))),_(this)}readFullExtentFromItemOrMap(e,t){const r=t.extent;return new m({xmin:r[0][0],ymin:r[0][1],xmax:r[1][0],ymax:r[1][1]})}writeFullExtent(e,t){t.extent=[[e.xmin,e.ymin],[e.xmax,e.ymax]]}readImageFormat(e,t){const r=t.supportedImageFormatTypes;return r&&r.indexOf("image/png")>-1?"image/png":r&&r[0]}readSpatialReferenceFromItemOrDocument(e,t){return new R(t.spatialReferences[0])}writeSpatialReferences(e,t){const r=this.spatialReference&&this.spatialReference.wkid;e&&r?(t.spatialReferences=e.filter((e=>e!==r)),t.spatialReferences.unshift(r)):t.spatialReferences=e}readSublayersFromItemOrMap(e,t,r){return Z(t.layers,r,t.visibleLayers)}readSublayers(e,t,r){return Z(t.layers,r)}writeSublayers(e,t,r,s){t.layers=[];const a=new Map,i=e.flatten((({sublayers:e})=>e&&e.toArray())).toArray();i.forEach((e=>{"number"==typeof e.parent.id&&(a.has(e.parent.id)?a.get(e.parent.id).push(e.id):a.set(e.parent.id,[e.id]))})),i.forEach((e=>{const r=n({sublayer:e},s),i=e.write({parentLayerId:"number"==typeof e.parent.id?e.parent.id:-1},r);if(a.has(e.id)&&(i.sublayerIds=a.get(e.id)),!e.sublayers&&e.name){const s=e.write({},r);delete s.id,t.layers.push(s)}})),t.visibleLayers=i.filter((e=>e.visible&&!e.sublayers)).map((e=>e.name))}createExportImageParameters(e,t,r,s){var a;const i=s&&s.pixelRatio||1,n=D({extent:e,width:t})*i;return null==(a=this._exportWMSImageParameters)||a.destroy(),this._exportWMSImageParameters=new V({layer:this,extent:e,scale:n}),this._exportWMSImageParameters.toJSON()}async fetchImage(e,t,r,s){var a,i;const l=this.mapUrl,o=this.createExportImageParameters(e,t,r,s);if(!o.layers){const e=document.createElement("canvas");return e.width=t,e.height=r,e}const p=null==s||null==(a=s.timeExtent)?void 0:a.start,u=null==s||null==(i=s.timeExtent)?void 0:i.end,y=p&&u?p.getTime()===u.getTime()?J(p):`${J(p)}/${J(u)}`:void 0,d={responseType:"image",query:this._mixCustomParameters(n(n({width:t,height:r},o),{time:y})),signal:null==s?void 0:s.signal};return null!=s&&s.timestamp&&(d.query=n({_ts:s.timestamp},d.query)),j(l,d).then((e=>e.data))}fetchFeatureInfo(e,t,r,s,a){const i=G(this._exportWMSImageParameters.visibleSublayers);if(!this.featureInfoUrl||!i)return null;const l="1.3.0"===this.version?{I:s,J:a}:{x:s,y:a},o=n({query_layers:i,request:"GetFeatureInfo",info_format:this.featureInfoFormat,feature_count:25,width:t,height:r},l);let p=n(n({},this.createExportImageParameters(e,t,r)),o);return p=this._mixCustomParameters(p),j(this.featureInfoUrl,{query:p,responseType:"text"}).then((e=>{let t=this.featureInfoUrl;t+=-1===t.indexOf("?")?"?":"";for(const s in p)t+="?"===t.substring(t.length-1,t.length)?"":"&",t+=s+"="+p[s];const r=document.createElement("iframe");return r.src=t,r.frameBorder="0",r.marginHeight="0",r.marginWidth="0",r.innerHTML=e.data,r.style.width="100%",new q({sourceLayer:this,popupTemplate:new F({title:this.title,content:r})})}))}findSublayerById(e){return this.allSublayers.find((t=>t.id===e))}findSublayerByName(e){return this.allSublayers.find((t=>t.name===e))}supportsSpatialReference(e){return L(this.url)||this.spatialReferences.some((t=>{const r=900913===t?R.WebMercator:new R({wkid:t});return M(r,e)}))}async _fetchService(e){if(!this.resourceInfo){this.parsedUrl.query&&this.parsedUrl.query.service&&(this.parsedUrl.query.SERVICE=this.parsedUrl.query.service,delete this.parsedUrl.query.service),this.parsedUrl.query&&this.parsedUrl.query.request&&(this.parsedUrl.query.REQUEST=this.parsedUrl.query.request,delete this.parsedUrl.query.request);const t=await j(this.parsedUrl.path,{query:n(n({SERVICE:"WMS",REQUEST:"GetCapabilities"},this.parsedUrl.query),this.customParameters),responseType:"xml",signal:e});this.resourceInfo=Q(t.data)}if(this.parsedUrl){const e=new T(this.parsedUrl.path);"https"!==e.scheme||e.port&&"443"!==e.port||-1!==W.request.httpsDomains.indexOf(e.host)||W.request.httpsDomains.push(e.host)}this.read(this.resourceInfo,{origin:"service"})}_mixCustomParameters(e){if(!this.customLayerParameters&&!this.customParameters)return e;const t=n(n({},this.customParameters),this.customLayerParameters);for(const r in t)e[r.toLowerCase()]=t[r];return e}};function Z(e,t,r){const s=new Map;e.every((e=>null==e.id))&&(e=H(e)).forEach(((e,t)=>e.id=t));for(const i of e){const e=new X;e.read(i,t),-1===(null==r?void 0:r.indexOf(e.name))&&(e.visible=!1),s.set(e.id,e)}const a=[];for(const i of e){const e=s.get(i.id);if(null!=i.parentLayerId&&i.parentLayerId>=0){const t=s.get(i.parentLayerId);t.sublayers||(t.sublayers=new f),t.sublayers.unshift(e)}else a.unshift(e)}return a}l([o({readOnly:!0})],Y.prototype,"allSublayers",void 0),l([o({json:{type:Object,write:!0}})],Y.prototype,"customParameters",void 0),l([o({json:{type:Object,write:!0}})],Y.prototype,"customLayerParameters",void 0),l([o({type:String,json:{write:!0}})],Y.prototype,"copyright",void 0),l([o()],Y.prototype,"description",void 0),l([o({readOnly:!0})],Y.prototype,"dimensions",void 0),l([o({json:{type:[[Number]],read:{source:"extent"},write:{target:"extent"},origins:{service:{read:{source:"extent"}}}}})],Y.prototype,"fullExtent",void 0),l([p(["web-document","portal-item"],"fullExtent",["extent"])],Y.prototype,"readFullExtentFromItemOrMap",null),l([N(["web-document","portal-item"],"fullExtent",{extent:{type:[[Number]]}})],Y.prototype,"writeFullExtent",null),l([o()],Y.prototype,"fullExtents",void 0),l([o({type:String,json:{write:{ignoreOrigin:!0}}})],Y.prototype,"featureInfoFormat",void 0),l([o({type:String,json:{write:{ignoreOrigin:!0}}})],Y.prototype,"featureInfoUrl",void 0),l([o({type:String,json:{origins:{"web-document":{default:"image/png",type:K.jsonValues,read:{reader:K.read,source:"format"},write:{writer:K.write,target:"format"}}}}})],Y.prototype,"imageFormat",void 0),l([p("imageFormat",["supportedImageFormatTypes"])],Y.prototype,"readImageFormat",null),l([o({type:Number,json:{read:{source:"maxHeight"},write:{target:"maxHeight"}}})],Y.prototype,"imageMaxHeight",void 0),l([o({type:Number,json:{read:{source:"maxWidth"},write:{target:"maxWidth"}}})],Y.prototype,"imageMaxWidth",void 0),l([o()],Y.prototype,"imageTransparency",void 0),l([o(C)],Y.prototype,"legendEnabled",void 0),l([o({type:["show","hide","hide-children"]})],Y.prototype,"listMode",void 0),l([o({type:String,json:{write:{ignoreOrigin:!0}}})],Y.prototype,"mapUrl",void 0),l([o({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],Y.prototype,"isReference",void 0),l([o({type:["WMS"]})],Y.prototype,"operationalLayerType",void 0),l([o({type:R,json:{origins:{service:{read:{source:"extent.spatialReference"}}},write:!1}})],Y.prototype,"spatialReference",void 0),l([p(["web-document","portal-item"],"spatialReference",["spatialReferences"])],Y.prototype,"readSpatialReferenceFromItemOrDocument",null),l([o({type:[B],json:{read:{source:"spatialReferences"},write:{ignoreOrigin:!0}}})],Y.prototype,"spatialReferences",void 0),l([N(["web-document","portal-item"],"spatialReferences")],Y.prototype,"writeSpatialReferences",null),l([o({type:f.ofType(X),json:{write:{target:"layers",overridePolicy(e,t,r){if(s=this.allSublayers,a=r,s.some((e=>{for(const t in e)if(A(e,t,null,a))return!0;return!1})))return{ignoreOrigin:!0};var s,a}}}})],Y.prototype,"sublayers",void 0),l([p(["web-document","portal-item"],"sublayers",["layers","visibleLayers"])],Y.prototype,"readSublayersFromItemOrMap",null),l([p("service","sublayers",["layers"])],Y.prototype,"readSublayers",null),l([N("sublayers",{layers:{type:[X]},visibleLayers:{type:[String]}})],Y.prototype,"writeSublayers",null),l([o({json:{read:!1},readOnly:!0,value:"wms"})],Y.prototype,"type",void 0),l([o(k)],Y.prototype,"url",void 0),l([o({type:String,json:{write:{ignoreOrigin:!0}}})],Y.prototype,"version",void 0),Y=l([y("esri.layers.WMSLayer")],Y);var ee=Y;export default ee;
