var e=Object.defineProperty,t=Object.prototype.hasOwnProperty,a=Object.getOwnPropertySymbols,r=Object.prototype.propertyIsEnumerable,s=(t,a,r)=>a in t?e(t,a,{enumerable:!0,configurable:!0,writable:!0,value:r}):t[a]=r;import{c0 as d,O as i,m as l,E as n,eI as o,s as u,k as p,eJ as h,A as c}from"./vendor.1ee57f36.js";function m(e){var t,a;return!0===(null==e||null==(t=e.capabilities)||null==(a=t.operations)?void 0:a.supportsEditing)&&e&&(!("editingEnabled"in e)||e.editingEnabled)}async function y(e,p,h,c){let m,y;const w={edits:h,result:d(((e,t)=>{m=e,y=t}))};e.emit("apply-edits",w);try{const{results:d,edits:y}=await async function(e,d,u,p){if(await e.load(),!(h=d)||null==h.applyEdits)return i(new l(`${e.type}-layer:no-editing-support`,"Layer source does not support applyEdits capability",{layer:e}));var h;if(!e.editingEnabled)throw new l(`${e.type}-layer:editing-disabled`,"Editing is disabled for layer",{layer:e});const c=await function(e,d,i){const u=d&&(d.addFeatures||d.updateFeatures||d.deleteFeatures),p=d&&(d.addAttachments||d.updateAttachments||d.deleteAttachments);if(!d||!u&&!p)throw new l(`${e.type}-layer:missing-parameters`,"'addFeatures', 'updateFeatures', 'deleteFeatures', 'addAttachments', 'updateAttachments' or 'deleteAttachments' parameter is required");if(!e.capabilities.data.isVersioned&&i&&i.gdbVersion)throw new l(`${e.type}-layer:invalid-parameter`,"'gdbVersion' is applicable only if the layer supports versioned data. See: 'capabilities.data.isVersioned'");if(!e.capabilities.editing.supportsRollbackOnFailure&&i&&i.rollbackOnFailureEnabled)throw new l(`${e.type}-layer:invalid-parameter`,"This layer does not support 'rollbackOnFailureEnabled' parameter. See: 'capabilities.editing.supportsRollbackOnFailure'");if(!e.capabilities.editing.supportsGlobalId&&i&&i.globalIdUsed)throw new l(`${e.type}-layer:invalid-parameter`,"This layer does not support 'globalIdUsed' parameter. See: 'capabilities.editing.supportsGlobalId'");if(!e.capabilities.editing.supportsGlobalId&&p)throw new l(`${e.type}-layer:invalid-parameter`,"'addAttachments', 'updateAttachments' and 'deleteAttachments' are applicable only if the layer supports global ids. See: 'capabilities.editing.supportsGlobalId'");if((!i||!i.globalIdUsed)&&p)throw new l(`${e.type}-layer:invalid-parameter`,"When 'addAttachments', 'updateAttachments' or 'deleteAttachments' is specified, globalIdUsed should be set to true");const h=((e,d)=>{for(var i in d||(d={}))t.call(d,i)&&s(e,i,d[i]);if(a)for(var i of a(d))r.call(d,i)&&s(e,i,d[i]);return e})({},d);if(h.addFeatures=d&&n.isCollection(d.addFeatures)?d.addFeatures.toArray():h.addFeatures||[],h.updateFeatures=d&&n.isCollection(d.updateFeatures)?d.updateFeatures.toArray():h.updateFeatures||[],h.deleteFeatures=d&&n.isCollection(d.deleteFeatures)?d.deleteFeatures.toArray():h.deleteFeatures||[],h.addFeatures.length&&!e.capabilities.operations.supportsAdd)throw new l(`${e.type}-layer:unsupported-operation`,"Layer does not support adding features.");if(h.updateFeatures.length&&!e.capabilities.operations.supportsUpdate)throw new l(`${e.type}-layer:unsupported-operation`,"Layer does not support updating features.");if(h.deleteFeatures.length&&!e.capabilities.operations.supportsDelete)throw new l(`${e.type}-layer:unsupported-operation`,"Layer does not support deleting features.");h.addAttachments=h.addAttachments||[],h.updateAttachments=h.updateAttachments||[],h.deleteAttachments=h.deleteAttachments||[],h.addFeatures=h.addFeatures.map(f),h.updateFeatures=h.updateFeatures.map(f);const c=i&&i.globalIdUsed;return h.addFeatures.forEach((t=>b(t,e,c))),h.updateFeatures.forEach((t=>b(t,e,c))),h.deleteFeatures.forEach((t=>b(t,e,c))),h.addAttachments.forEach((t=>g(t,e))),h.updateAttachments.forEach((t=>g(t,e))),async function(e){const t=e.addFeatures,a=e.updateFeatures,r=t.concat(a).map((e=>e.geometry)),s=await o(r),d=t.length,i=a.length;return s.slice(0,d).forEach(((t,a)=>{e.addFeatures[a].geometry=t})),s.slice(d,d+i).forEach(((t,a)=>{e.updateFeatures[a].geometry=t})),e}(h)}(e,u,p);return c.addFeatures.length||c.updateFeatures.length||c.deleteFeatures.length||c.addAttachments.length||c.updateAttachments.length||c.deleteAttachments.length?{edits:c,results:await d.applyEdits(c,p)}:{edits:c,results:{addFeatureResults:[],updateFeatureResults:[],deleteFeatureResults:[],addAttachmentResults:[],updateAttachmentResults:[],deleteAttachmentResults:[]}}}(e,p,h,c),w=e=>e.filter((e=>!e.error)).map(u),F={edits:y,addedFeatures:w(d.addFeatureResults),updatedFeatures:w(d.updateFeatureResults),deletedFeatures:w(d.deleteFeatureResults),addedAttachments:w(d.addAttachmentResults),updatedAttachments:w(d.updateAttachmentResults),deletedAttachments:w(d.deleteAttachmentResults)};return(F.addedFeatures.length||F.updatedFeatures.length||F.deletedFeatures.length||F.addedAttachments.length||F.updatedAttachments.length||F.deletedAttachments.length)&&e.emit("edits",F),m(F),d}catch(F){throw y(F),F}}function b(e,t,a){if(a){if("attributes"in e&&!e.attributes[t.globalIdField])throw new l(`${t.type}-layer:invalid-parameter`,"Feature should have 'globalId' when 'globalIdUsed' is true");if(!("attributes"in e)&&!e.globalId)throw new l(`${t.type}-layer:invalid-parameter`,"'globalId' of the feature should be passed when 'globalIdUsed' is true")}if("geometry"in e&&p(e.geometry)){if(e.geometry.hasZ&&!1===t.capabilities.data.supportsZ)throw new l(`${t.type}-layer:z-unsupported`,"Layer does not support z values while feature has z values.");if(e.geometry.hasM&&!1===t.capabilities.data.supportsM)throw new l(`${t.type}-layer:m-unsupported`,"Layer does not support m values while feature has m values.")}}function g(e,t){const{feature:a,attachment:r}=e;if(!a||"attributes"in a&&!a.attributes[t.globalIdField])throw new l(`${t.type}-layer:invalid-parameter`,"Attachment should have reference to a feature with 'globalId'");if(!("attributes"in a)&&!a.globalId)throw new l(`${t.type}-layer:invalid-parameter`,"Attachment should have reference to 'globalId' of the parent feature");if(!r.globalId)throw new l(`${t.type}-layer:invalid-parameter`,"Attachment should have 'globalId'");if(!r.data&&!r.uploadId)throw new l(`${t.type}-layer:invalid-parameter`,"Attachment should have 'data' or 'uploadId'");if(!(r.data instanceof File&&r.data.name||r.name))throw new l(`${t.type}-layer:invalid-parameter`,"'name' is required when attachment is specified as Base64 encoded string using 'data'");if(!t.capabilities.editing.supportsUploadWithItemId&&r.uploadId)throw new l(`${t.type}-layer:invalid-parameter`,"This layer does not support 'uploadId' parameter. See: 'capabilities.editing.supportsUploadWithItemId'");if("string"==typeof r.data){const e=h(r.data);if(e&&!e.isBase64)throw new l(`${t.type}-layer:invalid-parameter`,"Attachment 'data' should be a Blob, File or Base64 encoded string")}}function f(e){const t=new c;return e.attributes||(e.attributes={}),t.geometry=e.geometry,t.attributes=e.attributes,t}export{y as applyEdits,m as isEditableLayer};
