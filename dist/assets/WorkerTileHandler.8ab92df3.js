import{hH as e,hI as t,hJ as r,hK as i,hL as n,hM as s,hN as a,e1 as l,eD as o,hO as c,hP as h,hQ as x,hR as u,b$ as f,U as d,aZ as y,c5 as g,k as p,c4 as _,gj as m}from"./vendor.1ee57f36.js";import{t as V,s as I,d as B,u as D,i as w,a as b,n as v,e as P}from"./TurboLine.6302d753.js";import{i as M}from"./Rect.8611b8cd.js";import{e as L,p as k}from"./earcut.4e65dd4c.js";import{r as T}from"./BidiEngine.39026c84.js";import"./GeometryUtils.4f6b8486.js";var A,E;function C(e){return 746===e||747===e||!(e<4352)&&(e>=12704&&e<=12735||e>=12544&&e<=12591||e>=65072&&e<=65103&&!(e>=65097&&e<=65103)||e>=63744&&e<=64255||e>=13056&&e<=13311||e>=11904&&e<=12031||e>=12736&&e<=12783||e>=12288&&e<=12351&&!(e>=12296&&e<=12305||e>=12308&&e<=12319||12336===e)||e>=13312&&e<=19903||e>=19968&&e<=40959||e>=12800&&e<=13055||e>=12592&&e<=12687||e>=43360&&e<=43391||e>=55216&&e<=55295||e>=4352&&e<=4607||e>=44032&&e<=55215||e>=12352&&e<=12447||e>=12272&&e<=12287||e>=12688&&e<=12703||e>=12032&&e<=12255||e>=12784&&e<=12799||e>=12448&&e<=12543&&12540!==e||e>=65280&&e<=65519&&!(65288===e||65289===e||65293===e||e>=65306&&e<=65310||65339===e||65341===e||65343===e||e>=65371&&e<=65503||65507===e||e>=65512&&e<=65519)||e>=65104&&e<=65135&&!(e>=65112&&e<=65118||e>=65123&&e<=65126)||e>=5120&&e<=5759||e>=6320&&e<=6399||e>=65040&&e<=65055||e>=19904&&e<=19967||e>=40960&&e<=42127||e>=42128&&e<=42191)}(E=A||(A={}))[E.INITIALIZED=0]="INITIALIZED",E[E.NO_DATA=1]="NO_DATA",E[E.READY=2]="READY",E[E.MODIFIED=3]="MODIFIED",E[E.INVALID=4]="INVALID";class N{constructor(e,t,r,i,n,s,a){this._glyphItems=e,this._maxWidth=t,this._lineHeight=r,this._letterSpacing=i,this._hAnchor=n,this._vAnchor=s,this._justify=a}getShaping(e,t,r){const i=this._letterSpacing,n=this._lineHeight,s=this._justify,a=this._maxWidth,l=[];let o=0,c=0,h=0,x=0,u=-1,f=0,d=-1;const y=e.length;for(let g=0;g<y;g++){const p=e.charCodeAt(g),_=r&&C(p);if(10===p){if(g===y-1)continue;if(u>=x){const e=l[u],t=e.x+e.glyphMosaicItem.metrics.advance;f=Math.max(t,f),s&&this._applyJustification(l,x,u),x=l.length}t?c-=n:c+=n,o=0,++h;continue}let m;for(const e of this._glyphItems)if(m=e[p],m)break;if(m){if(l.push({codePoint:p,x:o,y:c,vertical:_,glyphMosaicItem:m}),o+=m.metrics.advance+i,a>0&&o>a&&d>=0){const e=d+1,r=l[e].x;f=Math.max(r,f);for(let i=e;i<l.length;i++)t?l[i].y-=n:l[i].y+=n,l[i].x-=r;s&&this._applyJustification(l,x,d),t?c-=n:c+=n,o-=r,++h,x=e,d=-1}++u,32===p&&(d=l.length-1)}}if(u>=x){const e=l[u],t=e.x+e.glyphMosaicItem.metrics.advance;f=Math.max(f,t),s&&this._applyJustification(l,x,u)}if(l.length>0){const e=(s-this._hAnchor)*f;let r=(-this._vAnchor*(h+1)+.5)*n;t&&h&&(r+=h*n);for(const t of l)t.x+=e,t.y+=r}return l}static getTextBox(e,t){if(!e.length)return null;let r=1/0,i=1/0,n=0,s=0;for(const a of e){const e=a.glyphMosaicItem.metrics.advance,l=a.x,o=a.y-17,c=l+e,h=o+t;r=Math.min(r,l),n=Math.max(n,c),i=Math.min(i,o),s=Math.max(s,h)}return{x:r,y:i,width:n-r,height:s-i}}static getBox(e){if(!e.length)return null;let t=1/0,r=1/0,i=0,n=0;for(const s of e){const{height:e,left:a,top:l,width:o}=s.glyphMosaicItem.metrics,c=s.x,h=s.y-(e-Math.abs(l)),x=c+o+a,u=h+e;t=Math.min(t,c),i=Math.max(i,x),r=Math.min(r,h),n=Math.max(n,u)}return{x:t,y:r,width:i-t,height:n-r}}static addDecoration(e,t){const r=e.length;if(0===r)return;let i=e[0].x+e[0].glyphMosaicItem.metrics.left,n=e[0].y;for(let a=1;a<r;a++){const r=e[a];if(r.y!==n){const s=e[a-1].x+e[a-1].glyphMosaicItem.metrics.left+e[a-1].glyphMosaicItem.metrics.width;e.push({codePoint:0,x:i,y:n+t-3,vertical:!1,glyphMosaicItem:{sdf:!0,rect:new M(4,0,4,8),metrics:{width:s-i,height:8,left:0,top:0,advance:0},page:0,code:0}}),n=r.y,i=r.x+r.glyphMosaicItem.metrics.left}}const s=e[r-1].x+e[r-1].glyphMosaicItem.metrics.left+e[r-1].glyphMosaicItem.metrics.width;e.push({codePoint:0,x:i,y:n+t-3,vertical:!1,glyphMosaicItem:{sdf:!0,rect:new M(4,0,4,8),metrics:{width:s-i,height:8,left:0,top:0,advance:0},page:0,code:0}})}_applyJustification(e,t,r){const i=e[r],n=i.vertical?24:i.glyphMosaicItem.metrics.advance,s=(i.x+n)*this._justify;for(let a=t;a<=r;a++)e[a].x-=s}}class S{constructor(e,t,r=0,i=-1,n=.5){this.x=e,this.y=t,this.angle=r,this.segment=i,this.minzoom=n}}class z{constructor(e,t,r,n,s,a=.5,l=i){this.anchor=e,this.labelAngle=t,this.glyphAngle=r,this.page=n,this.alternateVerticalGlyph=s,this.minzoom=a,this.maxzoom=l}}class O{constructor(e,t,r,i,n,s,a,l,o,c,h,x){this.tl=e,this.tr=t,this.bl=r,this.br=i,this.mosaicRect=n,this.labelAngle=s,this.minAngle=a,this.maxAngle=l,this.anchor=o,this.minzoom=c,this.maxzoom=h,this.page=x}}class F{constructor(e){this.shapes=e}}class U{getIconPlacement(i,n,s){const a=new V(i.x,i.y),l=0===s.rotationAlignment,o=s.keepUpright;let c=s.rotate*e;l&&(c+=i.angle);const h=new F([]);return s.allowOverlap&&s.ignorePlacement||!t||(h.iconColliders=[]),this._addIconPlacement(h,a,n,s,c),l&&o&&this._addIconPlacement(h,a,n,s,c+r),h}_addIconPlacement(e,r,n,s,a){const l=n.pixelRatio,o=n.width/l,c=n.height/l,h=s.offset;let x=h[0],u=h[1];switch(s.anchor){case 0:x-=o/2,u-=c/2;break;case 1:u-=c/2;break;case 2:x-=o,u-=c/2;break;case 3:x-=o/2;break;case 4:x-=o/2,u-=c;break;case 5:break;case 7:u-=c;break;case 6:x-=o;break;case 8:x-=o,u-=c}const f=n.rect,d=2/l,y=x-d,g=u-d,p=y+f.width/l,_=g+f.height/l,m=new V(y,g),I=new V(p,_),B=new V(y,_),D=new V(p,g);if(0!==a){const e=Math.cos(a),t=Math.sin(a);m.rotate(e,t),I.rotate(e,t),B.rotate(e,t),D.rotate(e,t)}const w=new O(m,D,B,I,f,a,0,256,r,.5,i,0);if(e.shapes.push(w),(!s.allowOverlap||!s.ignorePlacement)&&t){const t=s.size,n=s.padding,l={xTile:r.x,yTile:r.y,dxPixels:x*t-n,dyPixels:u*t-n,hard:!s.optional,partIndex:0,width:o*t+2*n,height:c*t+2*n,angle:a,minLod:.5,maxLod:i};e.iconColliders.push(l)}}getTextPlacement(t,n,s,a){const l=new V(t.x,t.y),o=a.rotate*e,c=0===a.rotationAlignment,h=a.keepUpright,x=a.padding;let u=.5;const f=c?t.angle:0,d=t.segment>=0&&c,y=a.allowOverlap&&a.ignorePlacement?null:[],g=[],p=!d;let _=Number.POSITIVE_INFINITY,m=Number.NEGATIVE_INFINITY,I=_,B=m;const D=(d||c)&&h,w=a.size/24;let b=!1;for(const e of n)if(e.vertical){b=!0;break}let v,P=0,M=0;if(!d&&b){const e=N.getTextBox(n,24*a.lineHeight);switch(a.anchor){case 1:P=e.height/2,M=-e.width/2;break;case 2:P=-e.height/2,M=e.width/2;break;case 3:P=e.height/2,M=e.width/2;break;case 4:P=-e.height/2,M=-e.width/2;break;case 5:P=e.height;break;case 7:M=-e.width;break;case 6:M=e.width;break;case 8:P=-e.height}}P+=24*a.offset[0],M+=24*a.offset[1];for(const e of n){const n=e.glyphMosaicItem;if(!n||n.rect.isEmpty)continue;const L=n.rect,k=n.metrics,T=n.page;if(y&&p){if(void 0!==v&&v!==e.y){let e,r,n,s;b?(e=-B+P,r=_+M,n=B-I,s=m-_):(e=_+P,r=I+M,n=m-_,s=B-I);const l={xTile:t.x,yTile:t.y,dxPixels:e*w-x,dyPixels:r*w-x,hard:!a.optional,partIndex:1,width:n*w+2*x,height:s*w+2*x,angle:o,minLod:.5,maxLod:i};y.push(l),_=Number.POSITIVE_INFINITY,m=Number.NEGATIVE_INFINITY,I=_,B=m}v=e.y}const A=[];if(d){const r=.5*n.metrics.width,i=(e.x+k.left-4+r)*w*8;if(u=this._placeGlyph(t,u,i,s,t.segment,1,e.vertical,T,A),h&&(u=this._placeGlyph(t,u,i,s,t.segment,-1,e.vertical,T,A)),u>=2)break}else A.push(new z(l,f,f,T,!1)),c&&h&&A.push(new z(l,f+r,f+r,T,!1));const E=e.x+k.left,C=e.y-17-k.top,N=E+k.width,S=C+k.height;let F,U,R,G,j,q,K,H;if(!d&&b)if(e.vertical){const e=(E+N)/2-k.height/2,t=(C+S)/2+k.width/2;F=new V(-t-4+P,e-4+M),U=new V(F.x+L.width,F.y+L.height),R=new V(F.x,U.y),G=new V(U.x,F.y)}else F=new V(4-C+P,E-4+M),U=new V(F.x-L.height,F.y+L.width),R=new V(U.x,F.y),G=new V(F.x,U.y);else F=new V(E-4+P,C-4+M),U=new V(F.x+L.width,F.y+L.height),R=new V(F.x,U.y),G=new V(U.x,F.y);for(const r of A){let i,n,s,l;if(r.alternateVerticalGlyph){if(!j){const e=(C+S)/2+M;j=new V((E+N)/2+P-k.height/2-4,e+k.width/2+4),q=new V(j.x+L.height,j.y-L.width),K=new V(q.x,j.y),H=new V(j.x,q.y)}i=j,n=K,s=H,l=q}else i=F,n=R,s=G,l=U;const c=C,h=S,u=r.glyphAngle+o;if(0!==u){const e=Math.cos(u),t=Math.sin(u);i=i.clone(),n=n.clone(),s=s.clone(),l=l.clone(),i.rotate(e,t),l.rotate(e,t),n.rotate(e,t),s.rotate(e,t)}let f=0,v=256;if(d&&b?e.vertical?r.alternateVerticalGlyph?(f=32,v=96):(f=224,v=32):(f=224,v=96):(f=192,v=64),g.push(new O(i,s,n,l,L,r.labelAngle,f,v,r.anchor,r.minzoom,r.maxzoom,r.page)),y&&(!D||this._legible(r.labelAngle)))if(p)E<_&&(_=E),c<I&&(I=c),N>m&&(m=N),h>B&&(B=h);else if(r.minzoom<2){const e={xTile:t.x,yTile:t.y,dxPixels:(E+P)*w-x,dyPixels:(c+P)*w-x,hard:!a.optional,partIndex:1,width:(N-E)*w+2*x,height:(h-c)*w+2*x,angle:u,minLod:r.minzoom,maxLod:r.maxzoom};y.push(e)}}}if(u>=2)return null;if(y&&p){let e,r,n,s;b?(e=-B+P,r=_+M,n=B-I,s=m-_):(e=_+P,r=I+M,n=m-_,s=B-I);const l={xTile:t.x,yTile:t.y,dxPixels:e*w-x,dyPixels:r*w-x,hard:!a.optional,partIndex:1,width:n*w+2*x,height:s*w+2*x,angle:o,minLod:.5,maxLod:i};y.push(l)}const L=new F(g);return y&&y.length>0&&(L.textColliders=y),L}_legible(e){const t=a(e);return t<65||t>=193}_placeGlyph(e,t,a,l,o,c,h,x,u){let f=c;const d=f<0?n(e.angle+r,s):e.angle;let y=0;a<0&&(f*=-1,a*=-1,y=r),f>0&&++o;let g=new V(e.x,e.y),p=l[o],_=i;if(l.length<=o)return _;for(;;){const e=p.x-g.x,r=p.y-g.y,i=Math.sqrt(e*e+r*r),c=Math.max(a/i,t),m=e/i,V=r/i,I=n(Math.atan2(V,m)+y,s);if(u.push(new z(g,d,I,x,!1,c,_)),h&&u.push(new z(g,d,I,x,!0,c,_)),c<=t)return c;g=p.clone();do{if(o+=f,l.length<=o||o<0)return c;p=l[o]}while(g.isEqual(p));let B=p.x-g.x,D=p.y-g.y;const w=Math.sqrt(B*B+D*D);B*=i/w,D*=i/w,g.x-=B,g.y-=D,_=c}}}class R{constructor(e,t){this.layerExtent=4096,this._features=[],this.layer=e,this.zoom=t,this._filter=e.getFeatureFilter()}pushFeature(e){this._filter&&!this._filter.filter(e,this.zoom)||this._features.push(e)}hasFeatures(){return this._features.length>0}}class G extends R{constructor(e,t,r,i){super(e,t),this.type=4,this._circleVertexBuffer=r,this._circleIndexBuffer=i}get circleIndexStart(){return this._circleIndexStart}get circleIndexCount(){return this._circleIndexCount}processFeatures(e){const t=this._circleVertexBuffer,r=this._circleIndexBuffer;this._circleIndexStart=3*r.index,this._circleIndexCount=0;const i=this.layer,n=this.zoom;e&&e.setExtent(this.layerExtent);let s=1,a=[1,1,1,1],l=1,o=0,c=1,h=[1,1,1,1],x=1;for(const u of this._features){const f=u.getGeometry(e);if(f){i.hasDataDrivenRadius&&(s=i.getPaintValue("circle-radius",n,u)),i.hasDataDrivenColor&&(a=i.getPaintValue("circle-color",n,u)),i.hasDataDrivenOpacity&&(l=i.getPaintValue("circle-opacity",n,u)),i.hasDataDrivenStrokeWidth&&(c=i.getPaintValue("circle-stroke-width",n,u)),i.hasDataDrivenStrokeColor&&(h=i.getPaintValue("circle-stroke-color",n,u)),i.hasDataDrivenStrokeOpacity&&(x=i.getPaintValue("circle-stroke-opacity",n,u)),i.hasDataDrivenBlur&&(o=i.getPaintValue("circle-blur",n,u));for(const e of f)if(e)for(const i of e){const e=t.index;t.add(i.x,i.y,0,0,s,a,l,o,c,h,x),t.add(i.x,i.y,0,1,s,a,l,o,c,h,x),t.add(i.x,i.y,1,0,s,a,l,o,c,h,x),t.add(i.x,i.y,1,1,s,a,l,o,c,h,x),r.add(e+0,e+1,e+2),r.add(e+1,e+2,e+3),this._circleIndexCount+=6}}}}serialize(){let e=6;e+=this.layerUIDs.length,e+=this._circleVertexBuffer.array.length,e+=this._circleIndexBuffer.array.length;let t=0;const r=new Uint32Array(e),i=new Int32Array(r.buffer);r[t++]=this.type,r[t++]=this.layerUIDs.length;for(let n=0;n<this.layerUIDs.length;n++)r[t++]=this.layerUIDs[n];r[t++]=this._circleIndexStart,r[t++]=this._circleIndexCount,r[t++]=this._circleVertexBuffer.array.length;for(let n=0;n<this._circleVertexBuffer.array.length;n++)i[t++]=this._circleVertexBuffer.array[n];r[t++]=this._circleIndexBuffer.array.length;for(let n=0;n<this._circleIndexBuffer.array.length;n++)r[t++]=this._circleIndexBuffer.array[n];return r.buffer}}class j{constructor(e,t){this.values={};const r=t.keys,i=t.values;for(;e.next();)switch(e.tag()){case 1:this.id=e.getUInt64();break;case 2:{const t=e.getMessage(),n=this.values;for(;!t.empty();){const e=t.getUInt32(),s=t.getUInt32();n[r[e]]=i[s]}t.release();break}case 3:this.type=e.getUInt32();break;case 4:this._pbfGeometry=e.getMessage();break;default:e.skip()}}getGeometry(e){if(void 0!==this._geometry)return this._geometry;if(!this._pbfGeometry)return null;const t=this._pbfGeometry;let r,i;this._pbfGeometry=null,e?e.reset(this.type):r=[];let n,s=1,a=0,l=0,o=0;for(;!t.empty();){if(0===a){const e=t.getUInt32();s=7&e,a=e>>3}switch(a--,s){case 1:l+=t.getSInt32(),o+=t.getSInt32(),e?e.moveTo(l,o):(i&&r.push(i),i=[],i.push(new V(l,o)));break;case 2:l+=t.getSInt32(),o+=t.getSInt32(),e?e.lineTo(l,o):i.push(new V(l,o));break;case 7:e?e.close():i&&!i[0].equals(l,o)&&i.push(i[0].clone());break;default:throw t.release(),new Error("Invalid path operation")}}return e?n=e.result():(i&&r.push(i),n=r),t.release(),this._geometry=n,n}}const q=new I;class K extends R{constructor(e,t,r,i,n,s){if(super(e,t),this.type=1,e.hasDataDrivenFill!==r.isDataDriven())throw new Error("incompatible fill buffer");if(e.hasDataDrivenOutline!==n.isDataDriven())throw new Error("incompatible outline buffer");this._fillVertexBuffer=r,this._fillIndexBuffer=i,this._outlineVertexBuffer=n,this._outlineIndexBuffer=s}get fillIndexStart(){return this._fillIndexStart}get fillIndexCount(){return this._fillIndexCount}get outlineIndexStart(){return this._outlineIndexStart}get outlineIndexCount(){return this._outlineIndexCount}processFeatures(e){this._fillIndexStart=3*this._fillIndexBuffer.index,this._fillIndexCount=0,this._outlineIndexStart=3*this._outlineIndexBuffer.index,this._outlineIndexCount=0;const t=this.layer,r=this.zoom,i=t.hasDataDrivenFill,n=t.hasDataDrivenOutline;e&&e.setExtent(this.layerExtent);const s=t.getPaintValue("fill-pattern",r);let a=t.getPaintValue("fill-antialias",r)&&void 0===s,l=[1,1,1,1],o=[1,1,1,1],c=1;if(t.outlineUsesFillColor){if(a&&!t.hasDataDrivenOpacity){const e=t.getPaintValue("fill-opacity",r),i=t.getPaintValue("fill-opacity",r+1);e<1&&i<1&&(a=!1)}if(a&&!t.hasDataDrivenColor){const e=t.getPaintValue("fill-color",r),i=t.getPaintValue("fill-color",r+1);e[3]<1&&i[3]<1&&(a=!1)}}for(const h of this._features){let x,u;!s&&t.hasDataDrivenColor&&(l=t.getPaintValue("fill-color",r,h)),t.hasDataDrivenOpacity&&(c=t.getPaintValue("fill-opacity",r,h)),!s&&t.hasDataDrivenOutlineColor&&(o=t.getPaintValue("fill-outline-color",r,h)),i&&(x={color:l,opacity:c}),n&&(u={color:t.outlineUsesFillColor?l:o,opacity:c});const f=h.getGeometry(e),d=null==e?void 0:e.validateTessellation;this._processFeature(f,a,t.outlineUsesFillColor,x,u,d)}}serialize(){let e=12;e+=this.layerUIDs.length,e+=this._fillVertexBuffer.array.length,e+=this._fillIndexBuffer.array.length,e+=this._outlineVertexBuffer.array.length,e+=this._outlineIndexBuffer.array.length;let t=0;const r=new Uint32Array(e),i=new Int32Array(r.buffer);r[t++]=this.type,r[t++]=this.layerUIDs.length;for(let n=0;n<this.layerUIDs.length;n++)r[t++]=this.layerUIDs[n];r[t++]=this._fillIndexStart,r[t++]=this._fillIndexCount,r[t++]=this._outlineIndexStart,r[t++]=this._outlineIndexCount,r[t++]=this._fillVertexBuffer.isDataDriven()?1:0,r[t++]=this._outlineVertexBuffer.isDataDriven()?1:0,r[t++]=this._fillVertexBuffer.array.length;for(let n=0;n<this._fillVertexBuffer.array.length;n++)i[t++]=this._fillVertexBuffer.array[n];r[t++]=this._fillIndexBuffer.array.length;for(let n=0;n<this._fillIndexBuffer.array.length;n++)r[t++]=this._fillIndexBuffer.array[n];r[t++]=this._outlineVertexBuffer.array.length;for(let n=0;n<this._outlineVertexBuffer.array.length;n++)i[t++]=this._outlineVertexBuffer.array[n];r[t++]=this._outlineIndexBuffer.array.length;for(let n=0;n<this._outlineIndexBuffer.array.length;n++)r[t++]=this._outlineIndexBuffer.array[n];return r.buffer}_processFeature(e,t,r,i,n,s){if(!e)return;const a=e.length;if(t&&(!r||!n||n.color[3]*n.opacity==1))for(let o=0;o<a;o++)this._processOutline(e[o],n);let l;for(let o=0;o<a;o++){const t=K._area(e[o]);t>128?(void 0!==l&&this._processFill(e,l,i,s),l=[o]):t<-128&&void 0!==l&&l.push(o)}void 0!==l&&this._processFill(e,l,i,s)}_processOutline(e,t){const r=this._outlineVertexBuffer,i=this._outlineIndexBuffer,n=i.index;let s,a,l;const o=new V(0,0),c=new V(0,0),h=new V(0,0);let x=-1,u=-1,f=-1,d=-1,y=-1,g=!1,p=e.length;if(p<2)return;const _=e[0];let m=e[p-1];for(;p&&m.isEqual(_);)--p,m=e[p-1];if(!(p-0<2)){for(let n=0;n<p;++n){0===n?(s=e[p-1],a=e[0],l=e[1],o.assignSub(a,s),o.normalize(),o.rightPerpendicular()):(s=a,a=l,l=n!==p-1?e[n+1]:e[0],o.assign(c));const _=this._isClipEdge(s,a);-1===d&&(g=_),c.assignSub(l,a),c.normalize(),c.rightPerpendicular();const m=o.x*c.y-o.y*c.x;h.assignAdd(o,c),h.normalize();const V=-h.x*-o.x+-h.y*-o.y;let I=Math.abs(0!==V?1/V:1);I>8&&(I=8),m>=0?(f=r.add(a.x,a.y,o.x,o.y,0,1,t),-1===d&&(d=f),x>=0&&u>=0&&f>=0&&!_&&i.add(x,u,f),u=r.add(a.x,a.y,I*-h.x,I*-h.y,0,-1,t),-1===y&&(y=u),x>=0&&u>=0&&f>=0&&!_&&i.add(x,u,f),x=u,u=f,f=r.add(a.x,a.y,h.x,h.y,0,1,t),x>=0&&u>=0&&f>=0&&!_&&i.add(x,u,f),u=r.add(a.x,a.y,c.x,c.y,0,1,t),x>=0&&u>=0&&f>=0&&!_&&i.add(x,u,f)):(f=r.add(a.x,a.y,I*h.x,I*h.y,0,1,t),-1===d&&(d=f),x>=0&&u>=0&&f>=0&&!_&&i.add(x,u,f),u=r.add(a.x,a.y,-o.x,-o.y,0,-1,t),-1===y&&(y=u),x>=0&&u>=0&&f>=0&&!_&&i.add(x,u,f),x=u,u=f,f=r.add(a.x,a.y,-h.x,-h.y,0,-1,t),x>=0&&u>=0&&f>=0&&!_&&i.add(x,u,f),x=r.add(a.x,a.y,-c.x,-c.y,0,-1,t),x>=0&&u>=0&&f>=0&&!_&&i.add(x,u,f))}x>=0&&u>=0&&d>=0&&!g&&i.add(x,u,d),x>=0&&d>=0&&y>=0&&!g&&i.add(x,y,d),this._outlineIndexCount+=3*(i.index-n)}}_processFill(e,t,r,i){let n;t.length>1&&(n=[]);let s=0;for(const l of t)0!==s&&n.push(s),s+=e[l].length;const a=2*s,o=l.acquire();for(const l of t){const t=e[l],r=t.length;for(let e=0;e<r;++e)o.push(t[e].x,t[e].y)}const c=L(o,n,2);if(i&&k(o,n,2,c)>0){const i=[],n=[];if(function(e,t,r,i){let n,s;q.beginPolygon(e,t);for(const a of i){const e=r[a];if(!(e.length<3)){q.beginContour();for(let t=0;t<e.length;++t){n=e[t].x,s=e[t].y;const r=[n,s,0];q.addVertex(r,r)}q.endContour()}}q.endPolygon()}(i,n,e,t),n.length>0){const e=this._fillVertexBuffer.index;let t=0;for(;t<i.length;)this._fillVertexBuffer.add(i[t++],i[t++],r);let s=0;for(;s<n.length;)this._fillIndexBuffer.add(e+n[s+0],e+n[s+1],e+n[s+2]),s+=3;this._fillIndexCount+=n.length}}else{const e=c.length;if(e>0){const t=this._fillVertexBuffer.index;let i=0;for(;i<a;)this._fillVertexBuffer.add(o[i++],o[i++],r);let n=0;for(;n<e;)this._fillIndexBuffer.add(t+c[n++],t+c[n++],t+c[n++]);this._fillIndexCount+=e}}l.release(o)}_isClipEdge(e,t){return e.x===t.x?e.x<=-64||e.x>=4160:e.y===t.y&&(e.y<=-64||e.y>=4160)}static _area(e){let t=0;const r=e.length-1;for(let i=0;i<r;i++)t+=(e[i].x-e[i+1].x)*(e[i].y+e[i+1].y);return t+=(e[r].x-e[0].x)*(e[r].y+e[0].y),.5*t}}class H{constructor(e){this._array=[],e<=0&&console.error("strideInBytes must be positive!"),this._stride=e}get array(){return this._array}get index(){return 4*this._array.length/this._stride}get itemSize(){return this._stride}get sizeInBytes(){return 4*this._array.length}reset(){this.array.length=0}toBuffer(){return new Uint32Array(this._array).buffer}static i1616to32(e,t){return 65535&e|t<<16}static i8888to32(e,t,r,i){return 255&e|(255&t)<<8|(255&r)<<16|i<<24}static i8816to32(e,t,r){return 255&e|(255&t)<<8|r<<16}}class W extends H{constructor(){super(12)}add(e,t,r){const i=this.array;i.push(e),i.push(t),i.push(r)}}const Y=e=>t=>{t.entry0=e._lineVertexBuffer.index,e._lineVertexBuffer.add(t.currentVertex.x,t.currentVertex.y,t.prevNormal.x,t.prevNormal.y,0,-1,t.distance,e._ddValues),t.entry2=e._lineVertexBuffer.index,e._lineVertexBuffer.add(t.currentVertex.x,t.currentVertex.y,-t.prevNormal.x,-t.prevNormal.y,0,1,t.distance,e._ddValues),t.exit0=e._lineVertexBuffer.index,e._lineVertexBuffer.add(t.currentVertex.x,t.currentVertex.y,t.nextNormal.x,t.nextNormal.y,0,-1,t.distance,e._ddValues),t.exit2=e._lineVertexBuffer.index,e._lineVertexBuffer.add(t.currentVertex.x,t.currentVertex.y,-t.nextNormal.x,-t.nextNormal.y,0,1,t.distance,e._ddValues)},J=e=>t=>{e._lineIndexBuffer.add(t.leftExit0,t.rightEntry0,t.leftExit2),e._lineIndexBuffer.add(t.rightEntry0,t.rightEntry2,t.leftExit2)},Z=e=>t=>{const r=2===e._joinType?e._miterLimitCosine:e._roundLimitCosine,i=t.isCap&&0!==e._capType;let n,s=!1;if(t.cosine>.97?(t.exit0=t.entry0=e._lineVertexBuffer.index,e._lineVertexBuffer.add(t.currentVertex.x,t.currentVertex.y,t.bisector.x/t.cosine,t.bisector.y/t.cosine,0,-1,t.distance,e._ddValues),t.exit2=t.entry2=e._lineVertexBuffer.index,e._lineVertexBuffer.add(t.currentVertex.x,t.currentVertex.y,-t.bisector.x/t.cosine,-t.bisector.y/t.cosine,0,1,t.distance,e._ddValues)):t.cosine<1-.97?(t.entry0=e._lineVertexBuffer.index,e._lineVertexBuffer.add(t.currentVertex.x,t.currentVertex.y,t.prevNormal.x,t.prevNormal.y,0,-1,t.distance,e._ddValues),t.entry2=e._lineVertexBuffer.index,e._lineVertexBuffer.add(t.currentVertex.x,t.currentVertex.y,-t.prevNormal.x,-t.prevNormal.y,0,1,t.distance,e._ddValues),t.exit0=e._lineVertexBuffer.index,e._lineVertexBuffer.add(t.currentVertex.x,t.currentVertex.y,t.nextNormal.x,t.nextNormal.y,0,-1,t.distance,e._ddValues),t.exit2=e._lineVertexBuffer.index,e._lineVertexBuffer.add(t.currentVertex.x,t.currentVertex.y,-t.nextNormal.x,-t.nextNormal.y,0,1,t.distance,e._ddValues)):t.canSplit?(B(),t.sign>0?(t.splitInner?(t.exit0=e._lineVertexBuffer.index,e._lineVertexBuffer.add(t.currentVertex.x,t.currentVertex.y,t.leftInner.x,t.leftInner.y,0,-1,t.distance,e._ddValues),t.entry0=e._lineVertexBuffer.index,e._lineVertexBuffer.add(t.currentVertex.x,t.currentVertex.y,t.rightInner.x,t.rightInner.y,0,-1,t.distance,e._ddValues)):(t.exit0=t.entry0=e._lineVertexBuffer.index,e._lineVertexBuffer.add(t.currentVertex.x,t.currentVertex.y,t.bisector.x/t.cosine,t.bisector.y/t.cosine,0,-1,t.distance,e._ddValues)),t.cosine<r?(s=!t.isCap,t.entry2=e._lineVertexBuffer.index,e._lineVertexBuffer.add(t.currentVertex.x,t.currentVertex.y,-t.prevNormal.x,-t.prevNormal.y,0,1,t.distance,e._ddValues),t.exit2=e._lineVertexBuffer.index,e._lineVertexBuffer.add(t.currentVertex.x,t.currentVertex.y,-t.nextNormal.x,-t.nextNormal.y,0,1,t.distance,e._ddValues)):t.splitOuter?(s=s||t.gapOuter,t.entry2=e._lineVertexBuffer.index,e._lineVertexBuffer.add(t.currentVertex.x,t.currentVertex.y,-t.leftOuter.x,-t.leftOuter.y,0,1,t.distance,e._ddValues),t.exit2=e._lineVertexBuffer.index,e._lineVertexBuffer.add(t.currentVertex.x,t.currentVertex.y,-t.rightOuter.x,-t.rightOuter.y,0,1,t.distance,e._ddValues)):(t.entry2=t.exit2=e._lineVertexBuffer.index,e._lineVertexBuffer.add(t.currentVertex.x,t.currentVertex.y,-t.bisector.x/t.cosine,-t.bisector.y/t.cosine,0,1,t.distance,e._ddValues))):(t.splitInner?(t.exit2=e._lineVertexBuffer.index,e._lineVertexBuffer.add(t.currentVertex.x,t.currentVertex.y,-t.leftInner.x,-t.leftInner.y,0,1,t.distance,e._ddValues),t.entry2=e._lineVertexBuffer.index,e._lineVertexBuffer.add(t.currentVertex.x,t.currentVertex.y,-t.rightInner.x,-t.rightInner.y,0,1,t.distance,e._ddValues)):(t.exit2=t.entry2=e._lineVertexBuffer.index,e._lineVertexBuffer.add(t.currentVertex.x,t.currentVertex.y,-t.bisector.x/t.cosine,-t.bisector.y/t.cosine,0,1,t.distance,e._ddValues)),t.cosine<r?(s=!t.isCap,t.entry0=e._lineVertexBuffer.index,e._lineVertexBuffer.add(t.currentVertex.x,t.currentVertex.y,t.prevNormal.x,t.prevNormal.y,0,-1,t.distance,e._ddValues),t.exit0=e._lineVertexBuffer.index,e._lineVertexBuffer.add(t.currentVertex.x,t.currentVertex.y,t.nextNormal.x,t.nextNormal.y,0,-1,t.distance,e._ddValues)):t.splitOuter?(s=s||t.gapOuter,t.entry0=e._lineVertexBuffer.index,e._lineVertexBuffer.add(t.currentVertex.x,t.currentVertex.y,t.leftOuter.x,t.leftOuter.y,0,-1,t.distance,e._ddValues),t.exit0=e._lineVertexBuffer.index,e._lineVertexBuffer.add(t.currentVertex.x,t.currentVertex.y,t.rightOuter.x,t.rightOuter.y,0,-1,t.distance,e._ddValues)):(t.exit0=t.entry0=e._lineVertexBuffer.index,e._lineVertexBuffer.add(t.currentVertex.x,t.currentVertex.y,t.bisector.x/t.cosine,t.bisector.y/t.cosine,0,-1,t.distance,e._ddValues)))):t.sign>0?(t.exit0=t.entry0=e._lineVertexBuffer.index,e._lineVertexBuffer.add(t.currentVertex.x,t.currentVertex.y,t.bisector.x/t.cosine,t.bisector.y/t.cosine,0,-1,t.distance,e._ddValues),t.cosine<r?(s=!t.isCap,t.entry2=e._lineVertexBuffer.index,e._lineVertexBuffer.add(t.currentVertex.x,t.currentVertex.y,-t.prevNormal.x,-t.prevNormal.y,0,1,t.distance,e._ddValues),t.exit2=e._lineVertexBuffer.index,e._lineVertexBuffer.add(t.currentVertex.x,t.currentVertex.y,-t.nextNormal.x,-t.nextNormal.y,0,1,t.distance,e._ddValues)):(t.entry2=t.exit2=e._lineVertexBuffer.index,e._lineVertexBuffer.add(t.currentVertex.x,t.currentVertex.y,-t.bisector.x/t.cosine,-t.bisector.y/t.cosine,0,1,t.distance,e._ddValues))):(t.exit2=t.entry2=e._lineVertexBuffer.index,e._lineVertexBuffer.add(t.currentVertex.x,t.currentVertex.y,-t.bisector.x/t.cosine,-t.bisector.y/t.cosine,0,1,t.distance,e._ddValues),t.cosine<r?(s=!t.isCap,t.entry0=e._lineVertexBuffer.index,e._lineVertexBuffer.add(t.currentVertex.x,t.currentVertex.y,t.prevNormal.x,t.prevNormal.y,0,-1,t.distance,e._ddValues),t.exit0=e._lineVertexBuffer.index,e._lineVertexBuffer.add(t.currentVertex.x,t.currentVertex.y,t.nextNormal.x,t.nextNormal.y,0,-1,t.distance,e._ddValues)):(t.exit0=t.entry0=e._lineVertexBuffer.index,e._lineVertexBuffer.add(t.currentVertex.x,t.currentVertex.y,t.bisector.x/t.cosine,t.bisector.y/t.cosine,0,-1,t.distance,e._ddValues))),t.canSplit&&(t.splitInner||t.splitOuter)||s||i?(n=t.entry1=t.exit1=e._lineVertexBuffer.index,e._lineVertexBuffer.add(t.currentVertex.x,t.currentVertex.y,0,0,0,0,t.distance,e._ddValues)):n=t.entry1=t.exit1=null,s&&1!==e._joinType)e._lineIndexBuffer.add(n,t.sign>0?t.exit2:t.entry0,t.sign>0?t.entry2:t.exit0);else if(i&&1===e._capType||s&&1===e._joinType){let r,i,s,a,l,o;if(t.isCap){const e=Math.PI;l=Math.ceil(e/.8),o=e/l,t.isFirstVertex?(r=t.prevNormal.x,i=t.prevNormal.y,s=t.entry0,a=t.entry2):t.isLastVertex&&(r=-t.nextNormal.x,i=-t.nextNormal.y,s=t.exit2,a=t.exit0)}else{const e=2*Math.acos(t.cosine);l=Math.ceil(e/.8),o=e/l,r=t.sign>0?-t.prevNormal.x:t.nextNormal.x,i=t.sign>0?-t.prevNormal.y:t.nextNormal.y,s=t.sign>0?t.entry2:t.exit0,a=t.sign>0?t.exit2:t.entry0}const c=Math.cos(o),h=Math.sin(o),x=h*r+c*i;let u,f;r=c*r-h*i,i=x;for(let d=0;d<l;++d){if(u=f,d<l-1)if(t.isCap){const n=t.isFirstVertex?-1:1;f=e._lineVertexBuffer.index,e._lineVertexBuffer.add(t.currentVertex.x,t.currentVertex.y,r,i,n,0,t.distance,e._ddValues)}else f=e._lineVertexBuffer.index,e._lineVertexBuffer.add(t.currentVertex.x,t.currentVertex.y,r,i,0,t.sign,t.distance,e._ddValues);e._lineIndexBuffer.add(0===d?s:u,n,d===l-1?a:f);const o=h*r+c*i;r=c*r-h*i,i=o}}else if(i&&2===e._capType){const r=t.isFirstVertex?1:-1;let i,s;e._hasPattern?(i=e._lineVertexBuffer.index,e._lineVertexBuffer.add(t.currentVertex.x,t.currentVertex.y,t.prevNormal.x-r*t.inbound.x,t.prevNormal.y-r*t.inbound.y,-r,-1,t.distance,e._ddValues),s=e._lineVertexBuffer.index,e._lineVertexBuffer.add(t.currentVertex.x,t.currentVertex.y,-t.prevNormal.x-r*t.inbound.x,-t.prevNormal.y-r*t.inbound.y,-r,1,t.distance,e._ddValues)):(i=e._lineVertexBuffer.index,e._lineVertexBuffer.add(t.currentVertex.x,t.currentVertex.y,t.prevNormal.x-r*t.inbound.x,t.prevNormal.y-r*t.inbound.y,0,-1,t.distance,e._ddValues),s=e._lineVertexBuffer.index,e._lineVertexBuffer.add(t.currentVertex.x,t.currentVertex.y,-t.prevNormal.x-r*t.inbound.x,-t.prevNormal.y-r*t.inbound.y,0,1,t.distance,e._ddValues)),r>0?(e._lineIndexBuffer.add(n,t.entry2,s),e._lineIndexBuffer.add(n,s,i),e._lineIndexBuffer.add(n,i,t.entry0)):(e._lineIndexBuffer.add(n,s,t.exit2),e._lineIndexBuffer.add(n,i,s),e._lineIndexBuffer.add(n,t.exit0,i))}},Q=e=>t=>{e._lineIndexBuffer.add(t.leftExit0,t.rightEntry0,null!=t.leftExit1?t.leftExit1:t.leftExit2),e._lineIndexBuffer.add(t.rightEntry0,null!=t.rightEntry1?t.rightEntry1:t.rightEntry2,null!=t.leftExit1?t.leftExit1:t.leftExit2),null!=t.leftExit1&&null!=t.rightEntry1?(e._lineIndexBuffer.add(t.leftExit1,t.rightEntry1,t.leftExit2),e._lineIndexBuffer.add(t.rightEntry1,t.rightEntry2,t.leftExit2)):null!=t.leftExit1?e._lineIndexBuffer.add(t.leftExit1,t.rightEntry2,t.leftExit2):null!=t.rightEntry1&&e._lineIndexBuffer.add(t.rightEntry1,t.rightEntry2,t.leftExit2)};class $ extends R{constructor(e,t,r,i){if(super(e,t),this.type=2,this._tessellationOptions={},this.tessellationProperties={_lineVertexBuffer:null,_lineIndexBuffer:null,_hasPattern:null,_ddValues:null,_capType:null,_joinType:null,_miterLimitCosine:null,_roundLimitCosine:null},e.hasDataDrivenLine!==r.isDataDriven())throw new Error("incompatible line buffer");this.tessellationProperties._lineVertexBuffer=r,this.tessellationProperties._lineIndexBuffer=i,this.tessellationProperties._hasPattern=e.getPaintValue("line-pattern",this.zoom)||e.getPaintValue("line-dasharray",this.zoom).length>0,this._isThinLine=e.isThinLine,this._isThinLine?this._tessellationCallbacks={vertex:Y(this.tessellationProperties),bridge:J(this.tessellationProperties)}:this._tessellationCallbacks={vertex:Z(this.tessellationProperties),bridge:Q(this.tessellationProperties)}}get lineIndexStart(){return this._lineIndexStart}get lineIndexCount(){return this._lineIndexCount}processFeatures(e){this._lineIndexStart=3*this.tessellationProperties._lineIndexBuffer.index,this._lineIndexCount=0;const t=this.layer,r=this.zoom,i=t.hasDataDrivenLine;e&&e.setExtent(this.layerExtent);let n=[1,1,1,1],s=1,a=1;for(const l of this._features){let o;if(!this.tessellationProperties._hasPattern&&t.hasDataDrivenColor&&(n=t.getPaintValue("line-color",r,l)),t.hasDataDrivenOpacity&&(s=t.getPaintValue("line-opacity",r,l)),t.hasDataDrivenWidth&&(a=t.getPaintValue("line-width",r,l)),i&&(o={color:n,opacity:s,size:Math.max(Math.min(a,256),0)},o.size<=0||o.opacity<=0||o.color[3]<=0))continue;this.tessellationProperties._capType=t.getLayoutValue("line-cap",r,l),this.tessellationProperties._joinType=t.getLayoutValue("line-join",r,l),this.tessellationProperties._miterLimitCosine=D(t.getLayoutValue("line-miter-limit",r,l)),this.tessellationProperties._roundLimitCosine=D(t.getLayoutValue("line-round-limit",r,l));const c=l.getGeometry(e);this._processFeature(c,o)}w()}serialize(){let e=7;e+=this.layerUIDs.length,e+=this.tessellationProperties._lineVertexBuffer.array.length,e+=this.tessellationProperties._lineIndexBuffer.array.length;let t=0;const r=new Uint32Array(e),i=new Int32Array(r.buffer);r[t++]=this.type,r[t++]=this.layerUIDs.length;for(let n=0;n<this.layerUIDs.length;n++)r[t++]=this.layerUIDs[n];r[t++]=this._lineIndexStart,r[t++]=this._lineIndexCount,r[t++]=this.tessellationProperties._lineVertexBuffer.isDataDriven()?1:0,r[t++]=this.tessellationProperties._lineVertexBuffer.array.length;for(let n=0;n<this.tessellationProperties._lineVertexBuffer.array.length;n++)i[t++]=this.tessellationProperties._lineVertexBuffer.array[n];r[t++]=this.tessellationProperties._lineIndexBuffer.array.length;for(let n=0;n<this.tessellationProperties._lineIndexBuffer.array.length;n++)r[t++]=this.tessellationProperties._lineIndexBuffer.array[n];return r.buffer}_processFeature(e,t){if(!e)return;const r=e.length;for(let i=0;i<r;i++)this._processGeometry(e[i],t)}_processGeometry(e,t){if(e.length<2)return;let r,i,n=e[0],s=1;for(;s<e.length;)r=e[s].x-n.x,i=e[s].y-n.y,r*r+i*i<1e-6?e.splice(s,1):(n=e[s],++s);if(e.length<2)return;const a=3*this.tessellationProperties._lineIndexBuffer.index;this._tessellationOptions.trackDistance=this.tessellationProperties._hasPattern,this._tessellationOptions.initialDistance=0,this._tessellationOptions.thin=this._isThinLine,this._tessellationOptions.wrapDistance=65535,this._tessellationOptions.outerBisectorAutoSplitThreshold=.2631578947368421,this._tessellationOptions.enableOuterBisectorSplit=this.tessellationProperties._hasPattern,this._tessellationOptions.innerBisectorAutoSplitThreshold=.2631578947368421,this._tessellationOptions.enableInnerBisectorSplit=this.tessellationProperties._hasPattern,this.tessellationProperties._ddValues=t,b(e,this._tessellationOptions,this._tessellationCallbacks),this._lineIndexCount+=3*this.tessellationProperties._lineIndexBuffer.index-a}}class X{constructor(e){for(this.extent=4096,this.keys=[],this.values=[],this._pbfLayer=e.clone();e.next();)switch(e.tag()){case 1:this.name=e.getString();break;case 3:this.keys.push(e.getString());break;case 4:this.values.push(e.processMessage(X._parseValue));break;case 5:this.extent=e.getUInt32();break;default:e.skip()}}getData(){return this._pbfLayer}static _parseValue(e){for(;e.next();)switch(e.tag()){case 1:return e.getString();case 2:return e.getFloat();case 3:return e.getDouble();case 4:return e.getInt64();case 5:return e.getUInt64();case 6:return e.getSInt64();case 7:return e.getBool();default:e.skip()}return null}}function ee(e,t){return e.iconMosaicItem&&t.iconMosaicItem?e.iconMosaicItem.page===t.iconMosaicItem.page?0:e.iconMosaicItem.page-t.iconMosaicItem.page:e.iconMosaicItem&&!t.iconMosaicItem?1:!e.iconMosaicItem&&t.iconMosaicItem?-1:0}class te extends R{constructor(e,t,r,i,n,s,a,l){if(super(e,t),this.type=3,this._markerMap=new Map,this._glyphMap=new Map,this._glyphBufferDataStorage=new Map,this._isIconSDF=!1,e.hasDataDrivenIcon!==r.isDataDriven())throw new Error("incompatible icon buffer");if(e.hasDataDrivenText!==n.isDataDriven())throw new Error("incompatible text buffer");this._iconVertexBuffer=r,this._iconIndexBuffer=i,this._textVertexBuffer=n,this._textIndexBuffer=s,this._placementEngine=a,this._workerTileHandler=l}get markerPageMap(){return this._markerMap}get glyphsPageMap(){return this._glyphMap}get symbolInstances(){return this._symbolInstances}getResources(e,t,r){const i=this.layer,n=this.zoom,s=i.hasDataDrivenIcon,a=i.hasDataDrivenText;e&&e.setExtent(this.layerExtent);const l=i.getLayoutProperty("icon-image"),c=i.getLayoutProperty("text-field"),h=[];let x,u,f,d,y,g,p,_,m,V,I=[1,1,1,1],B=1,D=1,w=[1,1,1,1],b=1,v=1;for(const P of this._features){const M=P.getGeometry(e);if(!M||0===M.length)continue;let L,k;l&&(L=i.getLayoutValue("icon-image",n,P),l.isDataDriven||(L=this._replaceKeys(L,P.values)),L&&(t.add(L),x=i.getLayoutValue("icon-rotate",n,P),u=i.getLayoutValue("icon-anchor",n,P),f=i.getLayoutValue("icon-offset",n,P)));let T=!1;if(c&&(k=i.getLayoutValue("text-field",n,P),k&&!c.isDataDriven&&(k=this._replaceKeys(k,P.values)),k)){switch(k=k.replace(/\\n/g,"\n"),i.getLayoutValue("text-transform",n,P)){case 2:k=k.toLowerCase();break;case 1:k=k.toUpperCase()}if(te._bidiEngine.hasBidiChar(k)){let e;e="rtl"===te._bidiEngine.checkContextual(k)?"IDNNN":"ICNNN",k=te._bidiEngine.bidiTransform(k,e,"VLYSN"),T=!0}const e=k.length;if(e>0){V=i.getLayoutValue("text-font",n,P);for(const t of V){let i=r[t];i||(i=r[t]=new Set);for(let t=0;t<e;t++){const e=k.charCodeAt(t);i.add(e)}}d=i.getLayoutValue("text-rotate",n,P),y=i.getLayoutValue("text-anchor",n,P),g=i.getLayoutValue("text-offset",n,P),p=i.getLayoutValue("text-justify",n,P),_=i.getLayoutValue("text-letter-spacing",n,P),m=i.getLayoutValue("text-max-width",n,P)}}if(!L&&!k)continue;const A=i.getLayoutValue("icon-size",n,P),E=i.getLayoutValue("text-size",n,P);i.hasDataDrivenIconColor&&(I=i.getPaintValue("icon-color",n,P)),i.hasDataDrivenIconOpacity&&(B=i.getPaintValue("icon-opacity",n,P)),i.hasDataDrivenIconSize&&(D=A),i.hasDataDrivenTextColor&&(w=i.getPaintValue("text-color",n,P)),i.hasDataDrivenTextOpacity&&(b=i.getPaintValue("text-opacity",n,P)),i.hasDataDrivenTextSize&&(v=E);const C=i.getLayoutValue("symbol-sort-key",n,P),N={sprite:L,label:k,rtl:T,type:P.type,geometry:M,hash:(k?o(k):0)^(L?o(L):0),priority:C,iconSize:A,iconRotate:x,ddIconValues:s?{color:I,opacity:B,size:D}:null,iconAnchor:u,iconOffset:f,textSize:E,textRotate:d,ddTextValues:a?{color:w,opacity:b,size:v}:null,textAnchor:y,textOffset:g,textJustify:p,textLetterSpacing:_,textMaxWidth:m,textFontArray:V};h.push(N)}this._symbolFeatures=h}processFeatures(t){t&&t.setExtent(this.layerExtent);const r=this.layer,i=this.zoom,n=r.getLayoutValue("symbol-placement",i),s=0!==n,a=8*r.getLayoutValue("symbol-spacing",i),l=r.getLayoutProperty("icon-image"),o=r.getLayoutProperty("text-field"),x=l?new c(r,i,s):null,u=o?new h(r,i,s):null,f=this._workerTileHandler;let d;l&&(d=f.getSpriteItems()),this._iconIndexStart=3*this._iconIndexBuffer.index,this._textIndexStart=3*this._textIndexBuffer.index,this._iconIndexCount=0,this._textIndexCount=0,this._markerMap.clear(),this._glyphMap.clear();const y=[];let g=1;u&&u.size&&(g=u.size/24);const p=u?u.maxAngle*e:0,_=u?8*u.size:0;for(const e of this._symbolFeatures){let t,r;x&&d&&e.sprite&&(t=d[e.sprite],t&&t.sdf&&(this._isIconSDF=!0)),t&&(x.size=e.iconSize,x.rotate=e.iconRotate,x.offset=e.iconOffset);let i=0;const l=e.label;if(l){u.size=e.textSize,u.rotate=e.textRotate,u.anchor=e.textAnchor,u.fontArray=e.textFontArray,u.justify=e.textJustify,u.letterSpacing=e.textLetterSpacing,u.maxWidth=e.textMaxWidth,u.offset=e.textOffset;const t=s?u.keepUpright:u.writingMode&&u.writingMode.indexOf(1)>=0;let n=.5;switch(u.anchor){case 5:case 1:case 7:n=0;break;case 6:case 2:case 8:n=1}let a=.5;switch(u.anchor){case 5:case 3:case 6:a=0;break;case 7:case 4:case 8:a=1}let o=.5;switch(u.justify){case 0:o=n;break;case 1:o=0;break;case 3:o=1}const c=24*u.letterSpacing,h=s?0:24*u.maxWidth,x=24*u.lineHeight;let d,y;if(d=u.fontArray.map((e=>f.getGlyphItems(e))),y=new N(d,h,x,c,n,a,o),r=y.getShaping(l,e.rtl,t),r&&r.length>0){let e=1e30,t=-1e30;for(const i of r)e=Math.min(e,i.x),t=Math.max(t,i.x);i=(t-e+48)*g*8}}for(let o of e.geometry){const l=[];if(1===n){if(r&&r.length>0&&u&&u.size){const e=8*u.size*(2+Math.min(2,4*Math.abs(u.offset[1])));o=te._smoothVertices(o,e)}te._pushAnchors(l,o,a,i)}else 2===n?te._pushCenterAnchor(l,o):3===e.type?te._pushCentroid(l,o):l.push(new S(o[0].x,o[0].y));for(const n of l){if(n.x<0||n.x>4096||n.y<0||n.y>4096)continue;if(s&&i>0&&0===u.rotationAlignment&&!te._honorsTextMaxAngle(o,n,i,p,_))continue;const a={shaping:r,line:o,iconMosaicItem:t,anchor:n,symbolFeature:e,textColliders:[],iconColliders:[],textVertexRanges:[],iconVertexRanges:[]};y.push(a),this._processFeature(a,x,u)}}}y.sort(ee),this._addPlacedGlyphs(),this._symbolInstances=y}serialize(){let e=13;e+=this.layerUIDs.length,e+=3*this.markerPageMap.size,e+=3*this.glyphsPageMap.size,e+=te.symbolsSerializationLength(this._symbolInstances),e+=this._iconVertexBuffer.array.length,e+=this._iconIndexBuffer.array.length,e+=this._textVertexBuffer.array.length,e+=this._textIndexBuffer.array.length;let t=0;const r=new Uint32Array(e),i=new Int32Array(r.buffer),n=new Float32Array(r.buffer);r[t++]=this.type,r[t++]=this.layerUIDs.length;for(let s=0;s<this.layerUIDs.length;s++)r[t++]=this.layerUIDs[s];r[t++]=this._isIconSDF?1:0,r[t++]=this._iconVertexBuffer.isDataDriven()?1:0,r[t++]=this._textVertexBuffer.isDataDriven()?1:0,r[t++]=this.markerPageMap.size,this.markerPageMap.forEach((([e,i],n)=>{r[t++]=n,r[t++]=e,r[t++]=i})),r[t++]=this.glyphsPageMap.size,this.glyphsPageMap.forEach((([e,i],n)=>{r[t++]=n,r[t++]=e,r[t++]=i})),r[t++]=this._iconVertexBuffer.index/4,r[t++]=this._textVertexBuffer.index/4,t=te.serializeSymbols(r,i,n,t,this._symbolInstances),r[t++]=this._iconVertexBuffer.array.length;for(let s=0;s<this._iconVertexBuffer.array.length;s++)i[t++]=this._iconVertexBuffer.array[s];r[t++]=this._iconIndexBuffer.array.length;for(let s=0;s<this._iconIndexBuffer.array.length;s++)r[t++]=this._iconIndexBuffer.array[s];r[t++]=this._textVertexBuffer.array.length;for(let s=0;s<this._textVertexBuffer.array.length;s++)i[t++]=this._textVertexBuffer.array[s];r[t++]=this._textIndexBuffer.array.length;for(let s=0;s<this._textIndexBuffer.array.length;s++)r[t++]=this._textIndexBuffer.array[s];return r.buffer}static symbolsSerializationLength(e){let t=0;t+=1;for(const r of e||[]){t+=4,t+=1;for(const e of r.textColliders)t+=10;for(const e of r.iconColliders)t+=10;t+=1,t+=2*r.textVertexRanges.length,t+=1,t+=2*r.iconVertexRanges.length}return t}static serializeSymbols(e,t,r,i,n){n=n||[],t[i++]=n.length;for(const s of n){t[i++]=s.anchor.x,t[i++]=s.anchor.y,t[i++]=s.symbolFeature.hash,t[i++]=s.symbolFeature.priority,t[i++]=s.textColliders.length+s.iconColliders.length;for(const e of s.textColliders)t[i++]=e.xTile,t[i++]=e.yTile,t[i++]=e.dxPixels,t[i++]=e.dyPixels,t[i++]=e.hard?1:0,t[i++]=e.partIndex,r[i++]=e.minLod,r[i++]=e.maxLod,t[i++]=e.width,t[i++]=e.height;for(const e of s.iconColliders)t[i++]=e.xTile,t[i++]=e.yTile,t[i++]=e.dxPixels,t[i++]=e.dyPixels,t[i++]=e.hard?1:0,t[i++]=e.partIndex,r[i++]=e.minLod,r[i++]=e.maxLod,t[i++]=e.width,t[i++]=e.height;t[i++]=s.textVertexRanges.length;for(const[e,r]of s.textVertexRanges)t[i++]=e,t[i++]=r;t[i++]=s.iconVertexRanges.length;for(const[e,r]of s.iconVertexRanges)t[i++]=e,t[i++]=r}return i}_replaceKeys(e,t){return e.replace(/{([^{}]+)}/g,(function(e,r){return r in t?t[r]:""}))}_processFeature(e,t,r){const i=e.line,n=e.iconMosaicItem,s=e.shaping,a=e.anchor,l=!!n;let o=!0;l&&(o=t.optional||!n);const c=s&&s.length>0;let h,u,f=!0;if(c&&(f=r.optional||!s||0===s.length),l&&(h=this._placementEngine.getIconPlacement(a,n,t)),(h||o)&&(c&&(u=this._placementEngine.getTextPlacement(a,s,i,r)),u||f)){if(h&&u||(f||o?f||u?o||h||(u=null):h=null:(h=null,u=null)),u&&(this._storePlacedGlyphs(e,u.shapes,this.zoom,r.rotationAlignment),u.textColliders)){e.textColliders=u.textColliders;for(const e of u.textColliders){e.minLod=Math.max(this.zoom+x(e.minLod),0),e.maxLod=Math.min(this.zoom+x(e.maxLod),25);const t=e.angle;if(t){const r=Math.cos(t),i=Math.sin(t),n=e.dxPixels*r-e.dyPixels*i,s=e.dxPixels*i+e.dyPixels*r,a=(e.dxPixels+e.width)*r-e.dyPixels*i,l=(e.dxPixels+e.width)*i+e.dyPixels*r,o=e.dxPixels*r-(e.dyPixels+e.height)*i,c=e.dxPixels*i+(e.dyPixels+e.height)*r,h=(e.dxPixels+e.width)*r-(e.dyPixels+e.height)*i,x=(e.dxPixels+e.width)*i+(e.dyPixels+e.height)*r,u=Math.min(n,a,o,h),f=Math.max(n,a,o,h),d=Math.min(s,l,c,x),y=Math.max(s,l,c,x);e.dxPixels=u,e.dyPixels=d,e.width=f-u,e.height=y-d}}}if(h&&(this._addPlacedIcons(e,h.shapes,this.zoom,n.page,1===t.rotationAlignment),h.iconColliders)){e.iconColliders=h.iconColliders;for(const e of h.iconColliders){e.minLod=Math.max(this.zoom+x(e.minLod),0),e.maxLod=Math.min(this.zoom+x(e.maxLod),25);const t=e.angle;if(t){const r=Math.cos(t),i=Math.sin(t),n=e.dxPixels*r-e.dyPixels*i,s=e.dxPixels*i+e.dyPixels*r,a=(e.dxPixels+e.width)*r-e.dyPixels*i,l=(e.dxPixels+e.width)*i+e.dyPixels*r,o=e.dxPixels*r-(e.dyPixels+e.height)*i,c=e.dxPixels*i+(e.dyPixels+e.height)*r,h=(e.dxPixels+e.width)*r-(e.dyPixels+e.height)*i,x=(e.dxPixels+e.width)*i+(e.dyPixels+e.height)*r,u=Math.min(n,a,o,h),f=Math.max(n,a,o,h),d=Math.min(s,l,c,x),y=Math.max(s,l,c,x);e.dxPixels=u,e.dyPixels=d,e.width=f-u,e.height=y-d}}}}}_addPlacedIcons(e,t,r,i,n){const s=e.symbolFeature.ddIconValues,a=Math.max(r-1,0),l=this._iconVertexBuffer,o=this._iconIndexBuffer,c=this._markerMap;for(const h of t){const t=n?0:Math.max(r+x(h.minzoom),a),u=n?25:Math.min(r+x(h.maxzoom),25);if(u<=t)continue;const f=h.tl,d=h.tr,y=h.bl,g=h.br,p=h.mosaicRect,_=h.labelAngle,m=h.minAngle,V=h.maxAngle,I=h.anchor,B=l.index,D=p.x,w=p.y,b=D+p.width,v=w+p.height,P=l.index;l.add(I.x,I.y,f.x,f.y,D,w,_,m,V,t,u,s),l.add(I.x,I.y,d.x,d.y,b,w,_,m,V,t,u,s),l.add(I.x,I.y,y.x,y.y,D,v,_,m,V,t,u,s),l.add(I.x,I.y,g.x,g.y,b,v,_,m,V,t,u,s),e.iconVertexRanges.length>0&&e.iconVertexRanges[0][0]+e.iconVertexRanges[0][1]===P?e.iconVertexRanges[0][1]+=4:e.iconVertexRanges.push([P,4]),o.add(B+0,B+1,B+2),o.add(B+1,B+2,B+3),c.has(i)?c.get(i)[1]+=6:c.set(i,[this._iconIndexStart+this._iconIndexCount,6]),this._iconIndexCount+=6}}_addPlacedGlyphs(){const e=this._textVertexBuffer,t=this._textIndexBuffer,r=this._glyphMap;this._glyphBufferDataStorage.forEach(((i,n)=>{for(const s of i){const i=e.index,a=s.symbolInstance,l=a.symbolFeature.ddTextValues,o=e.index;e.add(s.glyphAnchor[0],s.glyphAnchor[1],s.tl[0],s.tl[1],s.xmin,s.ymin,s.labelAngle,s.minAngle,s.maxAngle,s.minLod,s.maxLod,l),e.add(s.glyphAnchor[0],s.glyphAnchor[1],s.tr[0],s.tr[1],s.xmax,s.ymin,s.labelAngle,s.minAngle,s.maxAngle,s.minLod,s.maxLod,l),e.add(s.glyphAnchor[0],s.glyphAnchor[1],s.bl[0],s.bl[1],s.xmin,s.ymax,s.labelAngle,s.minAngle,s.maxAngle,s.minLod,s.maxLod,l),e.add(s.glyphAnchor[0],s.glyphAnchor[1],s.br[0],s.br[1],s.xmax,s.ymax,s.labelAngle,s.minAngle,s.maxAngle,s.minLod,s.maxLod,l),a.textVertexRanges.length>0&&a.textVertexRanges[0][0]+a.textVertexRanges[0][1]===o?a.textVertexRanges[0][1]+=4:a.textVertexRanges.push([o,4]),t.add(i+0,i+1,i+2),t.add(i+1,i+2,i+3),r.has(n)?r.get(n)[1]+=6:r.set(n,[this._textIndexStart+this._textIndexCount,6]),this._textIndexCount+=6}})),this._glyphBufferDataStorage.clear()}_storePlacedGlyphs(e,t,r,i){const n=Math.max(r-1,0),s=1===i;let a,l,o,c,h,u,f,d,y,g,p;for(const _ of t)a=s?0:Math.max(r+x(_.minzoom),n),l=s?25:Math.min(r+x(_.maxzoom),25),l<=a||(o=_.tl,c=_.tr,h=_.bl,u=_.br,f=_.labelAngle,d=_.minAngle,y=_.maxAngle,g=_.anchor,p=_.mosaicRect,this._glyphBufferDataStorage.has(_.page)||this._glyphBufferDataStorage.set(_.page,[]),this._glyphBufferDataStorage.get(_.page).push({glyphAnchor:[g.x,g.y],tl:[o.x,o.y],tr:[c.x,c.y],bl:[h.x,h.y],br:[u.x,u.y],xmin:p.x,ymin:p.y,xmax:p.x+p.width,ymax:p.y+p.height,labelAngle:f,minAngle:d,maxAngle:y,minLod:a,maxLod:l,placementLod:n,symbolInstance:e}))}static _pushAnchors(e,t,r,i){r+=i;let n=0;const s=t.length-1;for(let x=0;x<s;x++)n+=V.distance(t[x],t[x+1]);let a=i||r;if(a*=.5,n<=a)return;const l=a/n;let o=0,c=-(r=n/Math.max(Math.round(n/r),1))/2;const h=t.length-1;for(let x=0;x<h;x++){const i=t[x],n=t[x+1],s=n.x-i.x,a=n.y-i.y,h=Math.sqrt(s*s+a*a);let f;for(;c+r<o+h;){c+=r;const t=(c-o)/h,d=u(i.x,n.x,t),y=u(i.y,n.y,t);void 0===f&&(f=Math.atan2(a,s)),e.push(new S(d,y,f,x,l))}o+=h}}static _pushCenterAnchor(e,t){let r=0;const i=t.length-1;for(let l=0;l<i;l++)r+=V.distance(t[l],t[l+1]);const n=r/2;let s=0;const a=t.length-1;for(let l=0;l<a;l++){const r=t[l],i=t[l+1],a=i.x-r.x,o=i.y-r.y,c=Math.sqrt(a*a+o*o);if(n<s+c){const t=(n-s)/c,h=u(r.x,i.x,t),x=u(r.y,i.y,t),f=Math.atan2(o,a);return void e.push(new S(h,x,f,l,0))}s+=c}}static _deviation(e,t,r){const i=(t.x-e.x)*(r.x-t.x)+(t.y-e.y)*(r.y-t.y),n=(t.x-e.x)*(r.y-t.y)-(t.y-e.y)*(r.x-t.x);return Math.atan2(n,i)}static _honorsTextMaxAngle(e,t,r,i,n){let s=0;const a=r/2;let l=new V(t.x,t.y),o=t.segment+1;for(;s>-a;){if(--o,o<0)return!1;s-=V.distance(e[o],l),l=e[o]}s+=V.distance(e[o],e[o+1]);const c=[];let h=0;const x=e.length;for(;s<a;){const t=e[o];let r,a=o;do{if(++a,a===x)return!1;r=e[a]}while(r.isEqual(t));let l,u=a;do{if(++u,u===x)return!1;l=e[u]}while(l.isEqual(r));const f=this._deviation(t,r,l);for(c.push({deviation:f,distToAnchor:s}),h+=f;s-c[0].distToAnchor>n;)h-=c.shift().deviation;if(Math.abs(h)>i)return!1;s+=V.distance(r,l),o=a}return!0}static _smoothVertices(e,t){if(t<=0)return e;let r=e.length;if(r<3)return e;const i=[];let n=0,s=0;i.push(0);for(let d=1;d<r;d++){const t=V.distance(e[d],e[d-1]);t>0&&(n+=t,i.push(n),s++,s!==d&&(e[s]=e[d]))}if(r=s+1,r<3)return e;t=Math.min(t,.2*n);const a=e[0].x,l=e[0].y,o=e[r-1].x,c=e[r-1].y,h=V.sub(e[0],e[1]);h.normalize(),e[0].x+=t*h.x,e[0].y+=t*h.y,h.assignSub(e[r-1],e[r-2]),h.normalize(),e[r-1].x+=t*h.x,e[r-1].y+=t*h.y,i[0]-=t,i[r-1]+=t;const x=[];x.push(new V(a,l));const u=1e-6,f=.5*t;for(let d=1;d<r-1;d++){let n=0,s=0,a=0;for(let r=d-1;r>=0;r--){const l=f+i[r+1]-i[d];if(l<0)break;const o=i[r+1]-i[r],c=i[d]-i[r]<f?1:l/o;if(c<u)break;const h=c*c,x=c*l-.5*h*o,y=c*o/t,g=e[r+1],p=e[r].x-g.x,_=e[r].y-g.y;n+=y/x*(g.x*c*l+.5*h*(l*p-o*g.x)-h*c*o*p/3),s+=y/x*(g.y*c*l+.5*h*(l*_-o*g.y)-h*c*o*_/3),a+=y}for(let l=d+1;l<r;l++){const r=f-i[l-1]+i[d];if(r<0)break;const o=i[l]-i[l-1],c=i[l]-i[d]<f?1:r/o;if(c<u)break;const h=c*c,x=c*r-.5*h*o,y=c*o/t,g=e[l-1],p=e[l].x-g.x,_=e[l].y-g.y;n+=y/x*(g.x*c*r+.5*h*(r*p-o*g.x)-h*c*o*p/3),s+=y/x*(g.y*c*r+.5*h*(r*_-o*g.y)-h*c*o*_/3),a+=y}x.push(new V(n/a,s/a))}return x.push(new V(o,c)),e[0].x=a,e[0].y=l,e[r-1].x=o,e[r-1].y=c,x}static _pushCentroid(e,t){const r=4096,i=4096,n=t.length-1;let s=0,a=0,l=0,o=t[0].x,c=t[0].y;o>r&&(o=r),o<0&&(o=0),c>i&&(c=i),c<0&&(c=0);for(let h=1;h<n;h++){let e=t[h].x,n=t[h].y,x=t[h+1].x,u=t[h+1].y;e>r&&(e=r),e<0&&(e=0),n>i&&(n=i),n<0&&(n=0),x>r&&(x=r),x<0&&(x=0),u>i&&(u=i),u<0&&(u=0);const f=(e-o)*(u-c)-(x-o)*(n-c);s+=f*(o+e+x),a+=f*(c+n+u),l+=f}s/=3*l,a/=3*l,isNaN(s)||isNaN(a)||e.push(new S(s,a))}}te._bidiEngine=new T;const re=new Float32Array(1),ie=new Uint32Array(re.buffer);class ne extends H{constructor(e){super(e?20:12),this._isDataDriven=e}isDataDriven(){return this._isDataDriven}add(e,t,r,i,n,s,a,l){const o=this.array;let c=H.i1616to32(e,t);if(o.push(c),c=H.i8888to32(Math.round(31*r),Math.round(31*i),Math.round(31*n),Math.round(31*s)),o.push(c),c=H.i1616to32(a,0),o.push(c),this._isDataDriven){if(!l)throw new Error("Expecting data driven values.");const e=l.color,t=e[3]*l.opacity*255;o.push(H.i8888to32(e[0]*t,e[1]*t,e[2]*t,t)),re[0]=l.size,o.push(ie[0])}}}class se extends H{constructor(e){super(e?8:4),this._isDataDriven=e}isDataDriven(){return this._isDataDriven}add(e,t,r){const i=this.array;if(i.push(H.i1616to32(e,t)),this._isDataDriven){if(!r)throw new Error("Expecting data driven values.");const e=r.color,t=e[3]*r.opacity*255;i.push(H.i8888to32(e[0]*t,e[1]*t,e[2]*t,t))}}}class ae extends H{constructor(e){super(e?12:8),this._isDataDriven=e}isDataDriven(){return this._isDataDriven}add(e,t,r,i,n,s,a){const l=this.array,o=this.index;let c=H.i1616to32(e,t);if(l.push(c),c=H.i8888to32(Math.round(15*r),Math.round(15*i),n,s),l.push(c),this._isDataDriven){if(!a)throw new Error("Expecting data driven values.");const e=a.color,t=e[3]*a.opacity*255;l.push(H.i8888to32(e[0]*t,e[1]*t,e[2]*t,t))}return o}}class le extends H{constructor(e){super(e?24:16),this._isDataDriven=e}isDataDriven(){return this._isDataDriven}add(e,t,r,i,n,s,l,o,c,h,x,u){const f=this.array;let d=H.i1616to32(e,t);if(f.push(d),d=H.i1616to32(Math.round(8*r),Math.round(8*i)),f.push(d),d=H.i8888to32(n/4,s/4,o,c),f.push(d),d=H.i8888to32(0,a(l),10*h,Math.min(10*x,255)),f.push(d),this._isDataDriven){if(!u)throw new Error("Expecting data driven values.");const e=u.color,t=e[3]*u.opacity*255;f.push(H.i8888to32(e[0]*t,e[1]*t,e[2]*t,t)),re[0]=u.size,f.push(ie[0])}}}class oe extends H{constructor(){super(16)}add(e,t,r,i,n,s,a,l,o,c,h){const x=this.array;let u=H.i1616to32(2*e+r,2*t+i);x.push(u);const f=s[3]*a*255;u=H.i8888to32(s[0]*f,s[1]*f,s[2]*f,f),x.push(u);const d=c[3]*h*255;u=H.i8888to32(c[0]*d,c[1]*d,c[2]*d,d),x.push(u),u=H.i8888to32(Math.min(32*l,255),Math.min(4*o,255),Math.min(n,255),0),x.push(u)}}class ce{constructor(e,t,r,i,n){if(this._pbfTiles={},this._tileClippers={},this._client=r,this._tile=t,n){this._styleLayerUIDs=new Set;for(const e of n)this._styleLayerUIDs.add(e)}this._styleRepository=i,this._layers=this._styleRepository.layers;const[s,a,l]=t.tileKey.split("/").map(parseFloat);this._level=s;const o=Math.max(8,Math.round(1*this._level)-8);for(const c of Object.keys(e)){const t=e[c];if(this._pbfTiles[c]=new f(new Uint8Array(t.protobuff),new DataView(t.protobuff)),t.refKey){const[e]=t.refKey.split("/").map(parseFloat),r=s-e;if(r>0){const e=(1<<r)-1,t=a&e,i=l&e;this._tileClippers[c]=new v(r,t,i,8,o)}}this._tileClippers[c]||(this._tileClippers[c]=new P)}}_canParseStyleLayer(e){return!this._styleLayerUIDs||this._styleLayerUIDs.has(e)}async parse(e){const t=this._initialize(e),{returnedBuckets:r}=t;this._processLayers(t),this._linkReferences(t),this._filterFeatures(t);const i=new Set,n={};for(const a of r)3===a.type&&a.getResources(a.tileClipper,i,n);if(this._tile.status===A.INVALID)return d([]);const s=this._fetchResources(i,n,e);return y(s).then((()=>this._processFeatures(t.returnedBuckets)))}_initialize(e){return{signal:e&&e.signal,sourceNameToTileData:this._parseTileData(this._pbfTiles),layers:this._layers,zoom:this._level,sourceNameToTileClipper:this._tileClippers,sourceNameToUniqueSourceLayerBuckets:{},sourceNameToUniqueSourceLayers:{},returnedBuckets:[],layerIdToBucket:{},referencerUIDToReferencedId:new Map}}_processLayers(e){const{sourceNameToTileData:t,layers:r,zoom:i,sourceNameToTileClipper:n,sourceNameToUniqueSourceLayerBuckets:s,sourceNameToUniqueSourceLayers:a,returnedBuckets:l,layerIdToBucket:o,referencerUIDToReferencedId:c}=e;for(let h=r.length-1;h>=0;h--){const e=r[h];if(!this._canParseStyleLayer(e.uid)||e.minzoom&&i<Math.floor(e.minzoom)||e.maxzoom&&i>=e.maxzoom||0===e.type)continue;if(!t[e.source]||!n[e.source])continue;const x=t[e.source],u=n[e.source],f=e.sourceLayer,d=x[f];if(d){let t=a[e.source];if(t||(t=a[e.source]=new Set),t.add(e.sourceLayer),e.refLayerId)c.set(e.uid,e.refLayerId);else{const t=this._createBucket(e);if(t){t.layerUIDs=[e.uid],t.layerExtent=d.extent,t.tileClipper=u;let r=s[e.source];r||(r=s[e.source]={});let i=r[f];i||(i=r[f]=[]),i.push(t),l.push(t),o[e.id.toLowerCase()]=t}}}}}_linkReferences(e){const{layerIdToBucket:t,referencerUIDToReferencedId:r}=e;r.forEach(((e,r)=>{e=e.toLowerCase(),t[e]&&t[e].layerUIDs.push(r)}))}_filterFeatures(e){const{signal:t,sourceNameToTileData:r,sourceNameToUniqueSourceLayerBuckets:i,sourceNameToUniqueSourceLayers:n}=e,s=10*this._level,a=10*(this._level+1),l=[],o=[];for(const c of Object.keys(n))n[c].forEach((e=>{l.push(e),o.push(c)}));for(let c=0;c<l.length;c++){const e=o[c],n=l[c];if(!r[e]||!i[e])continue;const h=r[e][n],x=i[e][n];if(!x||0===x.length)continue;if(g(t))return;const u=h.getData();for(;u.nextTag(2);){const e=u.getMessage(),t=new j(e,h);e.release();const r=t.values;if(r){const e=r._minzoom;if(e&&e>=a)continue;const t=r._maxzoom;if(t&&t<=s)continue}for(const i of x)i.pushFeature(t)}}}_fetchResources(e,t,r){const i=[],n=this._tile.getWorkerTileHandler();let s,a;e.size>0&&(s=n.fetchSprites(e,this._client,r),i.push(s));for(const l in t){const e=t[l];e.size>0&&(a=n.fetchGlyphs(this._tile.tileKey,l,e,this._client,r),i.push(a))}return i}_processFeatures(e){const t=e.filter((e=>e.hasFeatures()));for(const r of t)r.processFeatures(r.tileClipper);return t}_parseTileData(e){const t={};for(const r of Object.keys(e)){const i=e[r],n={};for(;i.next();)switch(i.tag()){case 3:{const e=i.getMessage(),t=new X(e);e.release(),n[t.name]=t;break}default:i.skip()}t[r]=n}return t}_createBucket(e){switch(e.type){case 0:return null;case 1:return this._createFillBucket(e);case 2:return this._createLineBucket(e);case 4:return this._createCircleBucket(e);case 3:return this._createSymbolBucket(e)}}_createFillBucket(e){return new K(e,this._level,new se(e.hasDataDrivenFill),new W,new ae(e.hasDataDrivenOutline),new W)}_createLineBucket(e){return new $(e,this._level,new ne(e.hasDataDrivenLine),new W)}_createCircleBucket(e){return new G(e,this._level,new oe,new W)}_createSymbolBucket(e){const t=this._tile;return new te(e,this._level,new le(e.hasDataDrivenIcon),new W,new le(e.hasDataDrivenText),new W,t.placementEngine,t.getWorkerTileHandler())}}class he{constructor(e,t,r,i){this.status=A.INITIALIZED,this.placementEngine=new U,this.tileKey=e,this.refKeys=t,this._workerTileHandler=r,this._styleRepository=i}release(){this.tileKey="",this.refKeys=null,this.status=A.INITIALIZED,this._workerTileHandler=null}async parse(e,t,r){const i=r&&r.signal;if(p(i)){const e=()=>{i.removeEventListener("abort",e),this.status=A.INVALID};i.addEventListener("abort",e)}let n;try{n=await this._parse(e,r)}catch(a){if(_(a))throw a;return{result:[],transferList:[]}}this.status=A.READY;const s=[];for(const l of n){const e=l.serialize();s.push(e)}return{result:s,transferList:s.length<=t&&s}}setObsolete(){this.status=A.INVALID}getLayers(){return this._workerTileHandler.getLayers()}getWorkerTileHandler(){return this._workerTileHandler}async _parse(e,t){const r=e.sourceName2DataAndRefKey;return 0===Object.keys(r).length?[]:(this.status=A.MODIFIED,new ce(r,this,t.client,this._styleRepository,e.styleLayerUIDs).parse(t))}}export default class{constructor(){this._spriteInfo={},this._glyphInfo={}}reset(){return this._spriteInfo={},this._glyphInfo={},d()}getLayers(){var e;return null==(e=this._styleRepository)?void 0:e.layers}async createTileAndParse(e,t){const{key:r}=e,i={};for(const a of Object.keys(e.sourceName2DataAndRefKey)){const t=e.sourceName2DataAndRefKey[a];i[a]=t.refKey}const n=new he(r,i,this,this._styleRepository);try{return await n.parse(e,this._vectorTileLayerMaxBuffers,t)}catch(s){if(n.setObsolete(),n.release(),!_(s))throw s;return null}}updateStyle(e){if(!e||0===e.length||!this._styleRepository)return;const t=this._styleRepository;for(const r of e){const e=r.type,i=r.data;switch(e){case 0:t.setPaintProperties(i.layer,i.paint);break;case 1:t.setLayoutProperties(i.layer,i.layout);break;case 3:t.deleteStyleLayer(i.layerName);break;case 2:t.setStyleLayer(i.layer,i.index)}}}setStyle(e){this._styleRepository=new m(e.style),this._spriteInfo={},this._glyphInfo={},this._vectorTileLayerMaxBuffers=e.vectorTileLayerMaxBuffers}fetchSprites(e,t,r){const i=[],n=this._spriteInfo;return e.forEach((e=>{void 0===n[e]&&i.push(e)})),0===i.length?d():t.invoke("getSprites",i,{signal:r&&r.signal}).then((e=>{for(const t in e){const r=e[t];n[t]=r}}))}getSpriteItems(){return this._spriteInfo}fetchGlyphs(e,t,r,i,n){const s=[];let a=this._glyphInfo[t];return a?r.forEach((e=>{a[e]||s.push(e)})):(a=this._glyphInfo[t]=[],r.forEach((e=>s.push(e)))),0===s.length?d():i.invoke("getGlyphs",{tileID:e,font:t,codePoints:s},n).then((e=>{for(let t=0;t<e.length;t++)e[t]&&(a[t]=e[t])}))}getGlyphItems(e){return this._glyphInfo[e]}}
