var e=Object.defineProperty,t=Object.prototype.hasOwnProperty,r=Object.getOwnPropertySymbols,s=Object.prototype.propertyIsEnumerable,a=(t,r,s)=>r in t?e(t,r,{enumerable:!0,configurable:!0,writable:!0,value:s}):t[r]=s,i=(e,i)=>{for(var o in i||(i={}))t.call(i,o)&&a(e,o,i[o]);if(r)for(var o of r(i))s.call(i,o)&&a(e,o,i[o]);return e};import{L as o,M as n,N as l,P as p,iG as y,iH as u,Q as c,R as h,S as m,T as d,V as g,aQ as b,aE as f,k as v,U as x,iu as S,iI as w,O,m as j,ai as I,c4 as E,z as q,eL as M,h$ as P,e as L,y as N,b as J,o as R,iJ as F,hE as U,aC as T,i as A}from"./vendor.1ee57f36.js";import{e as V}from"./scaleUtils.89be4879.js";import{y as $}from"./index.4894e768.js";let _=class extends(o(n(l(p(y(u(c(h(m(d(g(b(f))))))))))))){constructor(...e){super(...e),this.alwaysRefetch=!1,this.dpi=96,this.gdbVersion=null,this.imageFormat="png24",this.imageMaxHeight=2048,this.imageMaxWidth=2048,this.imageTransparency=!0,this.labelsVisible=!1,this.isReference=null,this.operationalLayerType="ArcGISMapServiceLayer",this.sourceJSON=null,this.sublayers=null,this.type="map-image",this.url=null}normalizeCtorArgs(e,t){return"string"==typeof e?i({url:e},t):e}load(e){const t=v(e)?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Map Service"]},e).then((()=>this._fetchService(t)),(()=>this._fetchService(t)))),x(this)}readImageFormat(e,t){const r=t.supportedImageFormatTypes;return r&&r.indexOf("PNG32")>-1?"png32":"png24"}writeSublayers(e,t,r,s){if(!this.loaded||!e)return;const a=e.slice().reverse().flatten((({sublayers:e})=>e&&e.toArray().reverse())).toArray();let o=!1;if(this.capabilities&&this.capabilities.operations.supportsExportMap&&this.capabilities.exportMap.supportsDynamicLayers){const e=S(s.origin);if(3===e){const e=this.createSublayersForOrigin("service").sublayers;o=w(a,e,2)}else if(e>3){const e=this.createSublayersForOrigin("portal-item");o=w(a,e.sublayers,S(e.origin))}}const n=[],l=i({writeSublayerStructure:o},s);let p=o;a.forEach((e=>{const t=e.write({},l);n.push(t),p=p||"user"===e.originOf("visible")})),n.some((e=>Object.keys(e).length>1))&&(t.layers=n),p&&(t.visibleLayers=a.filter((e=>e.visible)).map((e=>e.id)))}createExportImageParameters(e,t,r,s){const a=s&&s.pixelRatio||1;e&&this.version>=10&&(e=e.clone().shiftCentralMeridian());const o=new $({layer:this,scale:V({extent:e,width:t})*a}),n=o.toJSON();o.destroy();const l=!s||!s.rotation||this.version<10.3?{}:{rotation:-s.rotation},p=e&&e.spatialReference,y=p.wkid||JSON.stringify(p.toJSON());n.dpi*=a;const u={};if(null!=s&&s.timeExtent){const{start:e,end:t}=s.timeExtent.toJSON();u.time=e&&t&&e===t?""+e:`${null==e?"null":e},${null==t?"null":t}`}else this.timeInfo&&!this.timeInfo.hasLiveData&&(u.time="null,null");return i(i(i({bbox:e&&e.xmin+","+e.ymin+","+e.xmax+","+e.ymax,bboxSR:y,imageSR:y,size:t+","+r},n),l),u)}async fetchImage(e,t,r,s){const a={responseType:"image"};s&&s.timestamp&&(a.query=i(i({},a.query),{_ts:s.timestamp})),s&&s.signal&&(a.signal=s.signal),this.customParameters&&Object.keys(this.customParameters).length&&(a.query=i(i({},this.customParameters),a.query));const o=this.parsedUrl.path+"/export",n=i(i(i({},this.parsedUrl.query),this.createExportImageParameters(e,t,r,s)),{f:"image",_ts:this.alwaysRefetch?Date.now():null});return null==n.dynamicLayers||this.capabilities.exportMap.supportsDynamicLayers?(a.query?a.query=i(i({},n),a.query):a.query=n,I(o,a).then((e=>e.data)).catch((e=>{if(E(e))throw e;throw new j("mapimagelayer:image-fetch-error",`Unable to load image: ${o}`,{error:e})}))):O(new j("mapimagelayer:dynamiclayer-not-supported",`service ${this.url} doesn't support dynamic layers, which is required to be able to change the sublayer's order, rendering, labeling or source.`,{query:n}))}async fetchRecomputedExtents(e={}){const t=i(i({},e),{query:{returnUpdates:!0,f:"json"}}),{data:r}=await I(this.url,t),{extent:s,fullExtent:a,timeExtent:o}=r,n=s||a;return{fullExtent:n&&q.fromJSON(n),timeExtent:o&&M.fromJSON({start:o[0],end:o[1]})}}loadAll(){return P(this,(e=>{e(this.allSublayers)}))}async _fetchService(e){if(this.sourceJSON)return void this.read(this.sourceJSON,{origin:"service",url:this.parsedUrl});const{data:t,ssl:r}=await I(this.parsedUrl.path,{query:i(i({f:"json"},this.parsedUrl.query),this.customParameters),signal:e});r&&(this.url=this.url.replace(/^http:/i,"https:")),this.sourceJSON=t,this.read(t,{origin:"service",url:this.parsedUrl})}};L([N()],_.prototype,"alwaysRefetch",void 0),L([N()],_.prototype,"dpi",void 0),L([N()],_.prototype,"gdbVersion",void 0),L([N({json:{read:!1,write:!1}})],_.prototype,"popupEnabled",void 0),L([N()],_.prototype,"imageFormat",void 0),L([J("imageFormat",["supportedImageFormatTypes"])],_.prototype,"readImageFormat",null),L([N({json:{origins:{service:{read:{source:"maxImageHeight"}}}}})],_.prototype,"imageMaxHeight",void 0),L([N({json:{origins:{service:{read:{source:"maxImageWidth"}}}}})],_.prototype,"imageMaxWidth",void 0),L([N()],_.prototype,"imageTransparency",void 0),L([N({json:{read:!1,write:!1}})],_.prototype,"labelsVisible",void 0),L([N({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],_.prototype,"isReference",void 0),L([N({type:["ArcGISMapServiceLayer"]})],_.prototype,"operationalLayerType",void 0),L([N()],_.prototype,"sourceJSON",void 0),L([N({json:{write:{ignoreOrigin:!0}}})],_.prototype,"sublayers",void 0),L([R("sublayers",{layers:{type:[F]},visibleLayers:{type:[U]}})],_.prototype,"writeSublayers",null),L([N({type:["show","hide","hide-children"]})],_.prototype,"listMode",void 0),L([N({json:{read:!1},readOnly:!0,value:"map-image"})],_.prototype,"type",void 0),L([N(T)],_.prototype,"url",void 0),_=L([A("esri.layers.MapImageLayer")],_);var k=_;export default k;
