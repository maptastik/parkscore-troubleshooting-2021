var e=Object.defineProperty,t=Object.prototype.hasOwnProperty,r=Object.getOwnPropertySymbols,a=Object.prototype.propertyIsEnumerable,o=(t,r,a)=>r in t?e(t,r,{enumerable:!0,configurable:!0,writable:!0,value:a}):t[r]=a,s=(e,s)=>{for(var i in s||(s={}))t.call(s,i)&&o(e,i,s[i]);if(r)for(var i of r(s))a.call(s,i)&&o(e,i,s[i]);return e};import{hZ as i,bb as n,J as l,m as p,I as c,g as d,e as u,y as h,X as y,b as m,z as f,ar as v,aC as g,o as w,i as S,fQ as I,a7 as b,a8 as x,k as _,a9 as O,ac as R,ad as N,a0 as j,i0 as P,O as T,ai as E,a1 as A,eR as U,ff as K,aZ as L}from"./vendor.1ee57f36.js";import{getSiblingOfSameTypeI as F}from"./resourceUtils.004767e5.js";function q(e){return e&&"getAtOrigin"in e&&"originOf"in e}function M(e){e&&e.writtenProperties&&e.writtenProperties.forEach((e=>{const t=e.target;e.newOrigin&&e.oldOrigin!==e.newOrigin&&q(t)&&t.updateOrigin(e.propName,e.newOrigin)}))}async function $(e,t,r){if(!t||!t.resources)return;const a=t.portalItem===e.portalItem?new Set(e.paths):new Set;e.paths.length=0,e.portalItem=t.portalItem;const o=new Set(t.resources.toKeep.map((e=>e.resource.path))),s=new Set,c=[];o.forEach((t=>{a.delete(t),e.paths.push(t)}));for(const n of t.resources.toUpdate)if(a.delete(n.resource.path),o.has(n.resource.path)||s.has(n.resource.path)){const{resource:t,content:a,finish:o,error:s}=n,l=F(t,i());e.paths.push(l.path),c.push(C({resource:l,content:a,finish:o,error:s},r))}else e.paths.push(n.resource.path),c.push(k(n,r)),s.add(n.resource.path);for(const i of t.resources.toAdd)c.push(C(i,r)),e.paths.push(i.resource.path);if(a.forEach((e=>{const r=t.portalItem.resourceFromPath(e);c.push(r.portalItem.removeResource(r).catch((()=>{})))})),0===c.length)return;const d=await n(c);l(r);const u=d.filter((e=>"error"in e)).map((e=>e.error));if(u.length>0)throw new p("save:resources","Failed to save one or more resources",{errors:u})}async function C(e,t){const r=await c(e.resource.portalItem.addResource(e.resource,e.content,t));if(!0!==r.ok)throw e.error&&e.error(r.error),r.error;e.finish&&e.finish(e.resource)}async function k(e,t){const r=await c(e.resource.update(e.content,t));if(!0!==r.ok)throw e.error(r.error),r.error;e.finish(e.resource)}const z=d.getLogger("esri.layers.mixins.SceneService"),J=e=>{let t=class extends e{constructor(){super(...arguments),this.spatialReference=null,this.fullExtent=null,this.heightModelInfo=null,this.minScale=0,this.maxScale=0,this.version={major:Number.NaN,minor:Number.NaN,versionString:""},this.copyright=null,this.sublayerTitleMode="item-title",this.title=null,this.layerId=null,this._debouncedSaveOperations=I((async(e,t,r)=>{switch(e){case 0:return this._save(t);case 1:return this._saveAs(r,t)}}))}readSpatialReference(e,t){return this._readSpatialReference(t)}_readSpatialReference(e){if(null!=e.spatialReference)return y.fromJSON(e.spatialReference);{const t=e.store,r=t.indexCRS||t.geographicCRS,a=r&&parseInt(r.substring(r.lastIndexOf("/")+1,r.length),10);return null!=a?new y(a):null}}readFullExtent(e,t){const r=t.store,a=this._readSpatialReference(t);return null==a||null==r||null==r.extent||!Array.isArray(r.extent)||r.extent.some((e=>e<D))?null:new f({xmin:r.extent[0],ymin:r.extent[1],xmax:r.extent[2],ymax:r.extent[3],spatialReference:a})}readVersion(e,t){const r=t.store,a=null!=r.version?r.version.toString():"",o={major:Number.NaN,minor:Number.NaN,versionString:a},s=a.split(".");return s.length>=2&&(o.major=parseInt(s[0],10),o.minor=parseInt(s[1],10)),o}readTitlePortalItem(e){return"item-title"!==this.sublayerTitleMode?void 0:e}readTitleService(e,t){const r=this.portalItem&&this.portalItem.title;if("item-title"===this.sublayerTitleMode)return b(this.url,t.name);let a=t.name;if(!a&&this.url){const e=x(this.url);_(e)&&(a=e.title)}return"item-title-and-service-name"===this.sublayerTitleMode&&r&&(a=r+" - "+a),O(a)}set url(e){const t=R(this,e,z);this._set("url",t.url),null!=t.layerId&&this._set("layerId",t.layerId)}writeUrl(e,t,r,a){N(this,e,"layers",t,a)}get parsedUrl(){const e=this._get("url");if(!e)return null;const t=j(e);return null!=this.layerId&&P(t.path)&&(t.path=`${t.path}/layers/${this.layerId}`),t}async _verifyRootNodeAndUpdateExtent(e,t){if(e)try{return this._updateExtentFromRootPage(e,await this._fetchRootPage(e,t))}catch(r){}return this._updateExtentFromRootNode(await this._fetchRootNode(t))}async _fetchRootPage(e,t){if(!e)return T();const r=Math.floor(e.rootIndex/e.nodesPerPage),a=`${this.parsedUrl.path}/nodepages/${r}`;return(await E(a,{responseType:"json",signal:t})).data}_updateExtentFromRootPage(e,t){if(null==t||null==t.nodes)throw new p("sceneservice:invalid-node-page","Inavlid node page.");const r=t.nodes[e.rootIndex%e.nodesPerPage];if(null==r||null==r.obb||null==r.obb.center||null==r.obb.halfSize)throw new p("sceneservice:invalid-node-page","Inavlid node page.");if(r.obb.center[0]<D)return;const a=r.obb.halfSize,o=r.obb.center[2],s=Math.sqrt(a[0]*a[0]+a[1]*a[1]+a[2]*a[2]);this.fullExtent.zmin=o-s,this.fullExtent.zmax=o+s}_updateExtentFromRootNode(e){if(null==e||null==this.fullExtent||this.fullExtent.hasZ)return;if(!Array.isArray(e.mbs)||4!==e.mbs.length||e.mbs[0]<D)return;const t=e.mbs[2],r=e.mbs[3];this.fullExtent.zmin=t-r,this.fullExtent.zmax=t+r}async _fetchRootNode(e){if(!this.rootNode)return;const t=A(this.parsedUrl.path,this.rootNode);try{return(await E(t,{query:{f:"json"},responseType:"json",signal:e})).data}catch(r){throw new p("sceneservice:root-node-missing","Root node missing.",{error:r,url:t})}}async _fetchService(e){if(null==this.layerId&&/SceneServer\/*$/i.test(this.url)){const t=await this._fetchFirstLayerId(e);null!=t&&(this.layerId=t)}return this._fetchServiceLayer(e)}async _fetchFirstLayerId(e){const t=await E(this.url,{query:{f:"json"},responseType:"json",signal:e});if(t.data&&Array.isArray(t.data.layers)&&t.data.layers.length>0)return t.data.layers[0].id}async _fetchServiceLayer(e){const t=await E(this.parsedUrl.path,{query:{f:"json"},responseType:"json",signal:e});t.ssl&&(this.url=this.url.replace(/^http:/i,"https:"));const r=t.data;this.read(r,{origin:"service",url:this.parsedUrl}),this.validateLayer(r)}async _ensureLoadBeforeSave(){await this.load(),"beforeSave"in this&&"function"==typeof this.beforeSave&&await this.beforeSave()}validateLayer(e){}_updateTypeKeywords(e,t,r){e.typeKeywords||(e.typeKeywords=[]);const a=t.getTypeKeywords();for(const o of a)e.typeKeywords.push(o);e.typeKeywords&&(e.typeKeywords=e.typeKeywords.filter(((e,t,r)=>r.indexOf(e)===t)),1===r&&(e.typeKeywords=e.typeKeywords.filter((e=>"Hosted Service"!==e))))}async _saveAs(e,t){const r=s(s({},Z),t);let a=U.from(e);a||(z.error("_saveAs(): requires a portal item parameter"),await T(new p("sceneservice:portal-item-required","_saveAs() requires a portal item to save to"))),a.id&&(a=a.clone(),a.id=null);const o=a.portal||K.getDefault();await this._ensureLoadBeforeSave(),a.type=V,a.portal=o;const i={origin:"portal-item",url:null,messages:[],portal:o,portalItem:a,writtenProperties:[],blockedRelativeUrls:[],resources:{toAdd:[],toUpdate:[],toKeep:[],pendingOperations:[]}},n={layers:[this.write(null,i)]};return await L(i.resources.pendingOperations),await this._validateAgainstJSONSchema(n,i,r),a.url=this.url,a.title||(a.title=this.title),this._updateTypeKeywords(a,r,1),await o._signIn(),await o.user.addItem({item:a,folder:r&&r.folder,data:n}),await $(this.resourceReferences,i,null),this.portalItem=a,M(i),i.portalItem=a,a}async _save(e){const t=s(s({},Z),e);this.portalItem||(z.error("_save(): requires the .portalItem property to be set"),await T(new p("sceneservice:portal-item-not-set","Portal item to save to has not been set on this SceneService"))),this.portalItem.type!==V&&(z.error("_save(): Non-matching portal item type. Got "+this.portalItem.type+", expected "+V),await T(new p("sceneservice:portal-item-wrong-type",`Portal item needs to have type "${V}"`))),await this._ensureLoadBeforeSave();const r={origin:"portal-item",url:this.portalItem.itemUrl&&j(this.portalItem.itemUrl),messages:[],portal:this.portalItem.portal||K.getDefault(),portalItem:this.portalItem,writtenProperties:[],blockedRelativeUrls:[],resources:{toAdd:[],toUpdate:[],toKeep:[],pendingOperations:[]}},a={layers:[this.write(null,r)]};return await L(r.resources.pendingOperations),await this._validateAgainstJSONSchema(a,r,t),this.portalItem.url=this.url,this.portalItem.title||(this.portalItem.title=this.title),this._updateTypeKeywords(this.portalItem,t,0),await this.portalItem.update({data:a}),await $(this.resourceReferences,r,null),M(r),this.portalItem}async _validateAgainstJSONSchema(e,t,r){let a=t.messages.filter((e=>"error"===e.type)).map((e=>new p(e.name,e.message,e.details)));if(r&&r.validationOptions.ignoreUnsupported&&(a=a.filter((e=>"layer:unsupported"!==e.name&&"symbol:unsupported"!==e.name&&"symbol-layer:unsupported"!==e.name&&"property:unsupported"!==e.name&&"url:unsupported"!==e.name&&"scenemodification:unsupported"!==e.name))),r.validationOptions.enabled||B){const t=(await import("./schemaValidator.303b1d52.js")).validate(e,r.portalItemLayerType);if(t.length>0){const e=`Layer item did not validate:\n${t.join("\n")}`;if(z.error(`_validateAgainstJSONSchema(): ${e}`),"throw"===r.validationOptions.failPolicy){const e=t.map((e=>new p("sceneservice:schema-validation",e))).concat(a);throw new p("sceneservice-validate:error","Failed to save layer item due to schema validation, see `details.errors`.",{combined:e})}}}if(a.length>0)throw new p("sceneservice:save","Failed to save SceneService due to unsupported or invalid content. See 'details.errors' for more detailed information",{errors:a})}};return u([h({json:{origins:{service:{read:!1},"portal-item":{read:!1}}}})],t.prototype,"id",void 0),u([h({type:y})],t.prototype,"spatialReference",void 0),u([m("spatialReference",["spatialReference","store.indexCRS","store.geographicCRS"])],t.prototype,"readSpatialReference",null),u([h({type:f})],t.prototype,"fullExtent",void 0),u([m("fullExtent",["store.extent","spatialReference","store.indexCRS","store.geographicCRS"])],t.prototype,"readFullExtent",null),u([h({readOnly:!0,type:v})],t.prototype,"heightModelInfo",void 0),u([h({type:Number,json:{name:"layerDefinition.minScale",write:!0,origins:{service:{read:{source:"minScale"},write:!1}}}})],t.prototype,"minScale",void 0),u([h({type:Number,json:{name:"layerDefinition.maxScale",write:!0,origins:{service:{read:{source:"maxScale"},write:!1}}}})],t.prototype,"maxScale",void 0),u([h({readOnly:!0})],t.prototype,"version",void 0),u([m("version",["store.version"])],t.prototype,"readVersion",null),u([h({type:String,json:{read:{source:"copyrightText"}}})],t.prototype,"copyright",void 0),u([h({type:String,json:{read:!1}})],t.prototype,"sublayerTitleMode",void 0),u([h({type:String})],t.prototype,"title",void 0),u([m("portal-item","title")],t.prototype,"readTitlePortalItem",null),u([m("service","title",["name"])],t.prototype,"readTitleService",null),u([h({type:Number,json:{origins:{service:{read:{source:"id"}},"portal-item":{write:{target:"id",isRequired:!0,ignoreOrigin:!0},read:!1}}}})],t.prototype,"layerId",void 0),u([h(g)],t.prototype,"url",null),u([w("url")],t.prototype,"writeUrl",null),u([h({dependsOn:["layerId"]})],t.prototype,"parsedUrl",null),u([h({readOnly:!0})],t.prototype,"store",void 0),u([h({type:String,readOnly:!0,json:{read:{source:"store.rootNode"}}})],t.prototype,"rootNode",void 0),t=u([S("esri.layers.mixins.SceneService")],t),t},D=-1e38,B=!1,V="Scene Service",Z={getTypeKeywords:()=>[],portalItemLayerType:"unknown",validationOptions:{enabled:!0,ignoreUnsupported:!1,failPolicy:"throw"}};export{J as T,q as i};
